########################################################################################################################
# Happy Hare MMU 软件
#
# 针对具有虚拟选择器（Type-B设计，如Box Turtle, Night Owl, Angry Beaver等）的MMU的模板文件
# 此文件省略了选择器和选择器舵机配置，以及一些不适用的选项
#
# 根据你的设置编辑此文件
#
# 版权所有 (C) 2022  moggieuk#6538 (discord) moggieuk@hotmail.com
# 本文件可以根据GNU GPLv3许可协议进行分发。
#
# 目标：Klipper模块的主要配置参数
#
# (\_/)
# ( *,*)
# (")_(") Happy Hare 已准备好
#
# 注：
#   宏配置在 'mmu_macro_vars.cfg' 中单独指定。
#   完整详情见：https://github.com/moggieuk/Happy-Hare/tree/main/doc/configuration.md
#
[mmu]
happy_hare_version: 3.1        # 请勿修改，用于升级检测

# MMU 硬件限制 --------------------------------------------------------------------------------------------------
# ██╗     ██╗███╗   ███╗██╗████████╗███████╗
# ██║     ██║████╗ ████║██║╚══██╔══╝██╔════╝
# ██║     ██║██╔████╔██║██║   ██║   ███████╗
# ██║     ██║██║╚██╔╝██║██║   ██║   ╚════██║
# ███████╗██║██║ ╚═╝ ██║██║   ██║   ███████║
# ╚══════╝╚═╝╚═╝     ╚═╝╚═╝   ╚═╝   ╚══════╝
#
# 定义你的MMU的物理限制。这些设置将被遵循，无论个别的速度设置如何。
#
gear_max_velocity: 300			# 永远不超过的齿轮速度，无论具体参数如何
gear_max_accel: 1500			# 永远不超过的齿轮加速度，无论具体参数如何


# 日志 --------------------------------------------------------------------------------------------------------------
# ██╗      ██████╗  ██████╗  ██████╗ ██╗███╗   ██╗ ██████╗ 
# ██║     ██╔═══██╗██╔════╝ ██╔════╝ ██║████╗  ██║██╔════╝ 
# ██║     ██║   ██║██║  ███╗██║  ███╗██║██╔██╗ ██║██║  ███╗
# ██║     ██║   ██║██║   ██║██║   ██║██║██║╚██╗██║██║   ██║
# ███████╗╚██████╔╝╚██████╔╝╚██████╔╝██║██║ ╚████║╚██████╔╝
# ╚══════╝ ╚═════╝  ╚═════╝  ╚═════╝ ╚═╝╚═╝  ╚═══╝ ╚═════╝ 
#
# log_level 和 logfile_level 可以设置为以下值之一（0 = 仅基本信息，1 = 信息，2 = 调试，3 = 跟踪，4 = 步进器移动）
# 通常可以将控制台日志级别保持在最低，同时仍将调试输出发送到 mmu.log 文件
# 在初次设置时，提高控制台日志级别是有用的，这样就不必频繁打开日志文件
# 注意：如果没有调试问题，建议不要将日志级别设置为大于2（调试），因为会增加额外的开销
#
log_level: 1
log_file_level: 2			# 也可以设置为-1，完全禁用日志文件
log_statistics: 1 			# 1表示每次工具更换时记录统计数据（默认），0表示禁用（但仍然记录）
log_visual: 1				# 1表示记录耗材的可视化表现，0 = 禁用
log_startup_status: 1		# 是否在启动时记录工具到耗材通道的状态，1 = 概要（默认），0 = 禁用


# 移动速度 ------------------------------------------------------------------------------------------------------
# ███████╗██████╗ ███████╗███████╗██████╗ ███████╗
# ██╔════╝██╔══██╗██╔════╝██╔════╝██╔══██╗██╔════╝
# ███████╗██████╔╝█████╗  █████╗  ██║  ██║███████╗
# ╚════██║██╔═══╝ ██╔══╝  ██╔══╝  ██║  ██║╚════██║
# ███████║██║     ███████╗███████╗██████╔╝███████║
# ╚══════╝╚═╝     ╚══════╝╚══════╝╚═════╝ ╚══════╝
#
# 长距离移动比短距离移动速度快，用于大多数的挤出管道移动。你可以设置两个快速加载速度，
# 取决于是从料盘还是耗材缓冲区加载（如果有且不是第一次加载）。这对于
# 允许从缓冲区更快地加载和从料盘更慢地加载（由于额外的摩擦，防止丢失步进）很有帮助。
# 卸料速度可以调节，如果你有一个限制的重绕系统，可能会影响最大速度。
# 注意：编码器无法跟上超过 450mm/s 的速度，因此在非常高的速度下，确保关闭 'bowden_apply_correction'！
#
gear_from_spool_speed: 80               # mm/s 从料盘加载时的速度（如果有耗材缓冲区且不是第一次加载）
gear_from_spool_accel: 100              # 从料盘加载时的加速度
gear_from_buffer_speed: 150             # mm/s 从缓冲区加载时的速度。保守的为 100mm/s，最大约为 400mm/s
gear_from_buffer_accel: 400             # 从缓冲区加载时的正常加速度
gear_unload_speed: 80                   # mm/s 卸料时的速度（默认为 "从料盘" 速度）
gear_unload_accel: 100                  # 卸料时的加速度（默认为 "从料盘" 加速度）
#
gear_short_move_speed: 80               # mm/s 短距离移动时的速度（如增量回抽与编码器配合使用）
gear_short_move_accel: 600              # 通常与 gear_from_buffer_accel 相同（用于短距离移动）
gear_short_move_threshold: 70           # 控制应用 'short_move' 速度/加速度的移动距离
gear_homing_speed: 50                   # mm/s 仅齿轮步进器的归零速度（例如归零到耗材通道或挤出机）

# 挤出机移动速度。'sync' 速度将在齿轮和挤出机步进器同步移动时使用
#
extruder_load_speed: 16                 # mm/s 从归零位置到熔融区的加载移动速度
extruder_unload_speed: 16               # mm/s 挤出机内部的卸料移动速度（熔融区的初始移动速度是此速度的 50%）
extruder_sync_load_speed: 18            # mm/s 挤出机同步加载移动速度
extruder_sync_unload_speed: 18          # mm/s 挤出机同步卸料移动速度
extruder_homing_speed: 18               # mm/s 仅挤出机的归零速度（例如归零到工具头传感器）

# 当 Happy Hare 调用宏进行用户自定义操作时，以及停车操作时，这些设置会被应用，
# 并且操作完成后，之前的值会自动恢复。这允许在任何起始状态下，确保可预测的移动速度。
#
macro_toolhead_max_accel: 0             # 执行宏时应用的默认打印机工具头加速度。0 = 使用打印机最大值
macro_toolhead_min_cruise_ratio: 0.5    # 执行宏时应用的默认打印机巡航比



# 耗材通道加载/卸载 -----------------------------------------------------------------------------------------------
#  ██████╗  █████╗ ████████╗███████╗    ██╗      ██████╗  █████╗ ██████╗ 
# ██╔════╝ ██╔══██╗╚══██╔══╝██╔════╝    ██║     ██╔═══██╗██╔══██╗██╔══██╗
# ██║  ███╗███████║   ██║   █████╗      ██║     ██║   ██║███████║██║  ██║
# ██║   ██║██╔══██║   ██║   ██╔══╝      ██║     ██║   ██║██╔══██║██║  ██║
# ╚██████╔╝██║  ██║   ██║   ███████╗    ███████╗╚██████╔╝██║  ██║██████╔╝
#  ╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚══════╝    ╚══════╝ ╚═════╝ ╚═╝  ╚═╝╚═════╝ 
#
# 这些设置控制耗材在耗材通道的加载和卸载，耗材通道是 MMU 内的停放位置。
# 通常，这将是一个开关传感器，但你也可以使用编码器。即使使用编码器，限位开关仍然可以是一个开关，
# 编码器则用于移动验证（请参阅高级选项 'gate_endstop_to_encoder'）。
# 请注意，由于编码器的工作方式，它会稍微过冲。然而，这在实际操作中不是问题，
# 因为过冲会在随后的移动中被自动补偿。正的停放距离是向 MMU 移动，负的则是穿过限位开关向工具头移动。
# 如果 MMU 具有多个挤出管道，则可以在挤出机传感器处归零，从而避免长距离的挤出管道移动！
#
# 可能的 gate_homing_endstop 名称：
#   encoder       - 使用编码器的移动检测耗材位置
#   mmu_gate      - 使用耗材通道限位开关
#   mmu_gear      - 使用每个耗材通道的单独限位开关（类型B的MMU）
#   extruder      - 使用挤出机入口传感器（仅适用于某些类型B设计，见 [mmu_machine] require_bowden_move 设置）
#
gate_homing_endstop: mmu_gate       # 耗材通道限位开关的名称，"encoder" 强制使用编码器进行停放
gate_homing_max: 70                 # 最大的归零距离，用于归零到耗材通道（编码器停放的实际移动距离）
gate_preload_homing_max: 70         # 最大的归零距离，用于归零到 mmu_gear 限位开关（如果MMU配有此开关）
gate_unload_buffer: 50              # 减少快速卸料的量，以防止耗材在停放时超调
gate_parking_distance: 23           # 在耗材通道停放的位置（距离限位开关/编码器点的距离）
gate_endstop_to_encoder: 10         # 耗材通道限位开关到编码器的距离（如果两者都安装，正值表示编码器在限位开关之后）
gate_autoload: 1                    # 如果安装了预耗材通道传感器，这控制自动加载耗材通道
gate_final_eject_distance: 0        # 在弹出时而不是卸载时喷射耗材的距离


# Bowden管加载/卸载 ----------------------------------------------------------------------------------------
# ██████╗  ██████╗ ██╗    ██╗██████╗ ███████╗███╗   ██╗    ██╗      ██████╗  █████╗ ██████╗ 
# ██╔══██╗██╔═══██╗██║    ██║██╔══██╗██╔════╝████╗  ██║    ██║     ██╔═══██╗██╔══██╗██╔══██╗
# ██████╔╝██║   ██║██║ █╗ ██║██║  ██║█████╗  ██╔██╗ ██║    ██║     ██║   ██║███████║██║  ██║
# ██╔══██╗██║   ██║██║███╗██║██║  ██║██╔══╝  ██║╚██╗██║    ██║     ██║   ██║██╔══██║██║  ██║
# ██████╔╝╚██████╔╝╚███╔███╔╝██████╔╝███████╗██║ ╚████║    ███████╗╚██████╔╝██║  ██║██████╔╝
# ╚═════╝  ╚═════╝  ╚══╝╚══╝ ╚═════╝ ╚══════╝╚═╝  ╚═══╝    ╚══════╝ ╚═════╝ ╚═╝  ╚═╝╚═════╝ 
#
# 除了为缓冲和非缓冲耗材设置不同的Bowden加载速度，还可以检测到由于“剧烈拉扯”重卷轴而导致的错步。
# 如果启用Bowden修正，驱动器将“相信”编码器读取，并进行修正移动，使耗材位置接近Bowden管末端的
# ‘bowden_allowable_load_delta’（这需要一个可靠的编码器，并且不推荐用于非常高速加载 >350mm/s）
#
bowden_apply_correction: 0		    # 1 启用，0 禁用。需要编码器
bowden_allowable_load_delta: 20.0	# 修正移动尝试接近目标位置的最大容差（单位：mm）。需要编码器

# 这个测试验证在快速Bowden移动前，耗材是否从挤出机中被清除，以减少磨损耗材的可能性
bowden_pre_unload_test: 1		    # 1 检查Bowden移动前的耗材状态（较慢），0 不检查（较快）。需要编码器

# 高级选项：如果启用了预卸载测试，这控制检测成功的Bowden预卸载测试，并表示实际移动与编码器检测之间的允许不匹配的百分比。
# 设置为50%的容差通常效果很好。增加容差会使测试更宽容。设置为100%基本上禁用错误检测
bowden_pre_unload_error_tolerance: 50


# 挤出机归零 -----------------------------------------------------------------------------------------------------
# ███████╗██╗  ██╗████████╗    ██╗  ██╗ ██████╗ ███╗   ███╗██╗███╗   ██╗ ██████╗ 
# ██╔════╝╚██╗██╔╝╚══██╔══╝    ██║  ██║██╔═══██╗████╗ ████║██║████╗  ██║██╔════╝ 
# █████╗   ╚███╔╝    ██║       ███████║██║   ██║██╔████╔██║██║██╔██╗ ██║██║  ███╗
# ██╔══╝   ██╔██╗    ██║       ██╔══██║██║   ██║██║╚██╔╝██║██║██║╚██╗██║██║   ██║
# ███████╗██╔╝ ██╗   ██║██╗    ██║  ██║╚██████╔╝██║ ╚═╝ ██║██║██║ ╚████║╚██████╔╝
# ╚══════╝╚═╝  ╚═╝   ╚═╝╚═╝    ╚═╝  ╚═╝ ╚═════╝ ╚═╝     ╚═╝╚═╝╚═╝  ╚═══╝ ╚═════╝ 
#
# Happy Hare 需要一个靠近挤出机的参考“归零点”，以便精确完成对工具头的加载。
# 这个归零操作发生在快速长管加载之后，通常情况下，加载操作会使耗材刚好到达归零点之前。
# 如果使用工具头传感器，则此初始挤出机归零步骤是不必要的（但可以强制执行），
# 因为归零将在挤出机内部完成，以实现最佳精度。你仍然需要设置这个归零方法，
# 因为它也用于确定和校准长管长度。
#
# 除了“挤出机”传感器作为入口传感器外，Happy Hare 还可以通过与挤出机齿轮的碰撞来“感知”入口位置。
# 这可以通过基于编码器的碰撞检测、同步反馈（又称缓冲）传感器的压缩检测，或使用齿轮步进电机的“触碰”（stallguard）功能来实现。
# 需要注意的是，编码器碰撞检测不是完全确定性的，你需要通过调整 TMC 电流减少量来找到适合你设备的最佳设置。
# 另外，在碰撞检测期间降低电流也可以防止耗材被过度研磨。
#
# 可用的 `extruder_homing_endstop` 选项：
#   collision            - 通过监测编码器移动检测与挤出机齿轮的碰撞（需要编码器）
#                          快速长管加载会直接移动到挤出机齿轮位置
#   mmu_gear_touch       - 使用齿轮步进电机的触碰检测（需要 stallguard）
#                          快速长管加载会移动到 `extruder_homing_buffer` 设定的距离后，再归零
#   extruder             - 如果配置了“耗材入口”限位开关（需要 'extruder' 限位开关）
#                          快速长管加载会移动到 `extruder_homing_buffer` 设定的距离后，再归零
#   filament_compression - 如果配置了带压缩开关的“同步反馈”传感器
#                          快速长管加载会移动到 `extruder_homing_buffer` 设定的距离后，再归零
#   none                 - 不执行归零，仅在所有传感器选项都不可用时才可能选择该选项
#                          快速长管加载会直接移动到挤出机齿轮位置。如果使用工具头传感器，则此选项是可行的
# 注意：如果检测到工具头传感器，则 `homing_endstop` 选项将被忽略（相当于 "none"），
# 除非 `extruder_force_homing: 1` 被启用。
#
extruder_homing_max: 80			# 最大归零移动距离
extruder_homing_endstop: none	# 耗材归零方法/限位开关名称（如果工具头传感器不可用时的备用选项）
extruder_homing_buffer: 25		# 在快速长管加载时减少的移动量，以防止耗材超出挤出机归零点
extruder_collision_homing_current: 30	# 在执行挤出机归零时，齿轮步进电机的电流百分比（10%-100%），设置 100 以禁用电流减少

# 如果你有工具头传感器，它始终会被用作归零点，因此可能不需要在挤出机外部归零。
# 但是，你仍然可以通过启用该选项来强制执行这个初始归零步骤，
# 在这种情况下，耗材将先归零到挤出机，再归零到工具头传感器，形成两步归零过程。
#
extruder_force_homing: 0



# 工具头加载和卸载 ------------------------------------------------------------------------------------------------
# ████████╗ ██████╗  ██████╗ ██╗     ██╗  ██╗███████╗ █████╗ ██████╗     ██╗      ██████╗  █████╗ ██████╗ 
# ╚══██╔══╝██╔═══██╗██╔═══██╗██║     ██║  ██║██╔════╝██╔══██╗██╔══██╗    ██║     ██╔═══██╗██╔══██╗██╔══██╗
#    ██║   ██║   ██║██║   ██║██║     ███████║█████╗  ███████║██║  ██║    ██║     ██║   ██║███████║██║  ██║
#    ██║   ██║   ██║██║   ██║██║     ██╔══██║██╔══╝  ██╔══██║██║  ██║    ██║     ██║   ██║██╔══██║██║  ██║
#    ██║   ╚██████╔╝╚██████╔╝███████╗██║  ██║███████╗██║  ██║██████╔╝    ███████╗╚██████╔╝██║  ██║██████╔╝
#    ╚═╝    ╚═════╝  ╚═════╝ ╚══════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝     ╚══════╝ ╚═════╝ ╚═╝  ╚═╝╚═════╝ 
#
# 可以定义高度自定义的加载和卸载序列，但除非您有专通道的设置，否则最好选择内置的工具头加载和卸载序列，
# 它已经提供了较高的定制化程度。如果需要更多控制，您可以编辑 `mmu_sequence.cfg` 中的 _MMU_LOAD_SEQUENCE 和 _MMU_UNLOAD_SEQUENCE 宏。
# 但是，请小心操作！
#
# MMU 必须有一个已知的点来精确加载挤出机，这通常是挤出机入口（由上面的设置控制），
# 或者通过归零到工具头传感器。如果使用工具头传感器，则它会位于挤出机齿轮之后，驱动器需要知道
# 尝试归零的最大距离（从 Bowden 管末端移动的距离）。
#
toolhead_homing_max: 40			# 尝试归零到定义的限位开关的最大距离

# 重要：以下三个设置基于您的工具头的物理尺寸。
# 一旦确定了归零位置，Happy Hare 需要知道到喷嘴的最终移动距离。对于您的设置，只有一个正确的值。
# 使用 'toolhead_ooze_reduction'（它对应于喷嘴中剩余的耗材）来控制加载时的过多溢出。
# 详细信息请参见文档，里面有常见配置的表格。
#
# 注意：如果您有工具头传感器，可以自动计算这些参数！请阅读关于
# `MMU_CALIBRATE_TOOLHEAD` 命令的文档（https://github.com/moggieuk/Happy-Hare/wiki/Blobing-and-Stringing）
#
toolhead_extruder_to_nozzle: 72		# 从挤出机齿轮（入口）到喷嘴的距离
toolhead_sensor_to_nozzle: 62		# 从工具头传感器到喷嘴的距离（如果没有安装则忽略）
toolhead_entry_to_extruder: 8		# 从挤出机“入口”传感器到挤出机齿轮的距离（如果没有安装则忽略）

# 该设置表示在卸载耗材时喷嘴中剩余的残余耗材的数量，
# 它用于减少挤出机加载长度以防止过多的溢出，同时也用于计算清洗量。
# 请注意，此值也可以通过 `MMU_CALIBRATE_TOOLHEAD` 程序进行测量。
#
toolhead_residual_filament: 0		# 减少挤出机加载长度，因为喷嘴中剩余的耗材

# 调整：最后，这是修正溢出问题的最后手段调节值。预计该值应接近零，
# 它表示进一步减少挤出机加载长度以修正溢出。如果使用清理塔并且出现溢出，
# 请增加此值（减少加载的耗材量）。如果出现间隙，减少此值。如果间隙已经为零，
# 那么可能是 'toolhead_extruder_to_nozzle' 或 'toolhead_residual_filament' 设置不正确。
# 同样，如果值大于+5mm，说明上述四个设置可能有问题。
# 还可以查看 `mmu_macro_vars.cfg` 中的 'retract' 设置进行打印中的溢出调整。
#
toolhead_ooze_reduction: 0		# 减少挤出机加载长度以防止溢出（表示剩余的耗材）

# 在挤出机卸载时增加的移动距离，以确保耗材完全脱离挤出机。
# 这为稍微不正确的配置或挤出机滑动提供了一定的容差。
# 然而，不要以此为借口调整工具头设置。
#
toolhead_unload_safety_margin: 10	# 额外的移动安全边距（默认：10mm）

# 如果不同步齿轮和挤出机，且在工具更换后立即检测到“假”堵塞，
# 可能是由于长 Bowden 管和/或较大内径导致的耗材松弛。此可选移动将在加载后
# 根据当前堵塞检测长度的百分比紧固耗材。齿轮步进电机会以 50% 电流运行。
#
toolhead_post_load_tighten: 60		# 堵塞检测长度的百分比，0 表示禁用。如果 'sync_to_extruder: 1' 则忽略

# 高级：控制检测成功的挤出机加载/卸载运动，并表示实际运动与编码器检测之间允许的误差比例。
# 设置为 100% 容差基本上禁用检查。某些挤出机设计具有较短的移动距离，编码器可能未检测到并导致假错误。
# 这允许掩盖这些错误。然而，错误通常表示挤出机加载速度过快或耗材摩擦过大，在这种情况下不建议掩盖错误。
# 请先尝试减少摩擦并降低速度！
#
toolhead_move_error_tolerance: 60


# 喷嘴成型 ---------------------------------------------------------------------------------------------------------
# ████████╗██╗██████╗     ███████╗ ██████╗ ██████╗ ███╗   ███╗██╗███╗   ██╗ ██████╗ 
# ╚══██╔══╝██║██╔══██╗    ██╔════╝██╔═══██╗██╔══██╗████╗ ████║██║████╗  ██║██╔════╝ 
#    ██║   ██║██████╔╝    █████╗  ██║   ██║██████╔╝██╔████╔██║██║██╔██╗ ██║██║  ███╗
#    ██║   ██║██╔═══╝     ██╔══╝  ██║   ██║██╔══██╗██║╚██╔╝██║██║██║╚██╗██║██║   ██║
#    ██║   ██║██║         ██║     ╚██████╔╝██║  ██║██║ ╚═╝ ██║██║██║ ╚████║╚██████╔╝
#    ╚═╝   ╚═╝╚═╝         ╚═╝      ╚═════╝ ╚═╝  ╚═╝╚═╝     ╚═╝╚═╝╚═╝  ╚═══╝ ╚═════╝ 
#
# 喷嘴成型的责任可以由切片软件（打印过程中）和独立宏（不在打印过程中）分担，或者强制始终由 Happy Hare 的独立宏执行。
# 由于您始终需要在不使用切片软件的情况下形成喷嘴，因此通常将切片软件完全关闭，强制使用“独立”喷嘴成型并只在 Happy Hare 中调节。
#
# 当 Happy Hare 被要求形成喷嘴时，它将运行引用的宏。提供了两个参考示例，但您可以实现自己的宏：
#   _MMU_FORM_TIP .. 默认喷嘴成型，类似于流行的切片软件如 Superslicer 和 Prusaslicer
#   _MMU_CUT_TIP  .. 用于 Filametrix (ERCFv2) 或类似风格的工具头耗材切割系统
#
# 通常，增加挤出机电流以保证快速移动，确保高扭矩并避免步骤跳过是很有用的
#
# 如果选择使用切片软件进行喷嘴成型，则必须配置切片软件在挤出机中留下耗材的位置，因为无法确定这一点。
# 如果所有喷嘴成型操作都由 Happy Hare 执行，则可以忽略此设置。
#
force_form_tip_standalone: 1		 # 0 = 切片软件进行喷嘴成型，否则独立宏，1 = 始终使用独立喷嘴成型（关闭切片软件！）
form_tip_macro: _MMU_FORM_TIP            # 调用执行喷嘴成型（或切割）操作的宏名称
extruder_form_tip_current: 100		 # 形成喷嘴时使用的挤出机电流百分比（100%-150%）（100表示禁用）
slicer_tip_park_pos: 0			 # 指定切片软件完成喷嘴成型后挤出机中耗材的位置


# 齿轮/挤出机同步运动 ----------------------------------------------------------------------------------------------
# ███╗   ███╗ ██████╗ ████████╗ ██████╗ ██████╗     ███████╗██╗   ██╗███╗   ██╗ ██████╗
# ████╗ ████║██╔═══██╗╚══██╔══╝██╔═══██╗██╔══██╗    ██╔════╝╚██╗ ██╔╝████╗  ██║██╔════╝
# ██╔████╔██║██║   ██║   ██║   ██║   ██║██████╔╝    ███████╗ ╚████╔╝ ██╔██╗ ██║██║     
# ██║╚██╔╝██║██║   ██║   ██║   ██║   ██║██╔══██╗    ╚════██║  ╚██╔╝  ██║╚██╗██║██║     
# ██║ ╚═╝ ██║╚██████╔╝   ██║   ╚██████╔╝██║  ██║    ███████║   ██║   ██║ ╚████║╚██████╗
# ╚═╝     ╚═╝ ╚═════╝    ╚═╝    ╚═════╝ ╚═╝  ╚═╝    ╚══════╝   ╚═╝   ╚═╝  ╚═══╝ ╚═════╝
#
# 控制在打印过程中是否同步挤出机和齿轮步进电机的运动
# 如果通常使用最大电流驱动齿轮步进电机，可以通过 'sync_gear_current' 来减少电流
# 如果配备了 TMC 驱动器，可以控制齿轮和挤出机电机的电流，以优化性能。
# 这对于在同步电机运动时控制齿轮步进电机的温度非常有用。
#
sync_gear_current: 70			# 与挤出机同步时齿轮步进电机的电流百分比（10%-100%）

# 可选地，您可以利用一个反馈机制，通过 MMU 到挤出机之间的 Bowden 路径中的“压缩/扩展”传感器，
# 确保两个电机保持同步，以便耗材在两个电机间流动（信号反馈状态可以是由一个或两个开关提供的二进制值：
# -1（扩展）和 1（压缩）或介于 -1.0 和 1.0 之间的比例值）。需要在 [mmu_sensors] 设置中配置
#
sync_feedback_enable: 1			# 0 = 关闭（即使已安装传感器），1 = 开启
sync_multiplier_high: 1.05		# 应用于齿轮步进电机“旋转距离”的最大倍数
sync_multiplier_low: 0.95		# 应用于齿轮步进电机“旋转距离”的最小倍数


# 耗材管理选项 ------------------------------------------------------------------------------------------------------
# ███████╗██╗██╗            ███╗   ███╗ ██████╗ ███╗   ███╗████████╗
# ██╔════╝██║██║            ████╗ ████║██╔════╝ ████╗ ████║╚══██╔══╝
# █████╗  ██║██║            ██╔████╔██║██║  ███╗██╔████╔██║   ██║   
# ██╔══╝  ██║██║            ██║╚██╔╝██║██║   ██║██║╚██╔╝██║   ██║   
# ██║     ██║███████╗██╗    ██║ ╚═╝ ██║╚██████╔╝██║ ╚═╝ ██║   ██║   
# ╚═╝     ╚═╝╚══════╝╚═╝    ╚═╝     ╚═╝ ╚═════╝ ╚═╝     ╚═╝   ╚═╝   
#
# - 堵塞检测：当安装了编码器时，可以检测到耗材停止移动并暂停打印
# - 无限卷轴功能：允许检测一个卷轴耗材用完并自动映射工具到另一个备用卷轴（卷轴）。设置为 '1' 时，该功能需要堵塞检测、通道传感器或预通道传感器。
#   无限卷轴功能可以选择性地扩展，尝试加载空通道（当通道为空时）。在某些 MMU 设计（带线性选择器）中，它还可以配置为将剩余耗材弹出到指定的通道，而不是默认当前通道。
#
enable_clog_detection: 2		# 0 = 禁用，1 = 静态长度堵塞检测，2 = 自动长度堵塞检测
enable_endless_spool: 1			# 0 = 禁用，1 = 启用无限卷轴功能
endless_spool_on_load: 0		# 0 = 不应用无限卷轴功能加载，1 = 如果通道为空，启用无限卷轴功能
endless_spool_eject_gate: -1		# 弹出剩余耗材的通道位置，-1 = 当前通道
#endless_spool_groups:			# 默认无限卷轴组（请在文件后面查看）

# Spoolman 支持需要您首先在 Moonraker 中正确启用 spoolman。如果启用，通道 SpoolId 将用于从 spoolman 数据库加载耗材详细信息和颜色，
# 并且 Happy Hare 会在使用时激活/停用卷轴。启用变体允许使用本地地图或 spoolman 地图作为真实数据源，也可以仅获取耗材属性。
# 请参阅此表以了解说明：
#
#                    | 启用/   | 从 spoolman 获取耗材属性    | 在 spoolman 数据库        | 从 spoolman 数据库 |
#   spoolman_support | 停用    | 基于 spool_id 获取属性      | 显示耗材位？              | 提取耗材位         |
#   -----------------+---------+---------------------------+--------------------------+-------------------+
#        off         |     no  |           no              |        no                |        no         |
#        readonly    |     yes |           yes             |        no                |        no         |
#        push        |     yes |           yes             |        yes               |        no         |
#        pull        |     yes |           yes             |        yes               |        yes        |
#
#   off- 停用 spoolman 支持
#   readonly- 仅检索耗材属性，spoolman数据库永远不会被修改
#   push- 本地通道数据被视为真实来源，并将被推送至 spoolman
#   pull- 远程 spoolman 数据库被视为真实来源，并将被拉入本地通道数据
#
spoolman_support: pull         # off = 禁用，readonly = 启用，push = 本地通道映射，pull = 远程通道映射
pending_spool_id_timeout: 20   # 在 rfid 设置的 pending spool_id 过期的时间（秒）

# Mainsail/Fluid UI 可以在挤出机/工具选择器旁边可视化耗材的颜色。颜色是动态的，可以根据您的选择进行自定义：
#
#    slicer   - 来自切片软件工具映射的颜色（切片软件期望的颜色）
#    allgates - 来自所有工具的颜色，通过 TTG 映射
#    gatemap  - 如同 gatemap，但隐藏空工具
#
# 注意：如果启用了 spoolman，Happy Hare 还会将 'spool_id' 变量添加到 Tx 宏中。
#
t_macro_color: slicer			# 'slicer' = 默认 | 'allgates' = mmu | 'gatemap' = mmu，不显示空通道


# 打印统计信息 ---------------------------------------------------------------------------------------------------
# ███████╗████████╗ █████╗ ████████╗███████╗
# ██╔════╝╚══██╔══╝██╔══██╗╚══██╔══╝██╔════╝
# ███████╗   ██║   ███████║   ██║   ███████╗
# ╚════██║   ██║   ██╔══██║   ██║   ╚════██║
# ███████║   ██║   ██║  ██║   ██║   ███████║
# ╚══════╝   ╚═╝   ╚═╝  ╚═╝   ╚═╝   ╚══════╝
#
# 这些参数决定了打印统计数据在控制台中的显示方式。这个表格可以显示大量的数据，
# 可能比你想看到的还多。你可以根据需要启用/禁用选项。
#
# +-----------+---------------------+----------------------+----------+
# |  114(46)  |      卸载           |       加载           | 完成     |
# |   交换    | 前   |   -   | 后   |  前  |   -   |   后   | 交换    |
# +-----------+------+-------+------+------+-------+-------+----------+
# | 所有时间  | 0:07 | 47:19 | 0:00 | 0:01 | 37:11 | 33:39 |  2:00:38 |
# |    - 平均 | 0:00 |  0:24 | 0:00 | 0:00 |  0:19 |  0:17 |     1:03 |
# | 本次作业  | 0:00 | 10:27 | 0:00 | 0:00 |  8:29 |  8:30 |    28:02 |
# |    - 平均 | 0:00 |  0:13 | 0:00 | 0:00 |  0:11 |  0:11 |     0:36 |
# | 上次作业  | 0:00 |  0:12 | 0:00 | 0:00 |  0:10 |  0:14 |     0:39 |
# +-----------+------+-------+------+------+-------+-------+----------+
#             注意：仅在 Python3 中格式正确
#
# 用逗号分隔的所需列
# 选项：pre_unload, unload, post_unload, pre_load, load, post_load, total
console_stat_columns: unload, load, post_load, total

# 用逗号分隔的行列表。顺序决定显示的顺序。
# 选项：total, total_average, job, job_average, last
console_stat_rows: total, total_average, job, job_average, last

# 如何显示通道的状态及其表现
#   string         - poor, good, perfect 等
#   percentage     - 成功率
#   emoticon       - 有趣的从悲伤到开心的表情（仅限 Python3）
console_gate_stat: emoticon

# 始终显示完整的统计信息表格
console_always_output_full: 1	# 1 = 显示完整表格，0 = 仅显示打印外的总计


# 杂项，建议您检查这些设置是否适合您的配置/工作流 -----------------------------------------------------------------
# ███╗   ███╗██╗███████╗ ██████╗
# ████╗ ████║██║██╔════╝██╔════╝
# ██╔████╔██║██║███████╗██║     
# ██║╚██╔╝██║██║╚════██║██║     
# ██║ ╚═╝ ██║██║███████║╚██████╗
# ╚═╝     ╚═╝╚═╝╚══════╝ ╚═════╝
#
# 请确认这些设置适合您的设备/工作流。温度和超时设置
#
timeout_pause: 72000		# 空闲超时（打印机关闭）以秒为单位，在 MMU 暂停状态下使用
disable_heater: 600		    # 在 MMU_PAUSE 状态下，经过多少秒后禁用热端加热器
default_extruder_temp: 200	# 默认温度，用于在非打印状态下执行交换和尖端成型（被通道映射覆盖）
extruder_temp_variance: 2	# 在等待挤出机温度时，允许的温度±公差（>= 1）
#
# 这些是自动校准/调优设置。一旦齿轮旋转距离和编码器已校准，启用这些选项将减少初始校准，
# 并会自动调节 Bowden 长度和单独通道的旋转距离差异。
# 注意：可以调节的设置基于 mmu_hardware.cfg 中的 "variable_rotation_distance" 和 "variable_bowden_lengths"
#       例如，对于固定的 Bowden 管和多个 BMG 齿轮以及像 ERCF 这样的编码器，Bowden 长度会在通道 #0 上调节，
#            旋转距离（MMU_CALIBRATE_GATE）会针对其他通道进行调节。
#
autotune_bowden_length: 0       # 自动化 Bowden 长度校准/调优。1=自动，0=手动/关闭
autotune_rotation_distance: 0   # 自动化通道校准/调优（需要编码器）。1=自动，0=手动/关闭
#
# 其他工作流选项
#
startup_home_if_unloaded: 0     # 1 = 如果未加载，则强制启动时归位，0 = 不做任何操作
startup_reset_ttg_map: 0        # 1 = 启动时重置 TTG 映射，0 = 不做任何操作
show_error_dialog: 0            # 1 = 除了控制台消息外，还显示弹出对话框，0 = 仅在控制台显示错误
strict_filament_recovery: 0     # 如果启用 MMU 和工具头传感器，这将导致耗材位置恢复执行额外的动作，以查找
                                # 在挤出机和传感器之间空间中的卡住的耗材
filament_recovery_on_pause: 1   # 1 = 在暂停/错误时进行快速检查，确定当前的耗材位置，0 = 禁用
retry_tool_change_on_error: 0   # 是否在工具更换失败时自动重试。如果启用，Happy Hare 会执行
				                # 相当于 'MMU_RECOVER' + 'Tx' 命令，通常这足以恢复。
                                # 注意，启用此选项可能会掩盖 MMU 的问题
bypass_autoload: 1              # 如果安装了进料传感器，此选项控制绕过操作时的自动加载
has_filament_buffer: 1          # MMU是否有耗材缓冲区。如果使用Filamentalist或DC eSpotify等，则设置为0
#
# 高级选项。除非完全理解，否则不要随意更改。请阅读文档。
#
encoder_move_validation: 1     # 高级：1 = 正常情况下编码器验证移动距离是否在给定公差内
                               #      0 = 禁用验证（消除移动之间的轻微停顿，但不那么安全）
print_start_detection: 1       # 高级：启用 Happy Hare 自动检测打印的开始和结束并调用
                               # 高级：MMU_PRINT_START 和 MMU_PRINT_END。保持启用是无害的，但如果认为它会导致问题，
                               #      可以禁用，已知 START/END 已在宏中处理
extruder: extruder             # 高级：MMU 使用的工具头挤出机名称
gcode_load_sequence: 0         # 非常高级：Gcode 加载顺序 1=启用，0=内部逻辑（默认）
gcode_unload_sequence: 0       # 非常高级：Gcode 卸载顺序，1=启用，0=内部逻辑（默认）


# 高级：Klipper 调优 -------------------------------------------------------------------------------------------
# ██╗  ██╗██╗     ██╗██████╗ ██████╗ ███████╗██████╗ 
# ██║ ██╔╝██║     ██║██╔══██╗██╔══██╗██╔════╝██╔══██╗
# █████╔╝ ██║     ██║██████╔╝██████╔╝█████╗  ██████╔╝
# ██╔═██╗ ██║     ██║██╔═══╝ ██╔═══╝ ██╔══╝  ██╔══██╗
# ██║  ██╗███████╗██║██║     ██║     ███████╗██║  ██║
# ╚═╝  ╚═╝╚══════╝╚═╝╚═╝     ╚═╝     ╚══════╝╚═╝  ╚═╝
#
# Timer too close 是一个通用错误，但在一些系统中，尤其是 CANbus 连接的 MCU，在归位和探测操作中经常发生。
# Happy Hare 使用许多归位操作来确保可靠的挤出机装载和卸载，启用此选项可以为 Klipper 提供更多容错能力，
# 避免这个令人头痛的错误。
#
update_trsync: 0		# 1 = 增加 TRSYNC_TIMEOUT，0 = 保持 Klipper 默认值
#
# 一些 CANbus 板容易出现这种问题，但也有在常规 USB 板上出现的情况，当通信超时会导致打印失败。
# 由于这种错误通常只出现在归位操作上，因此可以安全地重试这些操作以进行解决。
# 这在实践中效果良好。
canbus_comms_retries: 3		# 重试次数。建议使用默认值 3。
#
# 较旧的 neopixels 具有非常严格的时序，可能会在 klippy.log 中生成大量 "Unable to obtain 'neopixel_result' response" 错误。
# 一个常见的解决方法是增加 neopixel.py 中的 BIT_MAX_TIME。此选项会自动为您增加该值，避免修改 Klipper 代码。
update_bit_max_time: 1		# 1 = 增加 BIT_MAX_TIME，0 = 保持 Klipper 默认值


# 高级：MMU 宏覆盖 --- 仅在您熟悉 Klipper 宏时设置 --------------------------------------------------------
# ███╗   ███╗ █████╗  ██████╗██████╗  ██████╗ ███████╗
# ████╗ ████║██╔══██╗██╔════╝██╔══██╗██╔═══██╗██╔════╝
# ██╔████╔██║███████║██║     ██████╔╝██║   ██║███████╗
# ██║╚██╔╝██║██╔══██║██║     ██╔══██╗██║   ██║╚════██║
# ██║ ╚═╝ ██║██║  ██║╚██████╗██║  ██║╚██████╔╝███████║
# ╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝
#
# 'pause_macro' 定义了 MMU 错误时调用的宏（必须将打印机置于暂停状态）
# 其他宏在 'mmu_sequence.cfg' 中有详细描述
# 还请查看 Tip Forming 部分的 form_tip_macro
#
pause_macro: PAUSE                                     # 打印暂停时调用的宏
action_changed_macro: _MMU_ACTION_CHANGED              # 当操作（printer.mmu.action）发生变化时调用
print_state_changed_macro: _MMU_PRINT_STATE_CHANGED    # 当打印状态（printer.mmu.print_state）发生变化时调用
mmu_event_macro: _MMU_EVENT                            # 当发生有用的 MMU 事件时调用
pre_unload_macro: _MMU_PRE_UNLOAD                      # 开始卸载前调用的宏
post_form_tip_macro: _MMU_POST_FORM_TIP                # 在成型提示后立即调用的宏
post_unload_macro: _MMU_POST_UNLOAD                    # 卸载完成后调用的宏
pre_load_macro: _MMU_PRE_LOAD                          # 开始加载前调用的宏
post_load_macro: _MMU_POST_LOAD                        # 加载完成后调用的宏
unload_sequence_macro: _MMU_UNLOAD_SEQUENCE            # 高级选项：根据 'gcode_unload_sequence' 条件调用
load_sequence_macro: _MMU_LOAD_SEQUENCE                # 高级选项：根据 'gcode_load_sequence' 条件调用
espooler_start_macro: ''                               # 启动 eSpooler 时调用的宏（参数：GATE, STEP_SPEED, MAX_DISTANCE, HOMING）
espooler_stop_macro: ''                                # 停止 eSpooler 时调用的宏（参数：GATE, DISTANCE）



# 高级：有关这些设置的文档，请查看使用说明 --------------------------------------------------------
# ██████╗ ███████╗███████╗███████╗████████╗    ██████╗ ███████╗███████╗███████╗
# ██╔══██╗██╔════╝██╔════╝██╔════╝╚══██╔══╝    ██╔══██╗██╔════╝██╔════╝██╔════╝
# ██████╔╝█████╗  ███████╗█████╗     ██║       ██║  ██║█████╗  █████╗  ███████╗
# ██╔══██╗██╔══╝  ╚════██║██╔══╝     ██║       ██║  ██║██╔══╝  ██╔══╝  ╚════██║
# ██║  ██║███████╗███████║███████╗   ██║       ██████╔╝███████╗██║     ███████║
# ╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝   ╚═╝       ╚═════╝ ╚══════╝╚═╝     ╚══════╝
#
# 示例...
# 耗材通道：            #0      #1      #2      #3      #4      #5      #6      #7      #8
#gate_status:          1,      0,      1,      2,      2,     -1,     -1,      0,      1
#gate_filament_name:   one,    two,    three,  four,   five,   six,    seven,  eight,  nine
#gate_material:        PLA,    ABS,    ABS,    ABS+,   PLA,    PLA,    PETG,   TPU,    ABS
#gate_color:           red,    black,  yellow, green,  blue,   indigo, ffffff, grey,   black
#gate_temperature:     210,    240,    235,    245,    210,    200,    215,    240,    240
#gate_spool_id:        3,      2,      1,      4,      5,      6,      7,      -1,     9
#gate_speed_override:  100,    100,    100,    100,    100,    100,    100,    50,     100
#endless_spool_groups: 0,      1,      2,      1,      0,      0,      3,      4,      1
#
# 工具：                T0      T1      T2      T3      T4      T5      T6      T7      T8
#tool_to_gate_map:     0,      1,      2,      3,      4,      5,      6,      7,      8

# 升级后保留的补充用户配置 --------------------------------------------------------------------
#
