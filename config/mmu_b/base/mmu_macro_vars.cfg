########################################################################################################################
# Happy Hare MMU 软件
#
# 根据你的设置编辑此文件
#
# Copyright (C) 2022  moggieuk#6538 (discord) moggieuk@hotmail.com
# 本文件可以在GNU GPLv3许可证的条款下进行分发。
#
# 目标：支持 Happy Hare 的宏配置
#
# (\_/)
# ( *,*)
# (")_(") Happy Hare 就绪
#
#
# 提供的 Happy Hare 宏集可以通过编辑此处声明的宏“变量”来进行自定义。
#
# 此配置将在发布之间自动保留并升级（旧配置文件的备份将始终保留以供参考）。如果你想自定义宏，
# 超出这些变量所能实现的范围，强烈建议你将宏复制到一个新名称，并在 'mmu_parameters.cfg' 中更改回调宏名称。
# 这样，默认的宏仍然可以升级，但你的自定义将保持不变。
#


# 持久化状态 ---------------------------------------------------------
# Happy Hare 将配置和状态存储在 klipper 变量文件中。
# 由于 Klipper 只能有一个“save_variables”文件，如果你已经有一个，
# 你需要将它们合并，并相应地进行配置。
#
#[save_variables]
#filename: ~/printer_data/config/mmu/mmu_vars.cfg

# 必要的 Klipper 覆盖设置 ---------------------------------------------
# ██╗  ██╗██╗     ██╗██████╗ ██████╗ ███████╗██████╗ 
# ██║ ██╔╝██║     ██║██╔══██╗██╔══██╗██╔════╝██╔══██╗
# █████╔╝ ██║     ██║██████╔╝██████╔╝█████╗  ██████╔╝
# ██╔═██╗ ██║     ██║██╔═══╝ ██╔═══╝ ██╔══╝  ██╔══██╗
# ██║  ██╗███████╗██║██║     ██║     ███████╗██║  ██║
# ╚═╝  ╚═╝╚══════╝╚═╝╚═╝     ╚═╝     ╚══════╝╚═╝  ╚═╝
#
# 这些补充设置基本上禁用了 Klipper 内建的挤出限制，并且在使用 MMU 时是必要的
[extruder]
max_extrude_only_distance: 200
max_extrude_cross_section: 50

# 用于 Mainsail 的对话框提示和进度。要求 Mainsail 版本 >= v2.9.0
#[respond]

# 其他 Happy Hare 必要配置。不受用户配置中是否已经定义影响
#[display_status]
#[pause_resume]
#[virtual_sdcard]
#path: ~/printer_data/gcodes
#on_error_gcode: CANCEL_PRINT


# 打印开始/结束 ---------------------------------------------------------
# ██████╗ ██████╗ ██╗███╗   ██╗████████╗    ███████╗████████╗ █████╗ ██████╗ ████████╗
# ██╔══██╗██╔══██╗██║████╗  ██║╚══██╔══╝    ██╔════╝╚══██╔══╝██╔══██╗██╔══██╗╚══██╔══╝
# ██████╔╝██████╔╝██║██╔██╗ ██║   ██║       ███████╗   ██║   ███████║██████╔╝   ██║   
# ██╔═══╝ ██╔══██╗██║██║╚██╗██║   ██║       ╚════██║   ██║   ██╔══██║██╔══██╗   ██║   
# ██║     ██║  ██║██║██║ ╚████║   ██║       ███████║   ██║   ██║  ██║██║  ██║   ██║   
# ╚═╝     ╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝   ╚═╝       ╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝   
#   (base/mmu_software.cfg)
#
[gcode_macro _MMU_SOFTWARE_VARS]
description: Happy Hare 可选配置，用于打印开始/结束检查
gcode: # 留空

# 这些变量控制 MMU_START_SETUP 和 MMU_START_LOAD_INITIAL_TOOL 宏的行为
variable_user_pre_initialize_extension      : ''        # 在 MMU_START_SETUP 开始时执行。通常是 G28 归位
variable_home_mmu                           : False     # True/False，是否在打印开始前归位 MMU
variable_check_gates                        : True      # True/False，是否检查所有使用的耗材通道中是否加载了耗材
variable_load_initial_tool                  : True      # True/False，是否自动加载初始工具
#
# 自动映射策略，用于根据切片软件映射查找匹配的 MMU 耗材通道（将调整工具到耗材通道的映射）。选项如下：
#   'none'           - 不自动映射（即不更新工具到耗材通道的映射）
#   'filament_name'  - 精确匹配耗材名称（不区分大小写）
#   'material'       - 精确匹配材料
#   'color'          - 精确匹配颜色（同材料）
#   'closest_color'  - 匹配最接近的耗材颜色（同材料）
#   'spool_id'       - 精确匹配线卷 ID  [未来功能]
variable_automap_strategy                   : "none"    # none|filament_name|material|color|closest_color|spool_id

# 这些变量控制 MMU_END 宏的行为
variable_user_print_end_extension           : ''        # 在 MMU_END 开始时执行。适合在打印结束时移动
variable_unload_tool                        : True      # True/False，是否在打印结束时卸载工具
variable_reset_ttg                          : False     # True/False，是否在打印结束时重置 TTG 映射
variable_dump_stats                         : True      # True/False，是否在打印结束时显示打印统计信息


# 状态变化 --------------------------------------------------------------
# ███████╗████████╗ █████╗ ████████╗███████╗     ██████╗██╗  ██╗ █████╗ ███╗   ██╗ ██████╗ ███████╗
# ██╔════╝╚══██╔══╝██╔══██╗╚══██╔══╝██╔════╝    ██╔════╝██║  ██║██╔══██╗████╗  ██║██╔════╝ ██╔════╝
# ███████╗   ██║   ███████║   ██║   █████╗      ██║     ███████║███████║██╔██╗ ██║██║  ███╗█████╗  
# ╚════██║   ██║   ██╔══██║   ██║   ██╔══╝      ██║     ██╔══██║██╔══██║██║╚██╗██║██║   ██║██╔══╝  
# ███████║   ██║   ██║  ██║   ██║   ███████╗    ╚██████╗██║  ██║██║  ██║██║ ╚████║╚██████╔╝███████╗
# ╚══════╝   ╚═╝   ╚═╝  ╚═╝   ╚═╝   ╚══════╝     ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚══════╝
#   (base/mmu_state.cfg)
#
[gcode_macro _MMU_STATE_VARS]
description: Happy Hare 配置状态变化钩子
gcode: # 留空

# 您可以通过向所有 Happy Hare 状态变化或事件宏添加命令（或调用您的 gcode 宏）来扩展功能。
# 例如：用于附加 LED 逻辑或消耗计数器
variable_user_action_changed_extension      : ''      # 在默认逻辑之后执行，带有重复参数
variable_user_print_state_changed_extension : ''      # 在默认逻辑之后执行，带有重复参数
variable_user_mmu_event_extension           : ''      # 在默认逻辑之后执行，带有重复参数

# 维护警告限制（消耗计数器）
variable_servo_down_limit                   : 5000    # 设置为 -1 表示没有限制 / 禁用警告
variable_cutter_blade_limit                 : 3000    # 设置为 -1 表示没有限制 / 禁用警告


# LED 控制 ---------------------------------------------------------------
# ██╗     ███████╗██████╗ ███████╗
# ██║     ██╔════╝██╔══██╗██╔════╝
# ██║     █████╗  ██║  ██║███████╗
# ██║     ██╔══╝  ██║  ██║╚════██║
# ███████╗███████╗██████╔╝███████║
# ╚══════╝╚══════╝╚═════╝ ╚══════╝
# 仅在安装了 LED 的情况下配置。若未安装 led-effects klipper 模块，led_effects 选项会被自动忽略
#   (base/mmu_led.cfg)
#
[gcode_macro _MMU_LED_VARS]
description: Happy Hare LED 宏配置变量
gcode: # 留空

# LED 段的默认效果（在未提供动作状态时）
#   'off'             - LED 关闭
#   'on'              - LED 显示白色
#   'gate_status'     - 指示耗材通道的可用性/状态              (printer.mmu.gate_status)
#   'filament_color'  - 显示在耗材通道映射中定义的耗材颜色      (printer.mmu.gate_color_rgb)
#   'slicer_color'    - 显示切片软件为每个耗材通道定义的颜色    (printer.mmu.slicer_color_rgb)
#   'r,g,b'           - 显示静态 r,g,b 颜色，例如 "0,0,0.3" 代表暗蓝色
#   '_effect_'        - 显示指定名称的 LED 效果
#
variable_led_enable             : True              # True = 启动时启用 LED（MMU_LED 可控制），False = 禁用
variable_led_animation          : True              # True = 使用 LED 动画效果，False = 静态 LED
variable_default_exit_effect    : "gate_status"     #    off|gate_status|filament_color|slicer_color|r,g,b|_effect_
variable_default_entry_effect   : "filament_color"  #    off|gate_status|filament_color|slicer_color|r,g,b|_effect_
variable_default_status_effect  : "filament_color"  # on|off|gate_status|filament_color|slicer_color|r,g,b|_effect_
variable_default_logo_effect    : "0,0,.3"          #    off                                        |r,g,b|_effect_
variable_white_light            : (1, 1, 1)         # 静态白光的 RGB 颜色
variable_black_light            : (.01, 0, .02)     # 用于表示 "黑色"（耗材）的 RGB 颜色
variable_empty_light            : (0, 0, 0)         # 用于表示空耗材通道的 RGB 颜色


# 序列宏 - 停放运动和工具更换控制 --------------------------------------
# ███╗   ███╗ ██████╗ ██╗   ██╗███████╗███╗   ███╗███████╗███╗   ██╗████████╗
# ████╗ ████║██╔═══██╗██║   ██║██╔════╝████╗ ████║██╔════╝████╗  ██║╚══██╔══╝
# ██╔████╔██║██║   ██║██║   ██║█████╗  ██╔████╔██║█████╗  ██╔██╗ ██║   ██║   
# ██║╚██╔╝██║██║   ██║╚██╗ ██╔╝██╔══╝  ██║╚██╔╝██║██╔══╝  ██║╚██╗██║   ██║   
# ██║ ╚═╝ ██║╚██████╔╝ ╚████╔╝ ███████╗██║ ╚═╝ ██║███████╗██║ ╚████║   ██║   
# ╚═╝     ╚═╝ ╚═════╝   ╚═══╝  ╚══════╝╚═╝     ╚═╝╚══════╝╚═╝  ╚═══╝   ╚═╝   
# 小心配置，如果你设置了 'enable_park: True'
#   (base/mmu_sequence.cfg)
#
[gcode_macro _MMU_SEQUENCE_VARS]
description: Happy Hare 序列宏配置变量
gcode: # 留空

# 停放和运动控制：
# Happy Hare 定义了 7 个可能需要停放的操作。你可以指定
# 是否在打印过程中或独立运行时（不打印时）进行停放，使用 Happy Hare 或禁用 HH 时：
#
#  enable_park_printing
#    这是一个操作列表，在打印过程中这些操作应该导致工具头停放。
#    你可以根据实际需要自定义两种主要的起始点。如果使用切片软件进行喷嘴更换（且工具更换在擦拭塔上）
#    你可能不希望在 "toolchange" 时停放，但在 "runout" 时应该停放，因为这是切片软件不知道的强制工具更换。
#    通常情况下，至少应该在暂停、取消和完成时停放，除非已经在其他地方处理过。
#
#  enabled_park_standalone
#    这是一个操作列表，在不打印时应该导致工具头停放的操作，
#    例如仅通过手动操作 MMU 或通过 Klipperscreen 操作。根据个人工作流程偏好，你可以自由选择，但默认是 'pause,cancel'
#    （即禁用工具更换）。
#
#  enabled_park_disabled
#    这是一个操作列表，当 MMU 被禁用（MMU ENABLE=0）并使用 Happy Hare 客户端宏时，应该导致工具头停放的操作。
#    请注意，在这种模式下，只有暂停和取消可以发生，通常会启用这两个操作。
#
# 操作如下：
#   toolchange - 使用 Tx 或 MMU_CHANGE_TOOL 命令发起的正常工具更换
#   runout     - 由于耗材耗尽而发生的强制工具更换
#   load       - 单独的 MMU_LOAD 操作
#   unload     - 单独的 MMU_UNLOAD/MMU_EJECT 操作
#   complete   - 打印完成时（Happy Hare 启用）
#   pause      - 普通的 Klipper PAUSE 操作
#   cancel     - 普通的 Klipper CANCEL_PRINT 操作
#
# 如果你希望在宏中包含，可以手动调用停放宏，如下所示：
#
#    _MMU_PARK FORCE_PARK=1 X=10 Y=10 Z_HOP=5
#
# restore_xy_pos
#    控制在触发停放动作后的工具头（x,y）返回位置：
#   last - 返回到停放前的原始位置（通常是默认行为）
#   next - 如果可能，返回到下一个打印位置，否则应用 last 逻辑。
#          在打印中，这可以减少在最后位置的停留时间，减少飞丝和不必要的移动。只应用于 "toolchange" 操作
#   none - 工具头停留在更换结束后的位置。在打印中，下一条 gcode 命令将恢复工具头的 x,y 位置
#
# 注意：
# - 起始的 z 高度将始终恢复，因此 'next' 和 'none' 之间的不同之处在于 (x,y) 移动发生时的 z 高度和
#   是否有回抽（un-retract）。
# - 默认的停放逻辑是直接移动到 'park_*' 位置。若需要更复杂的运动和控制，你可以指定自定义的
#   'user_park_move_macro' 代替默认的直线移动。
#
# 回抽可以用来优化更换工具时可能发生的丝线和飞溅，且仅在打印时有效。
# 重要：工具更换的配置顺序应为：
#   1. 在 mmu_parameters.cfg 中配置喷嘴的尺寸（如 'toolhead_extruder_to_nozzle' 等），这些是基于几何形状的。
#   2. 在 mmu_parameters.cfg 中调整 'toolhead_ooze_reduction' 仅在必要时，以便在加载时
#      仅有少量耗材从喷嘴出来。
#   3. 只有在此之后，才调整回抽来控制更换工具时的丝线和飞溅。
variable_enable_park_printing   : 'toolchange,runout,load,unload,complete,pause,cancel'  # 为空 '' 则禁用停放
variable_enable_park_standalone : 'toolchange,load,unload,pause,cancel'                  # 为空 '' 则禁用停放
variable_enable_park_disabled   : 'pause,cancel'                                         # 为空 '' 则禁用停放

variable_min_toolchange_z       : 1.0         # 所有停放操作的最低安全高度（z 高度）

# 这些指定了所有启用操作类型的停放位置、z 抬起和回抽。每项必须包含 5 个值：
#   x_coord, y_coord, z_hop，z_hop_ramp，回抽长度
# 使用 -1,-1 表示不进行 x,y 移动（仅可使用 z_hop）。使用 0 表示不进行 z_hop。
# z_hop ramp 是在抬升过程中水平移动的距离（单位 mm）。该方向是自动的，仅在首次从打印中抬升时应用。
# 这一步可以帮助打破耗材拉丝。
variable_park_toolchange        : -1, -1, 1,  5, 2	    # x,y,z-hop,z_hop_ramp,retract 用于 "toolchange" 操作（工具更换、加载、卸载）
variable_park_runout            : -1, -1, 1,  5, 2	    # x,y,z-hop,z_hop_ramp,retract 用于耗材耗尽时
variable_park_pause             : 50, 50, 5,  0, 2	    # x,y,z-hop,z_hop_ramp,retract 用于暂停（发生 MMU 错误时的停放位置）
variable_park_cancel            : -1, -1, 10, 0, 5	    # x,y,z-hop,z_hop_ramp,retract 用于取消打印
variable_park_complete          : 175, 350, 10, 0, 5	# x,y,z-hop,z_hop_ramp,retract 用于打印完成时

# 对于工具更换操作，你可以指定在不同阶段进行额外的停放移动。每项必须包含 3 个值：
#   x_coord, y_coord, z_hop
# 使用 -1,-1,0 表示该阶段没有移动（无操作）。
# 所有移动将在既定的运动平面（z 高度）上进行。
variable_pre_unload_position    : -1, -1, 0	# 卸载开始前的 x,y,z-hop 位置
variable_post_form_tip_position : -1, -1, 0	# 卸载后形成/切割喷嘴的小费的 x,y,z-hop 位置
variable_pre_load_position      : -1, -1, 0	# 加载开始前的 x,y,z-hop 位置

variable_restore_xy_pos         : "last"	# last|next|none - 在“工具更换”后，工具头应移动到哪个 x,y 位置

variable_park_travel_speed      : 200		# 常规移动 XY(Z) 的速度，单位 mm/s
variable_park_lift_speed        : 15		# 仅 Z 轴的移动速度，单位 mm/s
variable_retract_speed          : 30		# 回抽的速度，单位 mm/s
variable_unretract_speed        : 30		# 回抽恢复的速度，单位 mm/s

# 高级：通常 x,y 移动默认使用 'G1 X Y' 到停放位置。你可以创建更复杂的运动。
# 宏将接收以下参数：
#    YOUR_MOVE_MACRO X=<x_coord> Y=<y_coord> F=<speed>
# 当从停放位置恢复时，通常会调用相同的宏，并传递一个 RESTORE=1 参数，以及用于恢复的坐标。 
# 例如，调用宏 YOUR_MOVE_MACRO 时，传递参数 RESTORE=1、X=<x_coord>、Y=<y_coord> 和 F=<speed>。
variable_user_park_move_macro   : ''		# 执行替代默认 'G1 X Y move' 的宏来进行停放位置移动

variable_auto_home              : True		# True = 如果需要，自动归位，False = 禁用
variable_timelapse              : False	# True = 打印后拍摄快照，False = 禁用

# 如果你不想完全定义自己的宏，可以通过添加命令（或调用你的 gcode 宏）来扩展默认的序列宏功能
variable_user_mmu_error_extension     : ''	# 当 MMU 错误发生时，执行默认逻辑后的扩展
variable_user_pre_unload_extension    : ''	# 当进料前置检测耗材未装载，执行默认逻辑后的扩展
variable_user_post_form_tip_extension : ''	# 执行默认逻辑后的扩展
variable_user_post_unload_extension   : ''	# 当进料后置检测耗材未装载，执行默认逻辑后的扩展
variable_user_pre_load_extension      : ''	# 当进料前置检测耗材已装载，执行默认逻辑后的扩展
variable_user_post_load_extension     : ''	# 当进料后置检测耗材已装载，执行默认逻辑后的扩展，在恢复工具头位置前


# CUT_TIP -----------------------------------------------------------------
#  ██████╗██╗   ██╗████████╗    ████████╗██╗██████╗ 
# ██╔════╝██║   ██║╚══██╔══╝    ╚══██╔══╝██║██╔══██╗
# ██║     ██║   ██║   ██║          ██║   ██║██████╔╝
# ██║     ██║   ██║   ██║          ██║   ██║██╔═══╝ 
# ╚██████╗╚██████╔╝   ██║          ██║   ██║██║     
#  ╚═════╝ ╚═════╝    ╚═╝          ╚═╝   ╚═╝╚═╝     
# 如果使用了尖端成型，不需要配置
#   (base/mmu_cut_tip.cfg)
#
[gcode_macro _MMU_CUT_TIP_VARS]
description: Happy Hare 工具头切割尖端宏配置变量
gcode: # 留空

# 切割完成后，工具头切割宏是否将工具头返回到初始位置。如果使用停放逻辑，最好禁用此选项
variable_restore_position       : False		# True = 返回初始位置，False = 不返回

# 喷嘴尖端到切割刀片的距离。此尺寸基于您的工具头，不应用于调节
# 注意：如果有工具头传感器，此变量可以自动确定！
# 阅读 https://github.com/moggieuk/Happy-Hare/wiki/Blobing-and-Stringing
variable_blade_pos              : 37.5		# 调整：喷嘴尖端到刀片的距离（毫米）

# 在进行切割之前的回抽距离，从喷嘴尖端开始测量。这样可以减少浪费的耗材（留在挤出机内），
# 但如果设置得过大，可能会导致堵塞。此值必须小于 'blade_pos'
# 注意：喷嘴残留的耗材（'toolhead_ooze_reduction'）会从此值中减去，请确保工具头已校准
variable_retract_length         : 32.5		# 调整：比 'blade_pos' 少5毫米是一个好的起始点

# 是否在初始回抽后执行简单的切割尖端。启用此选项为熔融耗材提供额外的冷却时间，
# 并且可能有助于避免某些热端的潜在堵塞
variable_simple_tip_forming     : True		# True = 执行简单的切割尖端，False = 跳过

# 这是工具头的位置，当切割器臂轻轻接触压针时的位置
variable_cutting_axis           : "x"		# "x" 或 "y"。确定切割过程中切割方向（轴）
variable_pin_loc_xy             : 14, 250	# 压针的x,y坐标

# 这个距离将添加到 "pin_loc_x" 或 "pin_loc_y"，取决于 'cutting_axis'，
# 用于确定起始位置，并产生一个小的安全距离，帮助产生动量
variable_pin_park_dist          : 5.0		# 距离（毫米）

# 当切割器完全压缩时，工具头的位置。此值基于 'cutting_axis'，可以是x或y轴。
# 应该留下一点头部空间（应大于0，或者大于xmin）以避免撞击工具头或龙门架
variable_pin_loc_compressed     : 0.5		# 距离。根据 'cutting_axis' 方向的坐标

# 切割后回抽的长度和速度，以防切割刀片在返回原点时卡住
variable_rip_length             : 1.0		# 距离（毫米），有助于杠杆解压（>= 0）
variable_rip_speed              : 3		    # 速度（毫米/秒）

# 将剩余的喷嘴尖端从冷端推回热端。无需完全推回，只需足够确保耗材碎片留在热端，
# 并且“钉头”部分被推回到PTFE/金属接头后，以防止未来装载时发生堵塞。
# 此值不能大于 'retract_length' - `toolhead_ooze_reduction`
variable_pushback_length        : 15.0		# 调整：PTFE管长度 + 3毫米是一个好的起始点
variable_pushback_dwell_time    : 0		    # 推回后的停留时间（毫秒）

# 切割相关的速度设置
# 注意：如果切割速度过快，步进电机可能会失步。
# 因此，对于切割：
# - 我们首先快速移动以积累一些动量，并使切割刀片与耗材初步接触
# - 然后我们以较慢的速度进行实际切割
variable_travel_speed           : 150		# 速度（毫米/秒）
variable_cut_fast_move_speed    : 32		# 速度（毫米/秒）
variable_cut_slow_move_speed    : 8		    # 速度（毫米/秒）
variable_evacuate_speed         : 150		# 速度（毫米/秒）
variable_cut_dwell_time         : 50		# 停留时间（毫秒）在切割点
variable_cut_fast_move_fraction : 1.0		# 使用快速移动的比例
variable_extruder_move_speed    : 25		# 所有挤出机移动的速度（毫米/秒）

# 快速与慢速移动的安全边距。当移动到压针位置时，
# 如果我们离压针更近了，则会做一个更安全但较长的移动。
# 通常，将这些设置为工具头的大小（加上一个小边距）应该足够了
variable_safe_margin_xy         : 30, 30	# 近似工具头宽度 + 5mm，高度 + 5mm

# 如果安装了龙门舵机，则启用舵机，并设置上下角度位置
variable_gantry_servo_enabled   : False	# True = 启用，False = 禁用
variable_gantry_servo_down_angle: 55		# 压针展开时的角度
variable_gantry_servo_up_angle  : 180		# 压针收回时的角度


# FORM_TIP ----------------------------------------------------------------
# ███████╗ ██████╗ ██████╗ ███╗   ███╗    ████████╗██╗██████╗ 
# ██╔════╝██╔═══██╗██╔══██╗████╗ ████║    ╚══██╔══╝██║██╔══██╗
# █████╗  ██║   ██║██████╔╝██╔████╔██║       ██║   ██║██████╔╝
# ██╔══╝  ██║   ██║██╔══██╗██║╚██╔╝██║       ██║   ██║██╔═══╝ 
# ██║     ╚██████╔╝██║  ██║██║ ╚═╝ ██║       ██║   ██║██║     
# ╚═╝      ╚═════╝ ╚═╝  ╚═╝╚═╝     ╚═╝       ╚═╝   ╚═╝╚═╝     
# 如果使用切割尖端，则无需配置
#   (base/mmu_form_tip.cfg)
#
[gcode_macro _MMU_FORM_TIP_VARS]
description: Happy Hare 尖端成型宏配置变量
gcode: # 留空

# 第一步 - 压制
# 压制是冷却动作前对耗材的初步挤压，描述为总量和挤压强度的进展
# 可以在打印中或单独使用时单独控制
variable_ramming_volume            : 0		# 体积单位 mm^3，0 = 禁用（可选择让切片软件处理）
variable_ramming_volume_standalone : 0		# 体积单位 mm^3，0 = 禁用

# 可选设置温度变化（降低）。等待将在喷嘴分离前发生，如果'use_fast_skinnydip: False'则发生在冷却动作后。
# 在尖端创建完成后，温度将恢复
variable_toolchange_temp        : 0		    # 0 = 不改变温度，其他值为设置的温度
variable_toolchange_fan_assist  : False	# 是否使用部件冷却风扇加快温度变化
variable_toolchange_fan_speed   : 50		# 如果启用风扇助力，风扇速度百分比

# 第二步 - 喷嘴分离
# 然后通过快速移动将耗材从熔融区迅速分离，再慢慢移动到冷却管道。
# 初始的快速移动应该尽可能快，慢速移动的良好起始点是unloading_speed_start/cooling_moves。
# 移动太快的慢速动作可能会导致尖端或拉丝过长
variable_unloading_speed_start  : 80		# 初始快速移动的速度（单位 mm/s）
variable_unloading_speed        : 18		# 慢速移动到冷却区的速度（单位 mm/s）

# 第三步 - 冷却动作
# 冷却动作允许耗材在不断移动的冷却管部分硬化，以防止形成球形尖端。
# 冷却管的位置是从内部喷嘴到加热块顶部的距离（通常建议多加几毫米，确保尖端位于冷却区域内）。
# 冷却管的长度是从此处到散热片顶部的距离（即冷却动作的移动长度）。
# 最后的冷却动作是快速移动，破坏形成的拉丝。
variable_cooling_tube_position  : 35		# 冷却管的起始位置。DragonST:35, DragonHF:30, Mosquito:30, Revo:35, RapidoHF:27
variable_cooling_tube_length    : 10		# 移动长度。DragonST:15, DragonHF:10, Mosquito:20, Revo:10, RapidoHF:10
variable_initial_cooling_speed  : 10		# 初始慢速移动（单位 mm/s），用于固化尖端并冷却形成的拉丝
variable_final_cooling_speed    : 50		# 快速移动（单位 mm/s），太快会导致尖端变形，太慢会导致长拉丝/无分离
variable_cooling_moves          : 4		    # 冷却动作的来回次数（2-4是个不错的起点）

# 第四步 - 清除拉丝
# 清除拉丝是一个高级的最终动作，对于某些材料（如PLA）有助于烧掉持续的非常细的拉丝。
# 要使其生效，插入深度至关重要（从禁用开始，最后再调节）
# 作为参考，内部喷嘴的距离是cooling_tube_position + cooling_tube_length， 
# 加热块顶部距离为cooling_tube_length。
variable_use_skinnydip          : False	# True = 启用清除拉丝，False = 禁用清除拉丝动作
variable_skinnydip_distance     : 30		# 从冷却管末端开始重新插入耗材的距离
variable_dip_insertion_speed    : 30		# 中速/慢速插入速度（单位 mm/s），刚好足够熔化细小的拉丝，太慢会拉起熔融的耗材
variable_dip_extraction_speed   : 70		# 提取速度（单位 mm/s），约为插入速度的2倍，以防止形成新的拉丝
variable_melt_zone_pause        : 0		    # 熔融区停顿时间，单位毫秒。默认值为0
variable_cooling_zone_pause     : 0		    # 冷却区停顿时间，单位毫秒。默认值为0
variable_use_fast_skinnydip     : False	# False = 跳过在清除拉丝动作期间等待工具头温度变化

# 第五步 - 停放
# 停放耗材以便排出
variable_parking_distance       : 0		    # 停放耗材的位置（单位 mm），0 = 停放在尖端成型后的位置
variable_extruder_eject_speed   : 25		# 停放时使用的速度（单位 mm/s），也用于测试时的最终排出

# 客户端宏 -----------------------------------------------------------
# ██████╗  █████╗ ██╗   ██╗███████╗███████╗    ██████╗ ███████╗███████╗██╗   ██╗███╗   ███╗███████╗
# ██╔══██╗██╔══██╗██║   ██║██╔════╝██╔════╝    ██╔══██╗██╔════╝██╔════╝██║   ██║████╗ ████║██╔════╝
# ██████╔╝███████║██║   ██║███████╗█████╗      ██████╔╝█████╗  ███████╗██║   ██║██╔████╔██║█████╗  
# ██╔═══╝ ██╔══██║██║   ██║╚════██║██╔══╝      ██╔══██╗██╔══╝  ╚════██║██║   ██║██║╚██╔╝██║██╔══╝  
# ██║     ██║  ██║╚██████╔╝███████║███████╗    ██║  ██║███████╗███████║╚██████╔╝██║ ╚═╝ ██║███████╗
# ╚═╝     ╚═╝  ╚═╝ ╚═════╝ ╚══════╝╚══════╝    ╚═╝  ╚═╝╚══════╝╚══════╝ ╚═════╝ ╚═╝     ╚═╝╚══════╝
# 如果使用Happy Hare推荐的PAUSE/RESUME/CANCEL_PRINT宏
# 这些变量允许进行定制和基本扩展
# 注意，大部分参数来自“movement”（序列）宏，
# 因此这些是附加的
#   (可选/客户端宏.cfg)
#
[gcode_macro _MMU_CLIENT_VARS]
description: Happy Hare 客户端宏配置变量
gcode: # 留空

variable_reset_ttg_on_cancel    : False		# True/False，是否在打印取消时重置TTG映射
variable_unload_tool_on_cancel  : False		# True/False，是否在取消时卸载工具

# 你可以通过添加命令（或调用你的gcode宏）来扩展功能
variable_user_pause_extension   : ''		# 在Klipper基础暂停后执行
variable_user_resume_extension  : ''		# 在Klipper基础恢复前执行
variable_user_cancel_extension  : ''		# 在Klipper基础取消打印前执行


###########################################################################
# 工具切换宏
# 这个宏在安装时自动创建，但你可以根据操作中的工具数量
# 来增加或减少此列表
# 注意：虽然有点麻烦，但像Mainsail这样的接口依赖
# 于工具的真实宏定义，以便在UI中显示工具
#
[gcode_macro T0]
gcode: MMU_CHANGE_TOOL TOOL=0
[gcode_macro T1]
gcode: MMU_CHANGE_TOOL TOOL=1
[gcode_macro T2]
gcode: MMU_CHANGE_TOOL TOOL=2
[gcode_macro T3]
gcode: MMU_CHANGE_TOOL TOOL=3

