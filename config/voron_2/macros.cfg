################################################################################
# VORON 2.4  350mm  打印机配置文件
################################################################################
# COPYRIGHT © 2021 - 2025  Samuel Wang
# 本文件可以根据GNU GPLv3许可协议进行分发
# This file may be distributed under the terms of the GNU GPLv3 license
################################################################################
# Discord: Samuel-0-0#0576    Github: Samuel-0-0    Bilibili: Samuel-0_0
################################################################################
# 文件用途：自定义宏
################################################################################
# 根据你的设置编辑此文件
################################################################################

## 系统启动通知
[delayed_gcode boot]
initial_duration: 5
gcode:
    MESSAGE TEXT="系统正常启动完毕，祝打印顺利！"
    CLEAR_PAUSE

[gcode_macro TEST_RESPOND]
gcode:
    {% set prompt_txt = [] %}
    {% set _d = prompt_txt.append("当前使用的挤出机是 \"%s\" " % printer.toolhead.extruder) %}
    RESPOND TYPE=command MSG="action:prompt_begin 挤出机确认"
    {% for element in prompt_txt %}
        RESPOND TYPE=command MSG='{"action:prompt_text %s" % element}' 
    {% endfor %}
    RESPOND TYPE=command MSG="action:prompt_footer_button 好的|RESPOND TYPE=command MSG=action:prompt_end|info"
    RESPOND TYPE=command MSG="action:prompt_show"

## 根据XYZ轴的情况判断是否需要进行归零
[gcode_macro _CG28]
description: 如果各轴未归零则执行归零操作，否则不执行归零
gcode:
    {% set axes = 'XYZ'|reject('in', printer.toolhead.homed_axes|upper)|join() %}  # 排除已经归零的
    {% if axes %}
        G28 {axes}                                              # 执行归零
    {% endif %}

## 根据XY轴的情况判断是否需要进行归零
[gcode_macro _XY_HOME]
description: 如果各轴未归零则执行归零操作，否则不执行归零
gcode:
    {% set axes = 'XY'|reject('in', printer.toolhead.homed_axes|upper)|join() %}  # 排除已经归零的
    {% if axes %}
        G28 {axes}                                              # 执行归零
    {% endif %}

## 龙门架调平
[gcode_macro QGL]
description: 龙门架调平
gcode:
    BED_MESH_CLEAR                     # 清除床网
    G90                                # 运动轴使用绝对坐标系
    G28                                # 归零
    STATUS_LEVELING                    # 设置SB灯颜色
    QUAD_GANTRY_LEVEL                  # 龙门架调平
    G28 Z                              # 重新进行Z归零，修复QGL可能造成的误差

## 拉屎铲屎
[gcode_macro _POO]
description: 在指定位置拉屎并将屎撞离
variable_poo_x: 5            # 拉屎X坐标
variable_poo_y: 100          # 拉屎Y坐标
gcode:
    {% set poo_x = printer['gcode_macro _POO'].poo_x|default(5)|int %}     # 从预设参数中获取X坐标
    {% set poo_y = printer['gcode_macro _POO'].poo_y|default(5)|int %}     # 从预设参数中获取Y坐标
    MESSAGE TEXT="移动到({poo_x},{poo_y})，准备拉屎"
    G90                                                                    # 切换到绝对坐标系
    M83                                                                    # 切换到相对挤出模式
    G1 X{poo_x} Y{poo_y} Z1 F20000                                         # 移动到指定位置
    {% if 'save_variables' in printer %}                                   # 如果使用了变量存储
        {% set svv = printer.save_variables.variables %}                   # 读取存储的变量参数
        {% if 'extruder_temp' in svv %}                                    # 如果变量中存在extruder_temp参数
            {% set extruder_temp = svv.extruder_temp %}                    # 设置挤出温度为变量参数
        {% endif %}
    {% else %}                                                             # 如果没使用变量
        MESSAGE TEXT="耗材挤出温度未设置，设置温度(245)"                      # 没有识别到存储的变量提醒
        {% set extruder_temp = params.TEMP|default(245)|float %}           # 设置挤出温度
    {% endif %}
    M109 S{extruder_temp}                                                  # 等待温度到达
    G92 E0                                                                 # 重置挤出机
    G1 E50 F600                                                            # 挤出一定量
    G1 Z7 F600                                                             # 抬升Z高度
    G1 E50 F600                                                            # 挤出一定量
    G1 Z8 F1000                                                            # 抬升Z高度
    G1 E-2 F3000                                                           # 回抽2mm，释放压力
    G92 E0                                                                 # 重置挤出机
    M106 S255                                                              # 模型风扇开最大给屎降温
    G4 P5000                                                               # 等待
    M106 S0                                                                # 关闭模型风扇
    G1 X+40 F30000                                                         # 移开打印头
    G1 Z1 F1000                                                            # 下降Z高度
    G1 X1 F20000                                                            # 打印头将屎撞离热床

    
## 根据区域床尺寸自适应打印测试线，切片时尽量保证左测至少留空大于10
[gcode_macro _PURGE_LINE]
description: 在打印区域的边缘打印一条线，让挤出机做好准备
gcode:
    {% set extruder_temp = params.EXTRUDER_TEMP %}
    {% set print_min_x = params.PRINT_MIN.split(",")[0]|int %}
    {% set print_min_y = params.PRINT_MIN.split(",")[1]|int %}
    {% if print_min_y >= 35 %}                                                # 打印区域底部还有空间，数值根据打印头的干涉情况调整，默认为StealthBurner=35
        {% set line_x = print_min_x %}
        {% set line_y = print_min_y - 35 %}
        {% set purge_axis = "X" %}
    {% elif print_min_y < 35 and print_min_x >= 35 %}                         # 打印区域左边还有空间
        {% set line_x = print_min_x - 35 %}
        {% set line_y = print_min_y %}
        {% set purge_axis = "Y" %}
    {% else %}                                                                # 上述情况都不满足
        {% set line_x = 1 %}
        {% set line_y = 1 %}
        {% set purge_axis = "X" %}
    {% endif %}
    MESSAGE TEXT="参考最小坐标点：({print_min_x},{print_min_y})"                # 将打印的最小坐标点信息输出到控制台
    MESSAGE TEXT="移动到({line_x},{line_y})，准备画线"                          # 将打印头将要移动的目的坐标输出到控制台
    G90                                                                       # 切换到绝对坐标系
    M83                                                                       # 切换到相对挤出模式
    G1 X{line_x} Y{line_y} Z3 F6000                                           # 移动到准备位置
    STATUS_HEATING                                                            # 设置SB灯颜色
    M109 S{extruder_temp}                                                     # 等待热端到达指定温度
    G1 Z1 F1500                                                               # 下移喷嘴
    G92 E0                                                                    # 重置挤出机
    G1 E20 F600                                                               # 在原地挤出耗材，黏住喷嘴上面的料
    G0 Z0.4                                                                   # 下移Z
    G91                                                                       # 切换到相对坐标系
    G1 {purge_axis}100 E20 F1000                                              # 画一条直线
    G90                                                                       # 切换到绝对坐标系
    G1 E-2 F3000                                                              # 画线后回抽2mm，释放压力
    G92 E0                                                                    # 重置挤出机

# 预热热床
[gcode_macro _HEATING_BED]
description: 预热热床
variable_preheat_wait: 2                                                                                    # 预热等待时间，分钟
variable_temp_interval: 10                                                                                  # 预设温差值
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|int %}
    {% set current_temp = printer['heater_bed'].temperature|int %}
    {% set temp_interval = printer['gcode_macro _HEATING_BED'].temp_interval|int %}
    MESSAGE TEXT="正在预热热床到{BED_TEMP}度，请耐心等待..."
    {% if BED_TEMP > 50 and BED_TEMP - current_temp > temp_interval %}                                      # 热床温度超过60度且目标温度与实际温度差超过预设温差值，分阶段预热，防止从冷床开始预热等待时间过长系统报错
        {% set total_increase = BED_TEMP - current_temp %}                                                  # 获取预热等待时间
        {% set num_stages = (total_increase / temp_interval) | round(0, 'ceil') | int %}                    # 计算需要的次数
        {% set increment = total_increase / num_stages %}
        MESSAGE TEXT="当前热床{current_temp}度与预设温度温差过大，需要分{num_stages}个阶段预热，每次温度增加约{increment|round(1)}度"
        {% for i in range(1, num_stages + 1) %}                                                             # 开始计数循环
            {% if i == num_stages %}
                {% set target_temp = BED_TEMP %}
            {% else %}
                {% set target_temp = current_temp + i * increment %}
            {% endif %}
            MESSAGE TEXT="第{i}阶段，预热到{target_temp|round(1)}度"
            M190 S{target_temp|round(1, 'floor')}
        {% endfor %}
    {% else %}
        M190 S{BED_TEMP}                                                                                     # 等待热床到达指定温度
    {% endif %}

## 打印开始前执行的宏
# 在切片软件的开始G-CODE填入
# CURA 5.0：
# PRINT_START EXTRUDER={material_print_temperature_layer_0} BED={material_bed_temperature_layer_0} CHAMBER={build_volume_temperature} NOZZLE={machine_nozzle_size} FILAMENT={material_type} PRINT_MIN=%MINX%,%MINY% PRINT_MAX=%MAXX%,%MAXY%

# SuperSlicer：
# M190 S0
# M109 S0 ; uncomment to remove set&wait temp gcode added automatically after this start gcode
# PRINT_START EXTRUDER={first_layer_temperature[initial_extruder] + extruder_temperature_offset[initial_extruder]} BED=[first_layer_bed_temperature] CHAMBER=[chamber_temperature] NOZZLE=[nozzle_diameter] FILAMENT=[filament_type] PRINT_MIN={first_layer_print_min[0]},{first_layer_print_min[1]} PRINT_MAX={first_layer_print_max[0]},{first_layer_print_max[1]}

# OrcaSlicer:
# M190 S0
# M109 S0
# PRINT_START EXTRUDER=[nozzle_temperature_initial_layer] BED=[bed_temperature_initial_layer_single] CHAMBER=[chamber_temperature] NOZZLE={nozzle_diameter[0]} FILAMENT=[filament_type] PRINT_MIN={first_layer_print_min[0]},{first_layer_print_min[1]} PRINT_MAX={first_layer_print_max[0]},{first_layer_print_max[1]}
[gcode_macro PRINT_START]
description: 打印开始前进行的操作
variable_preheat_wait: 2                                                                                    # 预热等待时间，分钟
variable_temp_interval: 10                                                                                  # 预设温差值
gcode:
    CLEAR_PAUSE                                                                                             # 清空暂停缓存
    BED_MESH_CLEAR                                                                                          # 清除网床
    POWER_ON_HEATER_BED                                                                                     # 打开AC热床供电
    _CASELIGHT_ON                                                                                           # 打开顶部照明灯
    #SET_FAN_SPEED FAN=tmc_fan SPEED=0.4                                                                     # 开启驱动冷却风扇
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(200)|int %}                                              # 从切片中获取打印头温度
    {% set BED_TEMP = params.BED|default(60)|int %}                                                         # 从切片中获取热床温度
    {% set CHAMBER_TEMP = params.CHAMBER|default(0)|int %}                                                  # 从切片中获取仓温温度
    {% set FILAMENT_TYPE = params.FILAMENT|default("PLA")|string %}                                         # 从切片中获取耗材类型
    {% set NOZZLE_SIZE = params.NOZZLE|default("0.4")|string %}                                             # 从切片中获取喷嘴大小
    SAVE_VARIABLE VARIABLE=filament_type VALUE='"{FILAMENT_TYPE}"'                                          # 保存耗材类型到变量文件
    SAVE_VARIABLE VARIABLE=extruder_temp VALUE={EXTRUDER_TEMP}                                              # 保存挤出机温度到变量文件
    STATUS_HEATING                                                                                          # 设置SB灯颜色
    #M140 S{BED_TEMP}                                                                                        # 设置热床目标温度
    _HEATING_BED BED_TEMP={BED_TEMP}                                                                        # 预热热床
    {% set preheat_wait = printer['gcode_macro PRINT_START'].preheat_wait|default(0)|int %}                 # 获取预热等待时间
    MESSAGE TEXT="热床温度已到{BED_TEMP}度，等待{preheat_wait}分钟温度稳定"
    G4 P{preheat_wait * 60 * 1000}                                                                          # 预热等待
    #TEMPERATURE_ADJUSTED_MESSAGE_START_SETTINGS                                                             # 开启内循环
    {% if CHAMBER_TEMP > 0 %}                                                                               # 判断如果需要仓温则进行指定操作
        #M106 S255                                                                                           # 模型散热风扇开到最大，辅助空气循环
        #SET_FAN_SPEED FAN=motor_fan SPEED=0.8                                                               # 开启XY电机冷却风扇
        MESSAGE TEXT="等待仓温到达预设值({CHAMBER_TEMP}度)..."
        TEMPERATURE_WAIT SENSOR="temperature_sensor Chamber" MINIMUM={CHAMBER_TEMP-5}                       # 等待仓温到达指定温度
        M107                                                                                                # 关闭模型散热风扇
    {% else %}
        #SET_FAN_SPEED FAN=motor_fan SPEED=0.4                                                               # 开启XY电机冷却风扇
    {% endif %}                                                                                             # 结束判断
    MESSAGE TEXT="预热完成，开始打印前校准"
    M109 S150                                                                                               # 等待打印头到达指定温度
    QGL                                                                                                     # 龙门架调平
    STATUS_MESHING                                                                                          # 设置SB灯颜色
    BED_MESH_CALIBRATE ADAPTIVE=1                                                                           # 自适应网床探测
    #_POO                                                                                                    # 拉屎
    _PURGE_LINE PRINT_MIN={params.PRINT_MIN} EXTRUDER_TEMP={EXTRUDER_TEMP}                                  # 根据区域床尺寸自适应打印测试线
    STATUS_PRINTING                                                                                         # 设置SB灯颜色
    MESSAGE TEXT="开始打印"                                                                                  # 输出消息
    #SKEW_PROFILE LOAD=CaliFlower                                                                            # 加载XY歪斜配置
    UPDATE_DELAYED_GCODE ID=CASELIGHT_DELAY_OFF DURATION=300                                                # 5分钟后关闭顶部照明灯

## 打印结束后执行的宏
[gcode_macro PRINT_END]
description: 打印结束后进行的操作
gcode:
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 5, th.axis_maximum.z]|min %}
    G90                                                                                                     # 切换到相对于原点的坐标系
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000                                                                 # 抬高喷嘴避免烫坏打印件
    M400                                                                                                    # 等待缓存清空
    G92 E0                                                                                                  # 重置挤出机
    G1 E-6.0 F1800                                                                                          # 回抽6mm
    TURN_OFF_HEATERS                                                                                        # 关闭喷头加热
    G0 X{th.axis_maximum.x - 20} Y{th.axis_maximum.y - 20} Z{th.position.z + 50 if th.position.z < 100 else z_safe} F3600        # 停到指定位置
    M84                                                                                                     # 关闭步进电机
    M107                                                                                                    # 关闭模型散热风扇
    #Nevermore_off                                                                                          # 关闭内循环
    G4 P5000                                                                                                # 等待5秒
    POWER_OFF_HEATER_BED                                                                                    # 关闭AC热床电源
    MESSAGE MQTT=true TEXT="打印完成"
    #SET_FAN_SPEED FAN=motor_fan SPEED=0                                                                     # 关闭电机散热风扇
    #SET_FAN_SPEED FAN=tmc_fan SPEED=0                                                                       # 关闭驱动散热风扇
    #SET_SKEW CLEAR=1                                                                                        # 取消XY歪斜配置

# 替换M109 (等待热端温度) 允许温度过冲
[gcode_macro M109]
rename_existing: M109.1
gcode:
    {% set use_knomi = printer['gcode_macro _KNOMI_STATUS'] %}
    {% if use_knomi == true %}
        SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_nozzle VALUE=True
    {% endif %}
    {% set s = params.S|float %}
	M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s - 0.5}
    {% endif %}
    {% if use_knomi == true %}
        SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_nozzle VALUE=False
    {% endif %}

## 自定义加速度和减速度
[gcode_macro M204]
description: 自定义加速度和减速度
rename_existing: M204.1
gcode:
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={s / 2.0}

## 热床需要先开启供电后才能加热
[gcode_macro SET_HEATER_TEMPERATURE]
description: 替换原有预热命令
rename_existing: SET_HEATER_TEMPERATURE_ORG
gcode:
  {% set HEATER = params.HEATER|default("None") %}
  {% set TARGET = params.TARGET|default(0)|int %}
  {% if HEATER|lower == "heater_bed" %}
    POWER_ON_HEATER_BED
    SET_HEATER_TEMPERATURE_ORG HEATER={HEATER} TARGET={TARGET}
  {% elif HEATER|lower == "drying" %}
    POWER_ON_DRYING
    SET_HEATER_TEMPERATURE_ORG HEATER={HEATER} TARGET={TARGET}
  {% else %}
    SET_HEATER_TEMPERATURE_ORG HEATER={HEATER} TARGET={TARGET}
  {% endif %}

## 打印头停到前面
[gcode_macro PARKF_RONT]
description: 打印头停到前面
gcode:
    _XY_HOME
    SAVE_GCODE_STATE NAME=park_front
    G90
    G0 X{printer.toolhead.axis_maximum.x / 2} Y{printer.toolhead.axis_minimum.y + 10} F10000
    RESTORE_GCODE_STATE NAME=park_front

## 打印头停靠到中间
[gcode_macro PARK_CENTER]
description: 打印头停靠到中间
gcode:
    _XY_HOME
    SAVE_GCODE_STATE NAME=part_center
    G90
    G0 X{printer.toolhead.axis_maximum.x / 2} Y{printer.toolhead.axis_maximum.y / 2} F10000
    RESTORE_GCODE_STATE NAME=part_center

## 打印头停靠到右后侧
[gcode_macro PARK_REARRIGHT]
description: 打印头停靠到右后侧
gcode:
    _XY_HOME
    SAVE_GCODE_STATE NAME=park_rear_right
    G90
    G0 X{printer.toolhead.axis_maximum.x - 10} Y{printer.toolhead.axis_maximum.y - 10} F10000     
    RESTORE_GCODE_STATE NAME=park_rear_right

## 备份配置文件到GitHub
# 参考文档 https://github.com/th33xitus/kiauh/wiki/How-to-autocommit-config-changes-to-github%3F
[gcode_shell_command backup_cfg]
command: bash /home/samuel/printer_data/config/scripts/git_backup.sh {PARAM}
timeout: 120.
verbose: True

[gcode_macro BACKUP_CFG]
description: 备份配置文件
gcode:
    {% set commit = params.COMMIT|default(输入更新内容) %}
    RUN_SHELL_COMMAND CMD=backup_cfg PARAM=commit

[gcode_shell_command emmc]
command: bash /home/samuel/printer_data/config/scripts/emmc.sh
timeout: 120.
verbose: True

[gcode_macro EMMC]
description: 查看EMMC剩余寿命
gcode:
    RUN_SHELL_COMMAND CMD=emmc
    