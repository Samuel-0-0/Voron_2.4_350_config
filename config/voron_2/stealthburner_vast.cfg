#####################################################################  
# 7灯珠logo灯
#####################################################################

## 喷嘴照明
[led nozzle]
white_pin: vast:PA10
# 默认亮度
initial_WHITE: 0.0

[gcode_macro set_nozzle_leds_on]
# 50%亮度打开喷嘴照明灯
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    set_led led=nozzle white=1.0 transmit={transmit}

[gcode_macro set_nozzle_leds_off]
# 关闭喷嘴照明灯
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    set_led led=nozzle white=0.0 transmit={transmit}

## logo灯
[neopixel logo]
pin: vast:PA9
chain_count: 8
color_order: GRB
initial_RED: 0.01
initial_GREEN: 0.01
initial_BLUE: 0.01

[gcode_macro _sb_vars]
# LED灯珠数量
variable_nled: 8
# 循环次数
variable_cycle: 5
# logo状态颜色
variable_colors: {
        'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0},
        'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5},
        'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35},
        'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0},
        'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2},
        'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4},
        'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0},
        'off': {'r': 0.0, 'g': 0.0, 'b': 0.0},
        'printing': {'r': 1.0, 'g': 0.0, 'b': 0.0},
        'standby': {'r': 0.01, 'g': 0.01, 'b': 0.01},
    }
gcode:

[gcode_macro test_echo]
gcode:
    {% set color = printer["gcode_macro _sb_vars"].colors["meshing"] %}
    {% set r = color.r * 0.01 %}
    {% set g = color.g * 0.01 %}
    {% set b = color.b * 0.01 %}
    set_led led=logo red={r} green={g} blue={b}

[gcode_macro _set_logo_leds_stream]
gcode:
    {% set color_name = params.COLOR %}
    {% set color = printer["gcode_macro _sb_vars"].colors[color_name] %}
    {% set r1 = color.r * 0.1 %}
    {% set g1 = color.g * 0.1 %}
    {% set b1 = color.b * 0.1 %}
    {% set r2 = color.r * 0.5 %}
    {% set g2 = color.g * 0.5 %}
    {% set b2 = color.b * 0.5 %}
    {% for ciclo in range(printer["gcode_macro _sb_vars"].cycle) %}
        {% for sx in range(printer["gcode_macro _sb_vars"].nled) %}
          {% if sx > 0 %}
             set_led led=logo red=0 green=0 blue=0
             {% if sx > 1 %}
                set_led led=logo red={r1} green={g1} blue={b1} idx={sx-1}
             {% endif %}
             set_led led=logo red={r2} green={g2} blue={b2} idx={sx}
             set_led led=logo red={color.r} green={color.g} blue={color.b} idx={sx+1}
            G4 P160
          {% endif %}
        {% endfor %}
        {% for dx in range(printer["gcode_macro _sb_vars"].nled) %}
          set_led led=logo red=0 green=0 blue=0
          {% set n1 = printer["gcode_macro _sb_vars"].nled|int+1 %}
          {% set n2 = printer["gcode_macro _sb_vars"].nled|int+2 %}
          {% if dx > 2 %}
             set_led led=logo red={r1} green={g1} blue={b1} idx={printer["gcode_macro _sb_vars"].nled+3-dx}
             set_led led=logo red={r2} green={g2} blue={b2} idx={n2-dx}
             set_led led=logo red={color.r} green={color.g} blue={color.b} idx={n1-dx}
             G4 P160
          {% endif %}
        {% endfor %}
    {% endfor %}
    set_led led=logo red=0 green=0 blue=0


[gcode_macro set_logo_leds_off]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    set_led led=logo red=0 blue=0 green=0 transmit={transmit}

[gcode_macro status_off]
gcode:
    set_logo_leds_off transmit=1
    #set_nozzle_leds_off

[gcode_macro status_ready]
gcode:
    _set_logo_leds_stream color="standby" transmit=1
    #set_nozzle_leds_on

[gcode_macro status_busy]
gcode:
    _set_logo_leds_stream color="busy" transmit=1
    #set_nozzle_leds_on

[gcode_macro status_heating]
gcode:
    _set_logo_leds_stream color="heating" transmit=1
    #set_nozzle_leds_on

[gcode_macro status_leveling]
gcode:
    _set_logo_leds_stream color="leveling" transmit=1
    #set_nozzle_leds_on

[gcode_macro status_homing]
gcode:
    _set_logo_leds_stream color="homing" transmit=1
    #set_nozzle_leds_on

[gcode_macro status_cleaning]
gcode:
    _set_logo_leds_stream color="cleaning" transmit=1
    #set_nozzle_leds_on

[gcode_macro status_meshing]
gcode:
    _set_logo_leds_stream color="meshing" transmit=1
    #set_nozzle_leds_on

[gcode_macro status_calibrating_z]
gcode:
    _set_logo_leds_stream color="calibrating_z" transmit=1
    #set_nozzle_leds_on

[gcode_macro status_printing]
gcode:
    _set_logo_leds_stream color="printing" transmit=1
    #set_nozzle_leds_on





[gcode_macro KITT_WHITE]
gcode:
    {% for ciclo in range(printer["gcode_macro _sb_vars"].cycle) %}
        {% for sx in range(printer["gcode_macro _sb_vars"].nled) %}
          {% if sx > 0 %}
             SET_LED LED=logo RED=0 GREEN=0 BLUE=0
             {% if sx > 1 %}
                SET_LED LED=logo RED=0.2 GREEN=0.2 BLUE=0.2 INDEX={sx-1}
             {% endif %}
             SET_LED LED=logo RED=0.4 GREEN=0.4 BLUE=0.4 INDEX={sx}
             SET_LED LED=logo RED=0.6 GREEN=0.6 BLUE=0.6 INDEX={sx+1}
            G4 P160
          {% endif %}
        {% endfor %}
        {% for dx in range(printer["gcode_macro _sb_vars"].nled) %}
          SET_LED LED=logo RED=0 GREEN=0 BLUE=0
          {% set n1 = printer["gcode_macro _sb_vars"].nled|int+1 %}
          {% set n2 = printer["gcode_macro _sb_vars"].nled|int+2 %}
          {% if dx > 2 %}
             SET_LED LED=logo RED=0.2 GREEN=0.2 BLUE=0.2 INDEX={printer["gcode_macro _sb_vars"].nled+3-dx}
             SET_LED LED=logo RED=0.4 GREEN=0.4 BLUE=0.4 INDEX={n2-dx}
             SET_LED LED=logo RED=0.6 GREEN=0.6 BLUE=0.6 INDEX={n1-dx}
             G4 P160
          {% endif %}
        {% endfor %}
    {% endfor %}
    SET_LED LED=logo RED=0 GREEN=0 BLUE=0




[gcode_macro flicker]
description: 闪烁
gcode:
    {% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}
    {% set RGB_Red = 0.1 %}
    {% set RGB_Green = 0.1 %}
    {% set RGB_Blue = 0.1 %}
    {% set RGB_Strip = "logo" %}

    {% for toggletime in LEDTimes %}
      {% set ledTime = toggletime|string %}
      {% set loopCount = loop.index %}

      {% if loopCount is divisibleby 2 %} # If the loop index is divisible by 2 (firtst index is NOT so the LEd should turn ON)
        SET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue} 
        G4 P{ledTime|int}
      {% else %}
        SET_LED LED={RGB_Strip}
        G4 P{ledTime|int}
      {% endif %}

    {% endfor %}

    {% for i in range(1,9) %}  # loops 1,2,3,4,5
      {action_respond_info(i|string)}
      SET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1
      G4 P200
    {% endfor %}
