#####################################################################
# 远程4挤出机选色，配合近程挤出机，挤出同步器，耗材传感器，其他相关控制宏
# 工作逻辑：
# 回卷电机───┐
# 耗材（回卷传动控制1）──耗材存在传感器1──远程挤出机1──┐
# 耗材（回卷传动控制2）──耗材存在传感器2──远程挤出机2──┤
# 耗材（回卷传动控制3）──耗材存在传感器3──远程挤出机3──┼──4并1
# 耗材（回卷传动控制4）──耗材存在传感器4──远程挤出机4──┘   │
#       ┌──────────────────────────────────────────────┘
# 挤出机同步器──耗材运动传感器──近程挤出机──耗材存在传感器5──切刀──热端
#
# 4个独立的远程挤出机分别对应一种耗材，耗材先经过存在传感器检测，
# 之后进入对应的远程挤出机，然后经过4并1接到同步器，接着进耗材运动传感器，
# 然后经过近程挤出机到存在传感器，最后经切刀后到达热端。
# 耗材切换时由切片软件中的耗材起始和结束配置调用相应的宏控制。
# 如Spoolman的耗材切换、切断耗材、撤回耗材、回卷、重新扯出新耗材等。
# 每次切换耗材时都在变量存储文件中保存相应的挤出机编号，实现断电记忆。
#####################################################################

# 指定使用的主板
#[include boards/btt-octopus-pro-f446-v1.0.cfg]

#####################################################################
# 配置远程挤出机
#####################################################################
## 0号远程挤出机
[extruder_stepper extruder0]
extruder: #extruder              # 不与近程挤出机绑定
enable_pin: !M3_EN
step_pin: M3_STEP
dir_pin: M3_DIR
microsteps: 16
full_steps_per_rotation: 400
rotation_distance: 22.837

[tmc5160 extruder_stepper extruder0]
spi_software_sclk_pin: DRIVER_SPI_SCK             # 通讯端口Pin脚定义
spi_software_mosi_pin: DRIVER_SPI_MOSI            # 通讯端口Pin脚定义
spi_software_miso_pin: DRIVER_SPI_MISO            # 通讯端口Pin脚定义
cs_pin: M3_CS                                     # 通讯端口Pin脚定义
run_current: 0.6                                  # 电机运行电流值
sense_resistor: 0.022                             # 驱动采样电阻值（根据驱动电阻填，确定以后不需要修改）
interpolate: True                                 # 是否开启256微步插值，默认开启
#stealthchop_threshold: 999999                     # 999999表示一直开启stealthChop模式，默认0，使用spreadCycle模式

#[tmc2209 extruder_stepper extruder0]
#uart_pin: M3_CS
#interpolate: true
#run_current: 0.9
#sense_resistor: 0.11
#stealthchop_threshold: 0

## 1号远程挤出机
[extruder_stepper extruder1]
extruder: #extruder              # 不与近程挤出机绑定
enable_pin: !M4_EN
step_pin: M4_STEP
dir_pin: M4_DIR
microsteps: 16
full_steps_per_rotation: 400
rotation_distance: 22.172

[tmc5160 extruder_stepper extruder1]
spi_software_sclk_pin: DRIVER_SPI_SCK             # 通讯端口Pin脚定义
spi_software_mosi_pin: DRIVER_SPI_MOSI            # 通讯端口Pin脚定义
spi_software_miso_pin: DRIVER_SPI_MISO            # 通讯端口Pin脚定义
cs_pin: M4_CS                                     # 通讯端口Pin脚定义
run_current: 0.6                                  # 电机运行电流值
sense_resistor: 0.022                             # 驱动采样电阻值（根据驱动电阻填，确定以后不需要修改）
interpolate: True                                 # 是否开启256微步插值，默认开启
#stealthchop_threshold: 999999                     # 999999表示一直开启stealthChop模式，默认0，使用spreadCycle模式

#[tmc2209 extruder_stepper extruder1]
#uart_pin: 5in1:P1.8
#interpolate: true
#run_current: 0.9
#sense_resistor: 0.09
#stealthchop_threshold: 0

## 2号远程挤出机
#[extruder_stepper extruder2]
#extruder: #extruder
#step_pin = 5in1:P0.22
#dir_pin = 5in1:P2.11
#enable_pin = !5in1:P0.21
#microsteps: 16
#rotation_distance: 8

#[tmc2209 extruder_stepper extruder2]
#uart_pin: 5in1:P1.10
#interpolate: true
#run_current: 0.9
#sense_resistor: 0.09
#stealthchop_threshold: 0

## 3号远程挤出机
#[extruder_stepper extruder3]
#extruder: #extruder
#step_pin = 5in1:P2.13
#dir_pin = !5in1:P0.11
#enable_pin = !5in1:P2.12
#microsteps: 16
#rotation_distance: 8

#[tmc2209 extruder_stepper extruder3]
#uart_pin: 5in1:P1.15
#interpolate: true
#run_current: 0.9
#sense_resistor: 0.09
#stealthchop_threshold: 0

#####################################################################
# 激活远程挤出机
#####################################################################
[gcode_macro T0]
gcode:
    {% set new_id = 0 %}
    {% if 'save_variables' in printer %}                        # 如果使用了文件存储参数
        {% set svv = printer.save_variables.variables %}        # 读取存储的变量参数
        {% if 'extruder_id' in svv %}                           # 如果变量中存在extruder_id参数
            {% set old_id = svv.extruder_id %}                  # 设置id为变量参数
        {% endif %}
    {% endif %}
    {% if new_id != old_id %}
        # 从热端退出耗材

        # 检测到耗材抽出后，近程挤出机暂停
    
        # 切断耗材尖端
    
        # 耗材退回起点
        
        # 切换远程挤出机
        { action_respond_info("正在切换到远程挤出机 T%s" % (new_id)) }
        _CHANGE_EXTRUDER NEW_ID={new_id} OLD_ID={old_id}
        # 装载新耗材

        # 检测到耗材插入后，近程挤出机工作
    
        # 
    {% else %}
        { action_respond_info("当前正在使用远程挤出机 T%s" % (new_id)) }
        # 将新的远程挤出机与近程挤出机绑定
        SYNC_EXTRUDER_MOTION EXTRUDER=extruder{new_id} MOTION_QUEUE=extruder
        # 启用新的挤出机的步进电机
        SET_STEPPER_ENABLE STEPPER="extruder_stepper extruder{new_id}" ENABLE=1
    {% endif %}

[gcode_macro T1]
gcode:
    {% set new_id = 1 %}
    {% if 'save_variables' in printer %}                        # 如果使用了文件存储参数
        {% set svv = printer.save_variables.variables %}        # 读取存储的变量参数
        {% if 'extruder_id' in svv %}                           # 如果变量中存在extruder_id参数
            {% set old_id = svv.extruder_id %}                  # 设置id为变量参数
        {% endif %}
    {% endif %}
    {% if new_id != old_id %}
        # 从热端退出耗材
    
        # 切断耗材尖端
    
        # 耗材退回起点
        
        # 切换远程挤出机
        { action_respond_info("正在切换到远程挤出机 T%s" % (new_id)) }
        _CHANGE_EXTRUDER NEW_ID={new_id} OLD_ID={old_id}
        # 装载新耗材
    
        # 
    {% else %}
        { action_respond_info("当前正在使用远程挤出机 T%s" % (new_id)) }
        # 将新的远程挤出机与近程挤出机绑定
        SYNC_EXTRUDER_MOTION EXTRUDER=extruder{new_id} MOTION_QUEUE=extruder
        # 启用新的挤出机的步进电机
        SET_STEPPER_ENABLE STEPPER="extruder_stepper extruder{new_id}" ENABLE=1
    {% endif %}


#[gcode_macro T2]
#gcode:
    # 切换远程挤出机
#    _CHANGE_EXTRUDER ID=2

#[gcode_macro T3]
#gcode:
    # 切换远程挤出机
#    _CHANGE_EXTRUDER ID=3

## 切换远程挤出机
[gcode_macro _CHANGE_EXTRUDER]
description: 切换远程挤出机
gcode:
    {% if params.NEW_ID %}
        {% set new_id = params.NEW_ID|int %}
    {% else %}
        {action_respond_info("gcode_macro _CHANGE_EXTRUDER：参数'NEW_ID'是必须的")}
    {% endif %}
        {% if params.OLD_ID %}
        {% set old_id = params.OLD_ID|int %}
    {% else %}
        {action_respond_info("gcode_macro _CHANGE_EXTRUDER：参数'OLD_ID'是必须的")}
    {% endif %}
    # 取消当前远程挤出机的同步状态
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder{old_id} MOTION_QUEUE=
    # 关闭当前远程挤出机的步进电机
    SET_STEPPER_ENABLE STEPPER="extruder_stepper extruder{old_id}" ENABLE=0
    # 将新的远程挤出机与近程挤出机绑定
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder{new_id} MOTION_QUEUE=extruder
    # 启用新的挤出机的步进电机
    SET_STEPPER_ENABLE STEPPER="extruder_stepper extruder{new_id}" ENABLE=1
    # 保存启用的远程挤出机编号到extruder_id变量
    SAVE_VARIABLE VARIABLE=extruder_id VALUE="{new_id}"

# 系统开机的时候初始化远程挤出机
[delayed_gcode activate_extruder]
initial_duration: 3
gcode:
    {% if 'save_variables' in printer %}                             # 如果使用了文件存储参数
        {% set svv = printer.save_variables.variables %}             # 读取存储的变量参数
        {% if 'extruder_id' in svv %}                                # 如果变量中存在extruder_id参数
            {% set id = svv.extruder_id %}                           # 设置id为变量参数
            T{id}                                                    # 切换到上次使用的远程挤出机
        {% else %}                                                   # 如果没使用变量
            {action_respond_info("未定义使用哪路耗材，请手动指定")}     # 弹出提示
        {% endif %}
    {% endif %}

#####################################################################
# 耗材存在传感器
#####################################################################
# [filament_switch_sensor tbuffer_sensor]
# pause_on_runout: False #True
# switch_pin: ^!PA2
# runout_gcode: PAUSE_extruder

#####################################################################
## 耗材运动传感器，使用BIQU Smart Filament Sensor
#####################################################################
[filament_motion_sensor smart_filament_sensor]
detection_length: 3                       # 触发传感器需要的耗材移动长度。默认7mm
extruder: extruder                        # 对应挤出机名称
switch_pin: M4_STOP                          # 传感器PIN脚
pause_on_runout: False                    # 设置为False，关闭耗材抽离检测功能。默认True
event_delay: 3.0                          # 事件最小间隔时间，在此期间内的事件会被忽略。默认3s
pause_delay: 0.5                          # 执行暂停打印和runout_gcode宏的间隔时间。默认0.5s

## 延迟执行关闭耗材运动传感器
[delayed_gcode DISABLE_FILAMENT_SENSOR] 
initial_duration: 5                       # 系统启动并进入ready状态5秒后
gcode:
    SET_FILAMENT_SENSOR SENSOR=smart_filament_sensor ENABLE=0

## 开启耗材运动传感器
[gcode_macro SFS_ENABLE]
description: 启用耗材运动传感器
gcode:
    { action_respond_info("耗材运动传感器已启用") }
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=smart_filament_sensor ENABLE=1

## 关闭耗材运动传感器
[gcode_macro SFS_DISABLE]
description: 停用耗材运动传感器
gcode:
    { action_respond_info("耗材运动传感器已停用") }
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=smart_filament_sensor ENABLE=0


#####################################################################
# 同步缓冲器
#####################################################################
[gcode_button buffer_button]
pin: M3_STOP
#   连接到按钮的引脚。
#   必须提供此参数。
#analog_range:
#   两个逗号分隔的阻值(单位：欧姆)，指定了按钮的最小和最大电阻。
#   如果提供了 analog_range ，必须使用一个模拟功能的引脚。默认
#   情况下为按钮使用数字GPIO。
#   analog_pullup_resistor:
#   当定义 analog_range 时的上拉电阻(欧姆)。默认为4700欧姆。
press_gcode: PAUSE_extruder
#   当按钮被按下时要执行的 G-Code 命令序列，支持G-Code模板。
#   必须提供此参数。
release_gcode: RESUME_extruder
#   当按钮被释放时要执行的G-Code命令序列，支持G-Code模板。
#   默认在按钮释放时不运行任何命令。
# action_command: EXTRUDER_PAUSE

[gcode_macro PAUSE_extruder]
gcode: 
    {% if 'save_variables' in printer %}                        # 如果使用了文件存储参数
        {% set svv = printer.save_variables.variables %}        # 读取存储的变量参数
        {% if 'extruder_id' in svv %}                           # 如果变量中存在extruder_id参数
            {% set id = svv.extruder_id %}                      # 设置id为变量参数
        {% endif %}
    {% endif %}
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder{id} MOTION_QUEUE=
    #SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extrude{id} DISTANCE={printer.configfile.settings['extruder_stepper extruder{id}'].rotation_distance - 0.2 |float}

[gcode_macro RESUME_extruder]
gcode: 
    {% if 'save_variables' in printer %}                        # 如果使用了文件存储参数
        {% set svv = printer.save_variables.variables %}        # 读取存储的变量参数
        {% if 'extruder_id' in svv %}                           # 如果变量中存在extruder_id参数
            {% set id = svv.extruder_id %}                      # 设置id为变量参数
        {% endif %}
    {% endif %}
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder{id} MOTION_QUEUE=extruder

#####################################################################
# Spoolman配套GCODE，用于激活使用中的料盘，并记录消耗情况
#####################################################################
[gcode_macro SET_ACTIVE_SPOOL]
description: Spoolman配套GCODE，用于激活使用中的料盘，并记录消耗情况
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method("spoolman_set_active_spool",spool_id=id)}
  {% else %}
    {action_respond_info("参数'ID'是必须的，请使用命令'SET_ACTIVE_SPOOL ID=数字'")}
  {% endif %}

# Spoolman配套GCODE，用于撤销标记使用中的料盘
[gcode_macro CLEAR_ACTIVE_SPOOL]
description: Spoolman配套GCODE，用于撤销标记使用中的料盘
gcode:
  {action_call_remote_method("spoolman_set_active_spool",spool_id=None)}

#####################################################################
# 耗材切换
#####################################################################
## 更换耗材
[gcode_macro CHANGE_FILAMENT]
description: 更换耗材
gcode:
    {% if 'save_variables' in printer and printer.save_variables.variables.filament_insert == 'true' %}   #判断是否标记耗材状态为已插入
        { action_respond_info("从挤出机撤出耗材") }
        UNLOAD_FILAMENT            # 取出耗材
    {% else %}
        { action_respond_info("装载耗材到挤出机") }
        LOAD_FILAMENT   # 插入耗材
    {% endif %}

## 从挤出机撤出耗材
[gcode_macro UNLOAD_FILAMENT]
description: 撤出耗材
gcode:
    {% if printer.webhooks.state|lower == 'printing' %}        # 判断是否正在打印
        PAUSE                                                  # 暂停打印
    {% endif %}
    {% if 'save_variables' in printer %}                       # 如果使用了变量存储
        {% set svv = printer.save_variables.variables %}       # 读取存储的变量参数
        {% if 'extruder_temp' in svv %}                        # 如果变量中存在extruder_temp参数
            {% set TEMP = svv.extruder_temp %}                 # 设置挤出温度为变量参数
        {% endif %}
    {% else %}                                                 # 如果没使用变量
        {% set TEMP = params.TEMP|default(230)|float %}        # 设置挤出温度
    {% endif %}
    {% set DISTANCE = params.DISTANCE|default(110)|float %}    # 设置耗材抽取长度
    M400                                                       # 等待操作全部完成
    M109 S{TEMP}                                               # 等待热端温度
    M82                                                        # 使用绝对距离
    G92 E0                                                     # 重置挤出机
    G1 E10 F300                                                # 先挤出10mm，排除掉上次回抽进来的料
    _ERCF_FORM_TIP_STANDALONE                                  # 耗材尖端成型
    G1 E{DISTANCE|float * -1} F2000                            # 将耗材一次性抽出
    SAVE_VARIABLE VARIABLE=filament_insert VALUE='"false"'     # 标记耗材已取出
    CLEAR_ACTIVE_SPOOL                                         # Spoolman撤销激活料盘

## 装载耗材到挤出机
[gcode_macro LOAD_FILAMENT]
description: 装载耗材
gcode:
    {% if 'save_variables' in printer %}                       # 如果使用了变量存储
        {% set svv = printer.save_variables.variables %}       # 读取存储的变量参数
        {% if 'extruder_temp' in svv %}                        # 如果变量中存在extruder_temp参数
            {% set TEMP = svv.extruder_temp %}                 # 设置挤出温度为变量参数
        {% endif %}
    {% else %}                                                 # 如果没使用变量
        {% set TEMP = params.TEMP|default(230)|float %}        # 设置挤出温度
    {% endif %}
    {% set DISTANCE = params.DISTANCE|default(130)|float %}    # 设置耗材拉扯长度
    M400                                                       # 等待操作全部完成
    M109 S{TEMP}                                               # 检测热端温度
    M83                                                        # 使用相对距离
    G92 E0                                                     # 重置挤出机
    G1 E{DISTANCE|float} F300                                  # 加载耗材
    G92 E0                                                     # 重置挤出机
    SAVE_VARIABLE VARIABLE=filament_insert VALUE='"true"'      # 标记耗材已插入
