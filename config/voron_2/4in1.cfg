################################################################################
# VORON 2.4  350mm  打印机配置文件
################################################################################
# COPYRIGHT © 2021 - 2025  Samuel Wang
# 本文件可以根据GNU GPLv3许可协议进行分发
# This file may be distributed under the terms of the GNU GPLv3 license
################################################################################
# Discord: Samuel-0-0#0576    Github: Samuel-0-0    Bilibili: Samuel-0_0
################################################################################
# 文件用途：多远程挤出机
################################################################################
# 根据你的设置编辑此文件
################################################################################

#####################################################################
# 远程4挤出机选色，配合近程挤出机，挤出同步器，耗材传感器，其他相关控制宏
# 工作逻辑：
# 回卷电机───┐
# 耗材（回卷传动控制1）──耗材存在传感器1──远程挤出机1──┐
# 耗材（回卷传动控制2）──耗材存在传感器2──远程挤出机2──┤
# 耗材（回卷传动控制3）──耗材存在传感器3──远程挤出机3──┼──4并1
# 耗材（回卷传动控制4）──耗材存在传感器4──远程挤出机4──┘   │
#  ┌───────────────────────────────────────────────────┘
# 切刀──挤出机同步器──耗材运动传感器──近程挤出机──耗材存在传感器5──热端
#
# 4个独立的耗材位分别对应一种耗材，存在传感器检测该通道是否有耗材，
# 之后进入对应的远程挤出机，然后经过4并1以及切刀、同步器、运动传感器，
# 然后经过近程挤出机到达热端。
# 耗材切换时由切片软件中的耗材起始和结束配置调用相应的宏控制。
# 如Spoolman的耗材切换、切断耗材、撤回耗材、回卷、重新扯出新耗材等。
# 每次切换耗材时都在变量存储文件中保存相应的挤出机编号，实现断电记忆。
#####################################################################

# 指定使用的主板
#[include boards/btt-octopus-pro-f446-v1.0.cfg]

#####################################################################
# 配置远程挤出机
#####################################################################
## 0号远程挤出机
[extruder_stepper extruder0]
extruder: #extruder              # 不与近程挤出机绑定
enable_pin: !M3_EN
step_pin: M3_STEP
dir_pin: M3_DIR
microsteps: 16
full_steps_per_rotation: 400
rotation_distance: 22.43

[tmc5160 extruder_stepper extruder0]
spi_software_sclk_pin: DRIVER_SPI_SCK             # 通讯端口Pin脚定义
spi_software_mosi_pin: DRIVER_SPI_MOSI            # 通讯端口Pin脚定义
spi_software_miso_pin: DRIVER_SPI_MISO            # 通讯端口Pin脚定义
cs_pin: M3_CS                                     # 通讯端口Pin脚定义
run_current: 0.6                                  # 电机运行电流值
sense_resistor: 0.022                             # 驱动采样电阻值（根据驱动电阻填，确定以后不需要修改）
interpolate: True                                # 是否开启256微步插值，默认开启
#stealthchop_threshold: 999999                     # 999999表示一直开启stealthChop模式，默认0，使用spreadCycle模式

#[tmc2209 extruder_stepper extruder0]
#uart_pin: M3_CS
#interpolate: true
#run_current: 0.9
#sense_resistor: 0.11
#stealthchop_threshold: 0

## 1号远程挤出机
[extruder_stepper extruder1]
extruder: #extruder              # 不与近程挤出机绑定
enable_pin: !M4_EN
step_pin: M4_STEP
dir_pin: M4_DIR
microsteps: 16
full_steps_per_rotation: 400
rotation_distance: 22.45

[tmc5160 extruder_stepper extruder1]
spi_software_sclk_pin: DRIVER_SPI_SCK             # 通讯端口Pin脚定义
spi_software_mosi_pin: DRIVER_SPI_MOSI            # 通讯端口Pin脚定义
spi_software_miso_pin: DRIVER_SPI_MISO            # 通讯端口Pin脚定义
cs_pin: M4_CS                                     # 通讯端口Pin脚定义
run_current: 0.6                                  # 电机运行电流值
sense_resistor: 0.022                             # 驱动采样电阻值（根据驱动电阻填，确定以后不需要修改）
interpolate: True                                 # 是否开启256微步插值，默认开启
#stealthchop_threshold: 999999                     # 999999表示一直开启stealthChop模式，默认0，使用spreadCycle模式

#[tmc2209 extruder_stepper extruder1]
#uart_pin: 5in1:P1.8
#interpolate: true
#run_current: 0.9
#sense_resistor: 0.09
#stealthchop_threshold: 0

## 2号远程挤出机
#[extruder_stepper extruder2]
#extruder: #extruder
#step_pin = 5in1:P0.22
#dir_pin = 5in1:P2.11
#enable_pin = !5in1:P0.21
#microsteps: 16
#rotation_distance: 8

#[tmc2209 extruder_stepper extruder2]
#uart_pin: 5in1:P1.10
#interpolate: true
#run_current: 0.9
#sense_resistor: 0.09
#stealthchop_threshold: 0

## 3号远程挤出机
#[extruder_stepper extruder3]
#extruder: #extruder
#step_pin = 5in1:P2.13
#dir_pin = !5in1:P0.11
#enable_pin = !5in1:P2.12
#microsteps: 16
#rotation_distance: 8

#[tmc2209 extruder_stepper extruder3]
#uart_pin: 5in1:P1.15
#interpolate: true
#run_current: 0.9
#sense_resistor: 0.09
#stealthchop_threshold: 0

#####################################################################
# 激活远程挤出机
#####################################################################
[gcode_macro T0]
gcode:
    {% set new_id = 0 %}
    {% if 'save_variables' in printer %}                        # 如果使用了文件存储参数
        {% set svv = printer.save_variables.variables %}        # 读取存储的变量参数
        {% if 'extruder_id' in svv %}                           # 如果变量中存在extruder_id参数
            {% set old_id = svv.extruder_id %}                  # 设置id为变量参数
        {% endif %}
    {% endif %}
    {% if new_id != old_id %}
        # 从热端退出耗材

        # 检测到耗材抽出后，近程挤出机暂停
    
        # 切断耗材尖端
    
        # 耗材退回起点
        
        # 切换远程挤出机
        { action_respond_info("正在切换到远程挤出机 T%s" % (new_id)) }
        _CHANGE_EXTRUDER NEW_ID={new_id} OLD_ID={old_id}
        # 装载新耗材

        # 检测到耗材插入后，近程挤出机工作
    
        # 
    {% else %}
        # 将新的远程挤出机与近程挤出机绑定
        SYNC_EXTRUDER_MOTION EXTRUDER=extruder{new_id} MOTION_QUEUE=extruder
        # 启用新的挤出机的步进电机
        SET_STEPPER_ENABLE STEPPER="extruder_stepper extruder{new_id}" ENABLE=1
        { action_respond_info("当前正在使用远程挤出机 T%s" % (new_id)) }
    {% endif %}

[gcode_macro T1]
gcode:
    {% set new_id = 1 %}
    {% if 'save_variables' in printer %}                        # 如果使用了文件存储参数
        {% set svv = printer.save_variables.variables %}        # 读取存储的变量参数
        {% if 'extruder_id' in svv %}                           # 如果变量中存在extruder_id参数
            {% set old_id = svv.extruder_id %}                  # 设置id为变量参数
        {% endif %}
    {% endif %}
    {% if new_id != old_id %}
        # 从热端退出耗材
    
        # 切断耗材尖端
    
        # 耗材退回起点
        
        # 切换远程挤出机
        { action_respond_info("正在切换到远程挤出机 T%s" % (new_id)) }
        _CHANGE_EXTRUDER NEW_ID={new_id} OLD_ID={old_id}
        # 装载新耗材
    
        # 
    {% else %}
        # 将新的远程挤出机与近程挤出机绑定
        SYNC_EXTRUDER_MOTION EXTRUDER=extruder{new_id} MOTION_QUEUE=extruder
        # 启用新的挤出机的步进电机
        SET_STEPPER_ENABLE STEPPER="extruder_stepper extruder{new_id}" ENABLE=1
        { action_respond_info("当前正在使用远程挤出机 T%s" % (new_id)) }
    {% endif %}


#[gcode_macro T2]
#gcode:
    # 切换远程挤出机
#    _CHANGE_EXTRUDER ID=2

#[gcode_macro T3]
#gcode:
    # 切换远程挤出机
#    _CHANGE_EXTRUDER ID=3

## 切换远程挤出机
[gcode_macro _CHANGE_EXTRUDER]
description: 切换远程挤出机
gcode:
    {% if params.NEW_ID %}
        {% set new_id = params.NEW_ID|int %}
    {% else %}
        {action_respond_info("gcode_macro _CHANGE_EXTRUDER：参数'NEW_ID'是必须的")}
    {% endif %}
        {% if params.OLD_ID %}
        {% set old_id = params.OLD_ID|int %}
    {% else %}
        {action_respond_info("gcode_macro _CHANGE_EXTRUDER：参数'OLD_ID'是必须的")}
    {% endif %}
    # 取消当前远程挤出机的同步状态
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder{old_id} MOTION_QUEUE=
    # 关闭当前远程挤出机的步进电机
    SET_STEPPER_ENABLE STEPPER="extruder_stepper extruder{old_id}" ENABLE=0
    # 将新的远程挤出机与近程挤出机绑定
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder{new_id} MOTION_QUEUE=extruder
    # 启用新的挤出机的步进电机
    SET_STEPPER_ENABLE STEPPER="extruder_stepper extruder{new_id}" ENABLE=1
    # 保存启用的远程挤出机编号到extruder_id变量
    SAVE_VARIABLE VARIABLE=extruder_id VALUE="{new_id}"
    { action_respond_info("成功切换到远程挤出机 T%s" % (new_id)) }

# 系统开机的时候初始化远程挤出机
[delayed_gcode activate_extruder]
initial_duration: 3
gcode:
    {% if 'save_variables' in printer %}                             # 如果使用了文件存储参数
        {% set svv = printer.save_variables.variables %}             # 读取存储的变量参数
        {% if 'extruder_id' in svv %}                                # 如果变量中存在extruder_id参数
            {% set id = svv.extruder_id %}                           # 设置id为变量参数
            T{id}                                                    # 切换到上次使用的远程挤出机
        {% else %}                                                   # 如果没使用变量
            {action_respond_info("未定义使用哪路耗材，请手动指定")}     # 弹出提示
        {% endif %}
    {% endif %}

#####################################################################
# 耗材存在传感器
#####################################################################
# [filament_switch_sensor tbuffer_sensor]
# pause_on_runout: False #True
# switch_pin: ^!PA2
# runout_gcode: PAUSE_extruder

#####################################################################
## 耗材运动传感器
#####################################################################
[filament_motion_sensor encoder_sensor]
detection_length: 10                      # 触发传感器需要的耗材移动长度。默认7mm
extruder: extruder                        # 对应挤出机名称
switch_pin: ^M8_STOP                       # 传感器PIN脚
pause_on_runout: False                    # 设置为False，关闭耗材抽离检测功能。默认True
event_delay: 3.0                          # 事件最小间隔时间，在此期间内的事件会被忽略。默认3s
pause_delay: 0.5                          # 执行暂停打印和runout_gcode宏的间隔时间。默认0.5s
runout_gcode:
  {% set CURRENT_ACCEL = printer.toolhead.max_accel %} 
  {% set CURRENT_TEMP = printer['extruder'].target %} 
  {% set OriginalState = printer.print_stats.state %}
  {% if OriginalState == "printing" %}
   PAUSE
   RESPOND TYPE=error msg="!! 堵头了吗 !!"
  {% endif %}

## 延迟执行关闭耗材运动传感器
[delayed_gcode DISABLE_MOTION_SENSOR] 
initial_duration: 5                       # 系统启动并进入ready状态5秒后
gcode:
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0

## 开启耗材运动传感器
[gcode_macro MS_ENABLE]
description: 启用耗材运动传感器
gcode:
    { action_respond_info("耗材运动传感器已启用") }
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1

## 关闭耗材运动传感器
[gcode_macro MS_DISABLE]
description: 停用耗材运动传感器
gcode:
    { action_respond_info("耗材运动传感器已停用") }
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0


#####################################################################
# 同步缓冲器
#####################################################################{% set param = "printer.configfile.config['%s'] = %s" % (name1, printer.configfile.config[name1]) %}
# 远程挤出机比近程挤出机慢
[gcode_button Tension]
pin: ^M7_STOP
press_gcode:
    G4 P2000  # N52磁性太强了，让它多移动一点距离
    FEED_FASTER

# 远程挤出机比近程挤出机快
[gcode_button Compression]
pin: ^M6_STOP
press_gcode:
    G4 P2000  # N52磁性太强了，让它多移动一点距离
    FEED_SLOWER

[gcode_macro FEED_FASTER]  
gcode:
    {% if 'save_variables' in printer %}                        # 如果使用了文件存储参数
        {% set svv = printer.save_variables.variables %}        # 读取存储的变量参数
        {% if 'extruder_id' in svv %}                           # 如果变量中存在extruder_id参数
            {% set id = svv.extruder_id|string %}                      # 设置id为变量参数
        {% endif %}
    {% endif %}
    {% set NEWRD = 0.95 * printer.configfile.config['extruder_stepper extruder' + id].rotation_distance |float %}
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder{id} DISTANCE={NEWRD}

[gcode_macro FEED_SLOWER] 
gcode:
    {% if 'save_variables' in printer %}                        # 如果使用了文件存储参数
        {% set svv = printer.save_variables.variables %}        # 读取存储的变量参数
        {% if 'extruder_id' in svv %}                           # 如果变量中存在extruder_id参数
            {% set id = svv.extruder_id|string %}                      # 设置id为变量参数
        {% endif %}
    {% endif %}
    {% set NEWRD = 1.05* printer.configfile.config['extruder_stepper extruder' + id].rotation_distance |float %}
    SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder{id} DISTANCE={NEWRD}

#####################################################################
# Spoolman配套GCODE，用于激活使用中的料盘，并记录消耗情况
#####################################################################
[gcode_macro SET_ACTIVE_SPOOL]
description: Spoolman配套GCODE，用于激活使用中的料盘，并记录消耗情况
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method("spoolman_set_active_spool",spool_id=id)}
  {% else %}
    {action_respond_info("参数'ID'是必须的，请使用命令'SET_ACTIVE_SPOOL ID=数字'")}
  {% endif %}

# Spoolman配套GCODE，用于撤销标记使用中的料盘
[gcode_macro CLEAR_ACTIVE_SPOOL]
description: Spoolman配套GCODE，用于撤销标记使用中的料盘
gcode:
  {action_call_remote_method("spoolman_set_active_spool",spool_id=None)}

#####################################################################
# 耗材切换
#####################################################################
## 从挤出机撤出耗材
[gcode_macro UNLOAD_FILAMENT]
description: 撤出耗材
gcode:
    {% if printer.webhooks.state|lower == 'printing' %}        # 判断是否正在打印
        PAUSE                                                  # 暂停打印
    {% endif %}
    {% if 'save_variables' in printer %}                       # 如果使用了变量存储
        {% set svv = printer.save_variables.variables %}       # 读取存储的变量参数
        {% if 'extruder_temp' in svv %}                        # 如果变量中存在extruder_temp参数
            {% set TEMP = svv.extruder_temp %}                 # 设置挤出温度为变量参数
        {% endif %}
    {% else %}                                                 # 如果没使用变量
        {% set TEMP = params.TEMP|default(230)|float %}        # 设置挤出温度
    {% endif %}
    {% set DISTANCE = params.DISTANCE|default(200)|float %}    # 设置耗材抽取长度
    M400                                                       # 等待操作全部完成
    M109 S{TEMP}                                               # 等待热端温度
    #M82                                                        # 使用绝对距离
    #G92 E0                                                     # 重置挤出机
    #G1 E10 F300                                                # 先挤出10mm，排除掉上次回抽进来的料
    _FORM_TIP                                                  # 耗材尖端成型
    G1 E{DISTANCE|float * -1} F2000                            # 将耗材一次性抽出
    SAVE_VARIABLE VARIABLE=filament_insert VALUE='"false"'     # 标记耗材已取出
    CLEAR_ACTIVE_SPOOL                                         # Spoolman撤销激活料盘

## 装载耗材到挤出机
[gcode_macro LOAD_FILAMENT]
description: 装载耗材
gcode:
    {% if 'save_variables' in printer %}                       # 如果使用了变量存储
        {% set svv = printer.save_variables.variables %}       # 读取存储的变量参数
        {% if 'extruder_temp' in svv %}                        # 如果变量中存在extruder_temp参数
            {% set TEMP = svv.extruder_temp %}                 # 设置挤出温度为变量参数
        {% endif %}
    {% else %}                                                 # 如果没使用变量
        {% set TEMP = params.TEMP|default(230)|float %}        # 设置挤出温度
    {% endif %}
    {% set DISTANCE = params.DISTANCE|default(130)|float %}    # 设置耗材拉扯长度
    M400                                                       # 等待操作全部完成
    M109 S{TEMP}                                               # 检测热端温度
    M83                                                        # 使用相对距离
    G92 E0                                                     # 重置挤出机
    G1 E{DISTANCE|float} F300                                  # 加载耗材
    G92 E0                                                     # 重置挤出机
    SAVE_VARIABLE VARIABLE=filament_insert VALUE='"true"'      # 标记耗材已插入

#####################################################################
# 耗材尖端成型
# 修改自https://github.com/moggieuk/Happy-Hare/blob/main/config/base/mmu_form_tip.cfg
#####################################################################
[gcode_macro _FORM_TIP_VARS]
description: 耗材尖端成型配置参数
gcode: # 保留为空

# 步骤1 - 推料
# 推料是在冷却移动之前对耗材进行初始挤压，通过体积和挤压强度进度来描述，可在打印或独立模式下分别控制
variable_ramming_volume            : 0      ; 体积，单位mm³，0表示禁用（也可以选择由切片软件控制）
variable_ramming_volume_standalone : 0      ; 独立模式下体积，单位mm³，0表示禁用

# 可选设置温度变化（降低），若use_fast_skinnydip为False，则在喷嘴分离前等待，否则在冷却移动后等待，完成尖端成型后恢复温度
variable_toolchange_temp           : 0      ; 0表示不变温，否则设置新的温度
variable_toolchange_fan_assist     : False  ; 是否启用冷却风扇加快温度变化
variable_toolchange_fan_speed      : 50     ; 若启用冷却风扇，则设定风扇速度的百分比

# 步骤2 - 喷嘴分离
# 将耗材快速从熔融区分离，然后减速移动到冷却管。初始快速移动应尽量快，以防止挤出过长耗材或产生细丝
variable_unloading_speed_start     : 80     ; 初始快速移动速度，单位mm/s
variable_unloading_speed           : 18     ; 缓慢移动至冷却区的速度，单位mm/s

# 步骤3 - 冷却移动
# 冷却移动使耗材在冷却管中来回移动，使其逐渐冷却而不形成球状尖端
variable_cooling_tube_position     : 25     ; 冷却管起始位置，从喷嘴内部到加热块上方（单位mm）
variable_cooling_tube_length       : 16     ; 冷却管长度（单位mm）
variable_initial_cooling_speed     : 10     ; 初始慢速移动，固化尖端并冷却细丝（单位mm/s）
variable_final_cooling_speed       : 50     ; 最终快速移动，用于打断细丝（单位mm/s）
variable_cooling_moves             : 4      ; 冷却区来回移动次数（建议2-4次）

# 步骤4 - 浸泡（Skinnydip）
# Skinnydip是最终的移动，适用于某些材料，如PLA，通过再次插入以烧掉细微的细丝
variable_use_skinnydip             : False  ; True表示启用，False表示禁用
variable_skinnydip_distance        : 30     ; 插入到冷却管末端的距离，单位mm
variable_dip_insertion_speed       : 30     ; 中速插入，适合融化细丝的速度，过慢可能引起熔融耗材的拉丝，单位mm/s
variable_dip_extraction_speed      : 70     ; 提取速度，单位mm/s，大约是插入速度的两倍以防止新丝形成
variable_melt_zone_pause           : 0      ; 熔融区暂停时间，单位ms，默认0
variable_cooling_zone_pause        : 0      ; 浸泡后冷却区暂停时间，单位ms，默认0
variable_use_fast_skinnydip        : False  ; False表示在浸泡移动中跳过温度变化等待

# 步骤5 - 停放
# 停放耗材以便推出
variable_parking_distance          : 100      ; 最终尖端成型结束后，耗材停放的距离，单位mm，0表示不移动
variable_extruder_eject_speed      : 25     ; 停放距离时的速度，单位mm/s

[gcode_macro _FORM_TIP]
description: 耗材尖端成型程序
gcode:
    {% set final_eject = params.FINAL_EJECT|default(0)|int %}
    {% set vars = printer['gcode_macro _FORM_TIP_VARS'] %}
    {% set unloading_speed_start = vars['unloading_speed_start']|int %}
    {% set unloading_speed = vars['unloading_speed']|int %}
    {% set ramming_volume = vars['ramming_volume']|float %}
    {% set ramming_volume_standalone = vars['ramming_volume_standalone']|float %}
    {% set cooling_tube_length = vars['cooling_tube_length']|float %}
    {% set cooling_tube_position = vars['cooling_tube_position']|float %}
    {% set initial_cooling_speed = vars['initial_cooling_speed']|int %}
    {% set final_cooling_speed = vars['final_cooling_speed']|int %}
    {% set cooling_moves = vars['cooling_moves']|int %}
    {% set toolchange_temp = vars['toolchange_temp']|default(0)|int %}
    {% set use_skinnydip = vars['use_skinnydip']|default(false)|lower == 'true' %}
    {% set use_fast_skinnydip = vars['use_fast_skinnydip']|default(false)|lower == 'true' %}
    {% set skinnydip_distance = vars['skinnydip_distance']|float %}
    {% set dip_insertion_speed = vars['dip_insertion_speed']|int %}
    {% set dip_extraction_speed = vars['dip_extraction_speed']|int %}
    {% set melt_zone_pause = vars['melt_zone_pause']|default(0)|int %}
    {% set cooling_zone_pause = vars['cooling_zone_pause']|default(0)|int %}
    {% set extruder_eject_speed = vars['extruder_eject_speed']|int %}
    {% set parking_distance = vars['parking_distance']|default(0)|float %}
    {% set orig_temp = printer.extruder.target %}
    {% set next_temp = params.NEXT_TEMP|default(orig_temp)|int %}

    # 有助于根据模式自定义操作的状态
    {% set printing = printer.webhooks.state|lower == 'printing' %}

    SAVE_GCODE_STATE NAME=FORM_TIP_state

    G91 # 相对定位
    M83 # 相对挤出
    G92 E0

    # 步骤1 - 推料
    # 这是一个通用的推料过程，与切片程序不同，不包含在擦拭塔上的移动
    {% set ramming_volume = ramming_volume_standalone if not printing else ramming_volume %}
    {% if ramming_volume > 0 %} # 独立推料
        {% set ratio = ramming_volume / 23.0 %}
        G1 E{0.5784 * ratio} F299 #7
        G1 E{0.5834 * ratio} F302 #3
        G1 E{0.5918 * ratio} F306 #6
        G1 E{0.6169 * ratio} F319 #6
        G1 E{0.3393 * ratio} F350 #0
        G1 E{0.3363 * ratio} F350 #0
        G1 E{0.7577 * ratio} F392 #6
        G1 E{0.8382 * ratio} F434 #3
        G1 E{0.7776 * ratio} F469 #9
        G1 E{0.1293 * ratio} F469 #9
        G1 E{0.9673 * ratio} F501 #2
        G1 E{1.0176 * ratio} F527 #2
        G1 E{0.5956 * ratio} F544 #6
        G1 E{0.4555 * ratio} F544 #6
        G1 E{1.0662 * ratio} F552 #4
    {% endif %}

    # 步骤2 - 回抽/喷嘴分离
    # 这是耗材尖端形状形成的关键步骤。速度越快，尖端越长越尖，细丝越多
    {% set total_retraction_distance = cooling_tube_position - cooling_tube_length - 15 %}
    G1 E-15 F{1.0 * unloading_speed_start * 60} # 默认的固定值
    {% if total_retraction_distance > 0 %}
        G1 E-{(0.7 * total_retraction_distance)|round(2)} F{1.0 * unloading_speed * 60}
        G1 E-{(0.2 * total_retraction_distance)|round(2)} F{0.5 * unloading_speed * 60}
        G1 E-{(0.1 * total_retraction_distance)|round(2)} F{0.3 * unloading_speed * 60}
    {% endif %}

    # 在冷却移动之前设置换料温度（不适用于快速skinnydip模式）
    {% if toolchange_temp > 0 %}
        M104 S{toolchange_temp}
        {% if not use_fast_skinnydip %}
            _WAIT_FOR_TEMP
        {% endif %}
    {% endif %}

    # 步骤3 - 冷却移动
    # 固定尖端形状并帮助断开形成的细丝
    {% set speed_inc = (final_cooling_speed - initial_cooling_speed) / (2 * cooling_moves - 1) %}
    {% for move in range(cooling_moves) %}
        {% set speed = initial_cooling_speed + speed_inc * move * 2 %}
        G1 E{cooling_tube_length} F{speed * 60}
        G1 E-{cooling_tube_length} F{(speed + speed_inc) * 60}
    {% endfor %}

    # 在冷却移动完成后等待挤出机达到换料温度（仅适用于快速skinnydip模式）
    {% if toolchange_temp > 0 and use_skinnydip and use_fast_skinnydip %}
        _WAIT_FOR_TEMP
    {% endif %}

    # 步骤4 - 浸泡（Skinnydip）
    # 燃烧掉非常细微的细丝（适合PLA）
    {% if use_skinnydip %}
        G1 E{skinnydip_distance} F{dip_insertion_speed * 60}
        G4 P{melt_zone_pause}
        G1 E-{skinnydip_distance} F{dip_extraction_speed * 60}
        G4 P{cooling_zone_pause}
    {% endif %}

    # 设置目标温度为下一个耗材温度或初始温度。注意这里不等待，因为温度在后续换料过程中会稳定
    M104 S{next_temp}
    
    # 步骤5 - 停放
    # 可选的停放耗材在固定位置或完全推出（测试时）
    {% if final_eject %}
        G92 E0
        G1 E-80 F{extruder_eject_speed * 60}
    {% elif parking_distance > 0 %}
        M82 # 绝对挤出
        G1 E-{parking_distance} F{extruder_eject_speed * 60}
    {% endif %}

    # 恢复状态
    RESTORE_GCODE_STATE NAME=FORM_TIP_state

[gcode_macro _WAIT_FOR_TEMP]
description: 挤出机温度调整辅助程序
gcode:
    {% set vars = printer['gcode_macro _FORM_TIP_VARS'] %}
    {% set toolchange_temp = vars['toolchange_temp']|default(0)|int %}
    {% set toolchange_use_fan = vars['toolchange_fan_assist']|default(false)|lower == 'true' %}
    {% set toolchange_fan_speed = vars['toolchange_fan_speed']|default(50)|int %}
    {% set orig_fan_speed = printer.fan.speed %}

    {% if toolchange_use_fan %}
        M106 S{(toolchange_fan_speed / 100 * 255)|int}
        M109 S{toolchange_temp}
        M106 S{(orig_fan_speed * 255)|int}
    {% else %}
        M109 S{toolchange_temp}
    {% endif %}
