# This macro was provided by discord user Garrettwp to whom i give my thanks for sharing it with me.
# I have tweaked it a lot.
# They are based on the great Annex magprobe dockable probe macros "#Originally developed by Mental,
# modified for better use on K-series printers by RyanG and Trails", kudos to them.
# That macro as since evolved into a klipper plugin that currently is pending inclusion in klipper, 
# more information here, https://github.com/Annex-Engineering/Quickdraw_Probe/tree/main/Klipper_Macros
# User richardjm revised the macro variables and added some functions, thanks a lot
# by standing on the shoulders of giants, lets see if we can see further
#
# the current home for this version is https://github.com/jlas1/Klicky-Probe 
# the 1000 values below is to give an error instead of doing something wrong, hopefully, this won't be used is a printer larger than 1 meter

[gcode_macro _User_Variables]
variable_verbose:             True    # 日志输出详细内容
variable_debug:              False    # 调试模式输出
variable_travel_speed:         300    # 运行这些宏时使用的移动速度
variable_move_accel:          1000    # 打印头移动时的加速度
variable_dock_speed:            50    # 对接探针移动时的速度
variable_release_speed:         75    # 对接后打印头以多快速度移开支架
variable_z_drop_speed:          30    # Z下降速度

variable_safe_z:         	    20    # 装载/停靠和归零时的安全Z高度
# 如果为真，当Z未复位时，将使床远离喷嘴
variable_enable_z_hop:        True    # 对于在重力作用下显著下降的床，将此设置为False（几乎达到Z最大值）

variable_max_bed_y:            350    # Y轴向床最大尺寸
variable_max_bed_x:            350    # X轴向床最大尺寸

# 如果使用独立的Z限位，在此设置限位的坐标，如果不使用将值设置为0
variable_z_endstop_x:          231
variable_z_endstop_y:          354

# 微动开关停靠坞的位置
variable_docklocation_x:       180    # X轴坐标
variable_docklocation_y:       354    # Y轴坐标
variable_docklocation_z:      -128    # Z轴坐标 (安装到龙门架为 -128)

#The following variables are used if the dock is deployed and retracted via a servo motor
variable_enable_dock_servo:  False    # Set to true if your klicky dock is servo-controlled
variable_servo_name:        'NAME'    # The name of the dock servo defined in printer.cfg under [servo]
variable_servo_deploy:          10    # This EXAMPLE is the value used to deploy the servo fully
variable_servo_retract:         11    # This EXAMPLE is the value used to retract the servo fully (initial_angle in [servo] config)
variable_servo_delay:          250    # This is a delay to wait the servo to reach the requested position, be carefull with high values

# 将微动开关放回到停靠坞需要移动的距离
Variable_dockmove_x:            50
Variable_dockmove_y:             0
Variable_dockmove_z:             0

# 将微动开关从停靠坞取下需要移动的距离
Variable_attachmove_x:           0
Variable_attachmove_y:          50
Variable_attachmove_z:           0

#Umbilical to help untangle the umbilical in difficult situations
variable_umbilical:          False    # should we untabgle the umbilical
variable_umbilical_x:           15    # X umbilical position
variable_umbilical_y:           15    # Y umbilical position

# 归位后打印头停靠的位置
variable_park_toolhead:       True    # 是否开启
variable_parkposition_x:        258
variable_parkposition_y:        304
variable_parkposition_z:        20

variable_version:                1    # Helps users to update the necessary variables, do not update if the variables above are not updated

# 以下内容无需修改
#Attach move2
Variable_attachmove2_x:          0    # intermediate toolhead movement to attach
Variable_attachmove2_y:          0    # the probe on the dock
Variable_attachmove2_z:          0    # (can be negative)

variable_home_backoff:          10    # how many mm to move away from the endstop after homing

variable_override_homing:        ''   # configures what axis to home first
                                      #  '' = default klicky behavior (tries to avoid the hitting the dock
                                      # 'X' = forces X to home first 
                                      # 'Y' = forces Y to home first  


# Do not modify below
gcode:
    {% set Mx = printer['configfile'].config["stepper_x"]["position_max"]|float %}
    {% set My = printer['configfile'].config["stepper_y"]["position_max"]|float %}
    {% set Ox = printer['configfile'].config["probe"]["x_offset"]|float %}
    {% set Oy = printer['configfile'].config["probe"]["y_offset"]|float %}
    {% set Oz = printer['configfile'].config["probe"]["z_offset"]|float %}

    # If x, y coordinates are set for z endstop, assign them
    {% if z_endstop_x != 0 or z_endstop_y != 0 %}
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ z_endstop_x }
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ z_endstop_y }

    # if no x, y coordinates for z endstop, assume probe is endstop and move toolhead to center of bed
    {% else %}
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ (Mx * 0.5) - Ox }
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ (My * 0.5) - Oy }
    {% endif %}
