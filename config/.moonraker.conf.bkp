[server]

[file_manager]
queue_gcode_uploads = True
enable_object_processing = True

[database]

[data_store]
temperature_store_size = 1200
gcode_store_size = 1000

[job_queue]
load_on_startup = True

[authorization]
trusted_clients = 
	10.0.0.0/8
	127.0.0.0/8
	169.254.0.0/16
	172.17.0.0/16
	192.168.0.0/16
	FE80::/10
	::1/128
cors_domains = 
	*://*.local
force_logins = False

[history]

[spoolman]
server = http://192.168.88.111:8088
sync_rate = 5

[timelapse]
output_path = ~/printer_data/timelapse/
frame_path = /tmp/timelapse/printer

[power Printer_power]
type = homeassistant
address = 192.168.88.111
port = 8123
device = switch.printer_power
token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiI3OTMzNzE5ODM3ZjA0NzI4OGI3M2MyMjYyM2VkYzMzNyIsImlhdCI6MTY3NTI1NTAzNywiZXhwIjoxOTkwNjE1MDM3fQ.IPcXYr2l2p88I3sX7Jrx_7eSQIbu7hPBLIRtFrI9kzg
domain = switch
off_when_shutdown = True
off_when_shutdown_delay = 1.
on_when_job_queued = True
locked_while_printing = True
restart_klipper_when_powered = True
restart_delay = 2.
bound_services = 
	klipper

[power _BED]
type = homeassistant
address = 192.168.88.111
port = 8123
device = switch.heater_bed_power
token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiI3OTMzNzE5ODM3ZjA0NzI4OGI3M2MyMjYyM2VkYzMzNyIsImlhdCI6MTY3NTI1NTAzNywiZXhwIjoxOTkwNjE1MDM3fQ.IPcXYr2l2p88I3sX7Jrx_7eSQIbu7hPBLIRtFrI9kzg
domain = switch
off_when_shutdown = True
off_when_shutdown_delay = 1.
locked_while_printing = True

[power _DRYING]
type = homeassistant
address = 192.168.88.111
port = 8123
device = switch.drying_power
token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiI3OTMzNzE5ODM3ZjA0NzI4OGI3M2MyMjYyM2VkYzMzNyIsImlhdCI6MTY3NTI1NTAzNywiZXhwIjoxOTkwNjE1MDM3fQ.IPcXYr2l2p88I3sX7Jrx_7eSQIbu7hPBLIRtFrI9kzg
domain = switch
off_when_shutdown = True
off_when_shutdown_delay = 1.
locked_while_printing = True

[mqtt]
address = 192.168.88.111
port = 1883
mqtt_protocol = v3.1.1
enable_moonraker_api = True
instance_name = voron
status_objects = 
	webhooks
	display_status
	idle_timeout
publish_split_status = False
default_qos = 0

[sensor mqtt_powermeter]
type = mqtt
name = Powermeter
state_topic = test_power/status
state_response_template = 
	{% set notification = payload|fromjson %}
	{set_result("power", notification["power"]|float)}
	{set_result("voltage", notification["voltage"]|float)}
	{set_result("current", notification["current"]|float)}
	{set_result("energy", notification["energy"]["by_minute"][0]|float * 0.000001)}

[octoprint_compat]

[update_manager]
enable_auto_refresh = True
refresh_interval = 24
enable_system_updates = True
enable_packagekit = True
channel = dev

[update_manager mainsail]
type = web
channel = beta
path = ~/mainsail
repo = mainsail-crew/mainsail

[update_manager katapult]
type = git_repo
origin = https://github.com/Arksine/katapult.git
path = ~/katapult
is_system_service = False

[update_manager timelapse]
type = git_repo
primary_branch = main
path = ~/moonraker-timelapse
origin = https://github.com/mainsail-crew/moonraker-timelapse.git
managed_services = klipper moonraker

[update_manager crowsnest]
type = git_repo
path = ~/crowsnest
origin = https://github.com/mainsail-crew/crowsnest.git
managed_services = crowsnest
install_script = tools/pkglist.sh

[update_manager client klipper_adaptive_bed_mesh]
type = git_repo
primary_branch = main
path = ~/klipper_adaptive_bed_mesh
origin = https://github.com/eamars/klipper_adaptive_bed_mesh.git
install_script = install.sh

[update_manager KlipperScreen]
type = git_repo
path = ~/KlipperScreen
origin = https://github.com/jordanruthe/KlipperScreen.git
env = ~/.KlipperScreen-env/bin/python
requirements = scripts/KlipperScreen-requirements.txt
install_script = scripts/KlipperScreen-install.sh
managed_services = KlipperScreen

[update_manager happy-hare]
type = git_repo
path = ~/Happy-Hare
origin = https://github.com/moggieuk/Happy-Hare.git
primary_branch = main
install_script = install.sh
managed_services = klipper

[mmu_server]
enable_file_preprocessor = False

