########################################################################################################################
# Happy Hare MMU 软件
#
# 根据您的设置编辑此文件
#
# 版权所有 (C) 2022  moggieuk#6538 (discord) moggieuk@hotmail.com
# 本文件可以根据 GNU GPLv3 许可证条款分发。
#
# 目标：Happy Hare MMU 硬件引脚配置
#
# (\_/)
# ( *,*)
# (")_(") Happy Hare 准备就绪
#
#
# 这是用于 MCU 类型未知的引脚别名
#
[mcu mmu]
serial: /dev/serial/by-id/XXX	# 对于 CANbus 设置，请更改为 `canbus_uuid: 1234567890`


# MMU MCU 板的引脚别名 ----------------------------------------------------------------------------------------
# ██████╗ ██╗███╗   ██╗     █████╗ ██╗     ██╗ █████╗ ███████╗
# ██╔══██╗██║████╗  ██║    ██╔══██╗██║     ██║██╔══██╗██╔════╝
# ██████╔╝██║██╔██╗ ██║    ███████║██║     ██║███████║███████╗
# ██╔═══╝ ██║██║╚██╗██║    ██╔══██║██║     ██║██╔══██║╚════██║
# ██║     ██║██║ ╚████║    ██║  ██║███████╗██║██║  ██║███████║
# ╚═╝     ╚═╝╚═╝  ╚═══╝    ╚═╝  ╚═╝╚══════╝╚═╝╚═╝  ╚═╝╚══════╝
# 创建别名以便将 MMU 引脚更轻松地集成到 Klippain 和 RatOS 中。别名名称与 mmu_hardware.cfg 文件中引用的名称匹配。
# 如果遇到问题，您也可以完全注释掉此别名定义，并直接在 mmu_hardware.cfg 中配置引脚名称。然而，建议使用别名。

# 注意：不为 TOOLHEAD_SENSOR、EXTRUDER_SENSOR 或 SYNC_FEEDBACK_SENSORS 创建别名，因为这些传感器很可能
# 在打印机的主 MCU 上。这些应直接在 mmu_hardware.cfg 中设置。
#
[board_pins mmu]
mcu: mmu # 假设使用外部/额外的 MCU 专用于 MMU
aliases:
    MMU_GEAR_UART={gear_uart_pin},
    MMU_GEAR_STEP={gear_step_pin},
    MMU_GEAR_DIR={gear_dir_pin},
    MMU_GEAR_ENABLE={gear_enable_pin},
    MMU_GEAR_DIAG={gear_diag_pin},

    MMU_GEAR_UART_1={gear_1_uart_pin},
    MMU_GEAR_STEP_1={gear_1_step_pin},
    MMU_GEAR_DIR_1={gear_1_dir_pin},
    MMU_GEAR_ENABLE_1={gear_1_enable_pin},
    MMU_GEAR_DIAG_1={gear_1_diag_pin},

    MMU_GEAR_UART_2={gear_2_uart_pin},
    MMU_GEAR_STEP_2={gear_2_step_pin},
    MMU_GEAR_DIR_2={gear_2_dir_pin},
    MMU_GEAR_ENABLE_2={gear_2_enable_pin},
    MMU_GEAR_DIAG_2={gear_2_diag_pin},

    MMU_GEAR_UART_3={gear_3_uart_pin},
    MMU_GEAR_STEP_3={gear_3_step_pin},
    MMU_GEAR_DIR_3={gear_3_dir_pin},
    MMU_GEAR_ENABLE_3={gear_3_enable_pin},
    MMU_GEAR_DIAG_3={gear_3_diag_pin},

    MMU_SEL_UART={selector_uart_pin},
    MMU_SEL_STEP={selector_step_pin},
    MMU_SEL_DIR={selector_dir_pin},
    MMU_SEL_ENABLE={selector_enable_pin},
    MMU_SEL_DIAG={selector_diag_pin},
    MMU_SEL_ENDSTOP={selector_endstop_pin},
    MMU_SEL_SERVO={selector_servo_pin},

    MMU_ENCODER={encoder_pin},
    MMU_GATE_SENSOR={gate_sensor_pin},
    MMU_NEOPIXEL={neopixel_pin},

    MMU_PRE_GATE_0={pre_gate_0_pin},
    MMU_PRE_GATE_1={pre_gate_1_pin},
    MMU_PRE_GATE_2={pre_gate_2_pin},
    MMU_PRE_GATE_3={pre_gate_3_pin},
    MMU_PRE_GATE_4={pre_gate_4_pin},
    MMU_PRE_GATE_5={pre_gate_5_pin},
    MMU_PRE_GATE_6={pre_gate_6_pin},
    MMU_PRE_GATE_7={pre_gate_7_pin},
    MMU_PRE_GATE_8={pre_gate_8_pin},
    MMU_PRE_GATE_9={pre_gate_9_pin},
    MMU_PRE_GATE_10={pre_gate_10_pin},
    MMU_PRE_GATE_11={pre_gate_11_pin},

    MMU_POST_GEAR_0={gear_sensor_0_pin},
    MMU_POST_GEAR_1={gear_sensor_1_pin},
    MMU_POST_GEAR_2={gear_sensor_2_pin},
    MMU_POST_GEAR_3={gear_sensor_3_pin},
    MMU_POST_GEAR_4={gear_sensor_4_pin},
    MMU_POST_GEAR_5={gear_sensor_5_pin},
    MMU_POST_GEAR_6={gear_sensor_6_pin},
    MMU_POST_GEAR_7={gear_sensor_7_pin},
    MMU_POST_GEAR_8={gear_sensor_8_pin},
    MMU_POST_GEAR_9={gear_sensor_9_pin},
    MMU_POST_GEAR_10={gear_sensor_10_pin},
    MMU_POST_GEAR_11={gear_sensor_11_pin},

