#####################################################################
# 共振补偿
# https://github.com/Klipper3d/klipper/blob/master/docs/Measuring_Resonances.md
#
# 依次执行命令，安装所需的依赖：
# 1)   sudo apt update
# 2)   sudo apt install python3-numpy python3-matplotlib libatlas-base-dev
# 3)   ~/klippy-env/bin/pip install -v numpy
#####################################################################

## 加速度传感器
#[adxl345]

## 打印头板载ADXL345
#-------------------------------------------------------------------
#cs_pin: vast:PA4
#spi_software_sclk_pin: vast:PA5
#spi_software_mosi_pin: vast:PA7
#spi_software_miso_pin: vast:PA6
#   打印机的X、Y和Z轴的加速度计轴。
#   如果加速度计的安装方向与打印机的方向不一致，
#   可能需要修改该设定。
#   例如，可以将其设置为"y, x, z"来交换X和Y轴。
#   如果加速度计方向是相反的，可能需要反转相应轴
#   （例如，"x, z, -y"）。
#   默认是"x, y, z"。
#axes_map: -y,z,-x
#   ADXL345的输出数据速率。ADXL345支持以下数据速率。
#   3200、1600、800、400、200、100、50和25。请注意，不建议
#   将此速率从默认的3200改为低于800的速率，这将大大影响
#   共振测量的质量。
#rate: 3200

## BigTreeTech OctoPus Pro v1.0 主板 SPI3
#-------------------------------------------------------------------
#cs_pin: PA15
#spi_software_sclk_pin: PB3
#spi_software_mosi_pin: PB5
#spi_software_miso_pin: PB4
#axes_map: -z,-y,-x 

## BigTreeTech S2DW v1.0
#-------------------------------------------------------------------
#[mcu btt_lis2dw]
#serial: /dev/serial/by-id/usb-Klipper_rp2040_455035712889CE68-if00

#[lis2dw]
#cs_pin: btt_lis2dw:gpio9
#spi_bus: spi1a
#spi_software_sclk_pin: btt_lis2dw:gpio10
#spi_software_mosi_pin: btt_lis2dw:gpio11
#spi_software_miso_pin: btt_lis2dw:gpio8
#axes_map: -z,-y,-x

## 共振测试相关设置
#[resonance_tester]
#accel_chip: lis2dw                # 使用的加速度传感器名称
#accel_chip: adxl345               # 使用的加速度传感器名称
#probe_points: 175,175,20         # 共振测试的坐标点(X,Y,Z)
#min_freq: 5                       # 共振测试的最小频率
#max_freq: 133                     # 共振测试的最大频率
#accel_per_hz: 75                  # 每赫兹加速度(mm/sec)，加速度=每赫兹加速度*频率，如果共振过于强烈，可以减少该值。默认75
#hz_per_sec: 1                     # 测试的速度，较小的值会加长测试时间，较大的值会降低测试精度，(Hz/sec == sec^-2)，默认1

## 共振补偿
#  根据测试的结果，将对应数值填入。测试的时候先注释掉！
[input_shaper]
#   输入整形器的 X 轴频率(Hz)。通常这是希望被输入整形器消除的
#   X 轴共振频率。对于更复杂的整形器，例如2- 和 3-hump EI 输入
#   整形器，设置这个参数可能需要考虑其他特性。
#   默认值是0，禁用 X 轴输入整形。
shaper_freq_x: 54.2 #43.6
#   输入整形器的 Y 轴频率(Hz)。通常这是希望被输入整形器消除的
#   Y 轴共振频率。对于更复杂的整形器，例如2- 和 3-hump EI 输入
#   整形器，设置这个参数可能需要考虑其他特性。
#   默认值是0，禁用 Y 轴输入整形。
shaper_freq_y: 47.2 #56.5
#   用于 X 和 Y 轴的输入整形器。支持的输入整形器有 zv、mzv、
#   zvd、ei、2hump_ei 和 3hump_ei。
#   默认为 mzv 输入整形器。
shaper_type: mzv
#   如果没有设置 shaper_type，可以用这两个参数来单独配置 X
#   和 Y 轴的 输入整形器。
#   该参数支持全部shaper_type 支持的选项。
#shaper_type_x: mzv
#shaper_type_y: mzv
#   X 和 Y 轴的共振抑制比例，可以用来改善振动抑制效果。
#   默认值是 0.1，适用于大多数打印机。
#   大多数情况下不需要调整这个值。
#damping_ratio_x: 0.1
#damping_ratio_y: 0.1



## 共振测试
[gcode_macro RESONANCES_TEST]
description: 共振测试
gcode:
  G28                                                 # 归零
  QGL                                                 # 调平
  TURN_OFF_HEATERS                                    # 关闭加热器
  M107                                                # 关闭风扇
  #M141                                               # 关闭排气扇
  _MESSAGE TEXT="INPUT SHAPER: 检测传感器是否正常"
  MEASURE_AXES_NOISE                                  # 检测传感器是否正常
  _MESSAGE TEXT="INPUT SHAPER: 共振测试开始"
  _MESSAGE TEXT="INPUT SHAPER: 测试X轴"
  TEST_RESONANCES AXIS=X                              # 测试X轴
  _MESSAGE TEXT="INPUT SHAPER: 测试Y轴"
  TEST_RESONANCES AXIS=Y                              # 测试Y轴
  _MESSAGE TEXT="INPUT SHAPER: 共振测试完成"
  _MESSAGE TEXT="INPUT SHAPER: 正在后台生成图形，请稍后..."
  RUN_SHELL_COMMAND CMD=plot_graph PARAMS=SHAPER      # 生成测试结果

## 皮带测试
[gcode_macro BELT_TEST]
description: 共振测试分析皮带
gcode:
  G28                                                 # 归零
  QGL                                                 # 调平
  TURN_OFF_HEATERS                                    # 关闭加热器
  M107                                                # 关闭风扇
  #M141                                               # 关闭排气扇
  _MESSAGE TEXT="BELT TEST: 检测传感器是否正常"
  MEASURE_AXES_NOISE                                  # 检测传感器是否正常
  _MESSAGE TEXT="BELT TEST: 共振测试开始"
  _MESSAGE TEXT="BELT TEST: 测试B皮带"
  TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data NAME=b     # 测试B皮带
  _MESSAGE TEXT="BELT TEST: 测试A皮带"
  TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=a    # 测试A皮带
  _MESSAGE TEXT="BELT TEST: 共振测试完成"
  _MESSAGE TEXT="BELT TEST: 正在后台生成图形，请稍后..."
  RUN_SHELL_COMMAND CMD=plot_graph PARAMS=BELT        # 生成测试结果

# 生成测试结果
[gcode_shell_command plot_graph]
command: bash /home/samuel/printer_data/config/scripts/plot_graph.sh    # 脚本位置
timeout: 360.0                                                          # 超时时间
verbose: True                                                           # 是否显示详细日志
