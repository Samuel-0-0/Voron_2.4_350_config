#####################################################################
# 基础配置
#####################################################################

## 在屏幕上面显示信息，配置[display]后，默认会自动加载
## 为了防止部分配置中有M117命令导致报错，手动加载
[display_status]
#显示信息： M117 <消息内容>
#设置构建百分比：M73 P<百分比数字>

## 在命令窗口回显消息
[respond]
# 使用方法：M118 <消息内容>
# 或者 RESPOND TYPE=error MSG="<消息内容>"，TYPE不填则使用默认值
default_type: command            # 默认输出类型
#  可以选择的输出类型
#       echo: "echo: " (默认)
#       command: "// "
#       error: "!! "
#default_prefix: >>             # 默认输出前缀，修改后替换输出前缀

## 打印消息
[gcode_macro _MESSAGE]
description: 在屏幕和终端打印消息，使用方法：_MESSAGE [LCD=true] TEXT="<消息内容>"
gcode:
    {% if params.LCD|default('false') == 'true' %} M117 {params.TEXT} {% endif %}
    {action_respond_info(params.TEXT)}

## MQTT推送消息，需要在moonraker配置好MQTT服务
[gcode_macro _PUBLISH]
description: 用MQTT推送消息，使用方法：_PUBLISH PAYLOAD="<消息内容>"
gcode:
  {% set data = params.PAYLOAD|default(None) %}
  {action_call_remote_method("publish_mqtt_topic",
                             topic="klipper/user_message",
                             payload=data,
                             qos=0,
                             retain=False,
                             use_prefix=True)}

# 支持切片软件的圆弧命令(G2/G3)，上位机性能低的不建议使用
[gcode_arcs]
resolution: 0.1

# 支持手动移动步进电机进行诊断，使用SET_KINEMATIC_POSITION功能所需
[force_move]
# 使用方法：FORCE_MOVE STEPPER=<电机名称> DISTANCE=<移动距离> VELOCITY=<速度> [ACCEL=<加速度>]
enable_force_move: True

# 固件耗材回缩，启用G10、G11支持
[firmware_retraction]
retract_length: 0.75           # G10挤出机回抽耗材长度，G11挤出机挤出耗材长度，默认0mm
retract_speed: 60              # G10回抽速度，默认20mm/s
unretract_extra_length: 0      # G11挤出机挤出耗材额外增加的长度
unretract_speed: 60            # G11挤出速度，默认10mm/s

## 指定G-CODE文件保存位置
[virtual_sdcard]
path: ~/printer_data/gcodes

## 暂停/恢复功能，支持位置储存和恢复
[pause_resume]

## 排除打印对象 (aka Marlin/RRF M486 commands)
[exclude_object]

## 排除打印对象宏
[gcode_macro M486]
description: 排除打印对象
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("请先添加 [exclude_object] 配置")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}
