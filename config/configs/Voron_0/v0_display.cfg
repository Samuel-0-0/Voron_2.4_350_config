#####################################################################
# 适配v0裙边按钮与屏幕套件
#####################################################################

## 显示屏设置
[display]
lcd_type: uc1701                 # 显示屏驱动类型
cs_pin: PA15                     # 显示屏片选CS引脚
a0_pin: PA9                      # 显示屏数据A0/RS引脚
rst_pin: PA10                    # 显示屏复位RST脚
contrast: 30                     # 显示对比度
spi_software_sclk_pin: PB3       # 对应屏幕SCL
spi_software_mosi_pin: PB5       # 对应屏幕SDA
spi_software_miso_pin: PB4       # 其实无用，只是必须要填
display_group: __v0_display      # 要在屏幕上面显示的display_data组的名字

# v0仓室图形
[display_glyph chamber]
data:
    0000000000000000
    1111111111111111
    1000000000000001
    1000001111000001
    1111101001011111
    1000001111000001
    1000000110000001
    1000000000000001
    1011111111111101
    1000000000000001
    1000000000000001
    1000000000000001
    1000000000000001
    1000000000000001
    1111111111111111
    0000000000000000

# voron图形
[display_glyph voroninv]
data:
    0000001110000000
    0000111111100000
    0001111111110000
    0111111111111100
    1111100111001110
    1111001110011110
    1110011100111110
    1100111001111110
    1111110011100110
    1111100111001110
    1111001110011110
    1110011100111110
    0111111111111100
    0001111111110000
    0000111111100000
    0000001110000000

# 温度计
[display_glyph thermometer]
data:
    0000000000000000
    0000000000000000
    0000000000111000
    0000000001000100
    0000000010010100
    0000000100100100
    0000001001001000
    0000010010010000
    0001100100100000
    0010001001000000
    0100100010000000
    0101110100000000
    0100100100000000
    0010001000000000
    0001110000000000
    0000000000000000

# 爱心voron
[display_glyph voron_heart]
data:
    0000000000000000
    0011110001111100
    0111111111111110
    1111110011001111
    1111100110011111
    1111001100111111
    1111111001111111
    0111110011001110
    0111100110011110
    0011001100111100
    0001111111111000
    0000111111110000
    0000011111100000
    0000001111000000
    0000000110000000
    0000000000000000

# 构造模板
[display_template _vheater_temperature]
param_heater: "extruder"
text:
  {% if param_heater in printer %}
    # 显示图形
    {% if param_heater == "heater_bed" %}
      {% if printer[param_heater].target %}
        {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
        ~bed_heat{frame}~
      {% else %}
        ~bed~
      {% endif %}
    {% else %}
      ~extruder~
    {% endif %}
    # 显示温度值
    { "%3.0f" % (printer[param_heater].temperature,) }
    # 显示目标值
    {% if printer[param_heater].target and (printer[param_heater].temperature - printer[param_heater].target)|abs > 2 %}
      ~right_arrow~
      { "%0.0f" % (printer[param_heater].target,) }
    {% endif %}
    ~degrees~
  {% endif %}

# 挤出机温度
[display_data __v0_display extruder]
position: 0, 0 # 第一行左侧
text: { render("_vheater_temperature", param_heater="extruder") }

# 模型风扇
[display_data __v0_display fan]
position: 0, 9 # 第一行右侧
text:
  {% if 'fan' in printer %}
    {% set speed = printer.fan.speed %}
    {% if speed %}
      {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
      ~fan{frame}~
    {% else %}
      ~fan1~
    {% endif %}
    { "{:>4.0%}".format(speed) }
  {% endif %}

# 热床温度
[display_data __v0_display bed]
position: 1, 0 # 第二行左侧
text: { render("_vheater_temperature", param_heater="heater_bed") }

# 仓温
[display_data __v0_display chamber]
position: 1, 9 # 第二行右侧
text:
  ~chamber~
  { "%3.0f" % printer["temperature_sensor Chamber"].temperature }
  ~degrees~

# 非特定内容显示
[display_data __v0_display print_status]
position: 2, 0 # 第三行
text: 
  {% if printer.display_status.message %}
    { printer.display_status.message }
  {% elif printer.idle_timeout.printing_time|int != 0 %}
    {% set pos = printer.motion_report.live_position %}
    { "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }
  {% else %}
    ~feedrate~
    { "{:>4.0%}".format(printer.gcode_move.speed_factor) }
  {% endif %}

# 打印进度
[display_data __v0_display progress_text]
position: 3, 0 # 第四行左侧
text:
  {% set progress = printer.virtual_sdcard.progress %}
  { "{:^6.0%}".format(progress) }

# 打印进度条
[display_data __v0_display progress_bar]
position: 3, 11 # 第四行
text:
  {% set progress = printer.virtual_sdcard.progress %}
  { draw_progress_bar(3, 0, 16, progress) }

# 打印时间
[display_data __v0_display printing_time]
position: 3, 9 # 第四行右侧
text:
  {% set ptime = printer.print_stats.total_duration %}
  { "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }



