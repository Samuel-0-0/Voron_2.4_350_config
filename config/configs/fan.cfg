#####################################################################
# 风扇
#####################################################################

## 模型冷却风扇
[fan]
pin: vast:PA2                       # 风扇控制引脚
kick_start_time: 1.0                # 风扇启动后全速的运行时间，单位秒
max_power: 1.0                      # 风扇最大输出功率，0~1对应0%~100%（默认：1.0）
off_below: 0.20                     # 防止风扇失速的最小功率
#cycle_time: 0.01                   # 默认100HZ PWM信号：0.01 ，25KHZ PWM信号：0.00004

## 喉管散热风扇
[heater_fan hotend_fan]
pin: vast:PA1                       # 风扇控制引脚
kick_start_time: 1.0                # 风扇启动后全速的运行时间，单位秒
max_power: 1.0                      # 风扇最大输出功率，0~1对应0%~100%（默认：1.0）
heater: extruder                    # 对应检测温度的设备
heater_temp: 50.0                   # 风扇启动温度阀值
#fan_speed: 1.0                     # 限制风扇最高转速

## 驱动散热风扇 FAN0
[fan_generic tmc_fan]
pin: PA8                            # 风扇控制引脚
kick_start_time: 1.0                # 风扇启动后全速的运行时间，单位秒
max_power: 0.9                      # 风扇最大输出功率，0~1对应0%~100%（默认：1.0）
off_below: 0.3                      # 防止风扇失速的最小功率值

## XY轴电机散热风扇 FAN1
[fan_generic motor_fan]
pin: PE5                            # 风扇控制引脚
kick_start_time: 1.0                # 风扇启动后全速的运行时间，单位秒
max_power: 0.8                      # 风扇最大输出功率，0~1对应0%~100%（默认：1.0）
off_below: 0.4                      # 防止风扇失速的最小功率值

## 热床底部风扇 FAN2
#[temperature_fan cycle_fan]
#pin: PD12
#max_power: 0.7
#shutdown_speed: 0.0
#kick_start_time: 0.500
#sensor_type: NTC 100K MGB18-104F39050L32
#sensor_pin: PF4
#min_temp: 0
#max_temp: 50
#target_temp: 30

##############################
##         内循环           ##
##############################
#[output_pin nevermore]
#pin: z:P2.7
#pwm: true
#shutdown_value: 1
#value: 0

#[gcode_macro Nevermore_on]
#gcode:
#    set_pin pin=nevermore value=1

#[gcode_macro Nevermore_off]
#gcode:
#    set_pin pin=nevermore value=0

#[gcode_macro M141]
#description: Set temperature of chamber fan
#gcode:
#    SET_TEMPERATURE_FAN_TARGET temperature_fan=chamber target={params.S|default(0)}

## 内循环
[fan_generic nevermore]
pin: PD12
max_power: 1.0
shutdown_speed: 0.0

## 关闭内循环
[delayed_gcode NEVERMORE_OFF]
gcode:
    SET_FAN_SPEED FAN=nevermore SPEED=0

## 根据热床温度设置内循环风扇速度
[gcode_macro TEMPERATURE_ADJUSTED_PRINT_START_SETTINGS]
description: 根据热床温度设置内循环风扇速度
gcode:
    SAVE_GCODE_STATE NAME=temperature_adjust

    # 取消先前的等待事件
    UPDATE_DELAYED_GCODE ID=NEVERMORE_FAN_OFF DURATION=0

    # ABS/ASA
    {% if printer.heater_bed.target >= 100 %}
        # 打印的时候开启内循环
        SET_FAN_SPEED FAN=nevermore SPEED=1.0
    # PETG
    {% elif printer.heater_bed.target > 65 and printer.heater_bed.target < 100 %}
        # 打印PETG的时候关闭内循环
        SET_FAN_SPEED FAN=nevermore SPEED=0.0
    # 其他 (PLA/TPU)
    {% else %}
        # 打印的时候开启内循环，但控制运行速度
        SET_FAN_SPEED FAN=nevermore SPEED=0.5
    {% endif %}

    RESTORE_GCODE_STATE NAME=temperature_adjust


### 以下代码用于检测可测速风扇的运行状态，风扇异常则暂停打印并关闭热端加热 ###
# 具体操作方法：https://ellis3dp.com/Print-Tuning-Guide/articles/useful_macros/hotend_fan_monitoring.html

# Author: alch3my#9819 
# Requires a 3-wire fan with tachometer_pin defined. https://www.klipper3d.org/Config_Reference.html#heater_fan 
# The tach wire can be connected to a spare endstop pin.  
# Don't forget a pullup (^) on the tach pin (example: tachometer_pin: ^P1.29) 

# Monitoring loop. Begins at Klipper start. 
[delayed_gcode CHECK_ALL_FANS] 
# Klipper启动后就开始检测，如果要停用就设置为 0
initial_duration: 0
gcode: 
    HOTEND_FAN_CHECK 
    UPDATE_DELAYED_GCODE  ID=CHECK_ALL_FANS DURATION=3

# Change min_rpm and max_consecutive_stops to your desired values. 
[gcode_macro HOTEND_FAN_CHECK]
description: 检查热端散热风扇
variable_he_stop_count: 0 
gcode: 
    {% set  min_rpm = 3000|float %}
    {% set  max_consecutive_stops = 3 %}
    {% set  rpm  = printer[' heater_fan hotend_fan ' ].rpm|float %}
    {% set  he_target  = printer[printer.toolhead.extruder].target|float %}
    {% set  he_temp  = printer[printer.toolhead.extruder].temperature|float %}
    {% set  fan_on_temp  = printer.configfile.settings[' heater_fan hotend_fan ' ].heater_temp|float %}
    {% set  he_stop_count  = printer[" gcode_macro HOTEND_FAN_CHECK " ].he_stop_count|int %}

    {% if (he_target >= fan_on_temp) and (rpm < min_rpm) and (he_temp >= fan_on_temp) %} 
        SET_GCODE_VARIABLE  MACRO=HOTEND_FAN_CHECK VARIABLE=he_stop_count VALUE={he_stop_count + 1}
        M118 WARNING: Fan stoppage detected ({he_stop_count+1}/{max_consecutive_stops}). 
        M400 
        {% if printer[ " gcode_macro HOTEND_FAN_CHECK " ].he_stop_count|int >= max_consecutive_stops-1 %}
            FAN_STOPPAGE_ROUTINE 
        {% endif %} 
    {% else %}
        SET_GCODE_VARIABLE  MACRO=HOTEND_FAN_CHECK VARIABLE=he_stop_count VALUE =0
    {% endif %} 

# Insert the gcode that you want to run when a fan stoppage is detected. 
# This runs every ~3 seconds until the stop conditions are cleared. 
[gcode_macro FAN_STOPPAGE_ROUTINE] 
description: 检测到风扇异常则暂停打印并关闭热端加热
gcode: 
    # If not already paused 
    {% if printer[ ' pause_resume ' ].is_paused|int  == 0 %}
        #M117 !!FAN STOPPAGE!! 
        M118 FAN STOPPAGE DETECTED. PAUSING... 
        PAUSE 
        # Turn off the hotend.  
        # !! Don't forget to turn your hotend back on before resume. !! 
        # -- If using this guide's pause/resume macros (in useful_macros.html), the hotend will automatically reheat on resume 
        # -- (as long as the hotend is not turned off BEFORE pause is called) 
        SET_HEATER_TEMPERATURE  HEATER=extruder TARGET=0
    {% endif %} 

### 以上代码用于检测可测速风扇的运行状态，风扇异常则暂停打印并关闭热端加热 ###

