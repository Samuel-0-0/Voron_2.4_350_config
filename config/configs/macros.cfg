#####################################################################
# 自定义宏脚本
#####################################################################

## 打印消息
[gcode_macro _MESSAGE]
description: 在屏幕和终端打印消息，使用方法：_MESSAGE LCD=true TEXT="消息"
gcode:
    {% if params.LCD|default('false') == 'true' %} M117 {params.TEXT} {% endif %}
    {action_respond_info(params.TEXT)}

## MQTT推送消息
[gcode_macro _PUBLISH]
description: 用MQTT推送消息，使用方法：_PUBLISH PAYLOAD="消息"
gcode:
  {% set data = params.PAYLOAD|default(None) %}
  {action_call_remote_method("publish_mqtt_topic",
                             topic="klipper/user_message",
                             payload=data,
                             qos=0,
                             retain=False,
                             use_prefix=True)}

## 较低的运行电流和加速度
[gcode_macro LOW_CURRENT_ACCEL]
description: 较低的运行电流和加速度
gcode:
    {% set current = 0.69 %}
    {% set max_accel = 6000 %}
    {% set max_accel_to_decel = 3000 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={current}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={current}
    SET_VELOCITY_LIMIT ACCEL={max_accel} ACCEL_TO_DECEL={max_accel_to_decel}
    _MESSAGE TEXT="已将XY轴电机电流调整到{current}，已将加速度降低到{max_accel}"

## 恢复运行电流和加速度
[gcode_macro RESET_CURRENT_ACCEL]
description: 恢复运行电流和加速度
gcode:
    {% if 'tmc5160 stepper_x' in printer %}
        {% set run_current_x = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
        {% set run_current_y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% elif 'tmc2209 stepper_x' in printer %}
        {% set run_current_x = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
        {% set run_current_y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% elif 'tmc2240 stepper_x' in printer %}
        {% set run_current_x = printer.configfile.settings['tmc2240 stepper_x'].run_current|float %}
        {% set run_current_y = printer.configfile.settings['tmc2240 stepper_y'].run_current|float %}
    {% endif %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={run_current_x}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={run_current_y}
    {% set max_accel = printer.configfile.settings['printer'].max_accel %}
    {% set max_accel_to_decel = printer.configfile.settings['printer'].max_accel_to_decel %}
    SET_VELOCITY_LIMIT ACCEL={max_accel} ACCEL_TO_DECEL={max_accel_to_decel}
     _MESSAGE TEXT="已将XY轴电机电流恢复到{run_current_x}，已将加速度恢复到{max_accel}"

## 以较低的电流和加速度执行XY归零
[gcode_macro G28]
rename_existing: G28.8
gcode:
    {% set axes = 'XYZ'|select('in', params|upper)|join() %}
    {% if not axes %}
        {% set axes = 'XYZ' %}
    {% endif %}
    LOW_CURRENT_ACCEL
    _MESSAGE TEXT="归零：{axes}"
    STATUS_HOMING                                               # 设置SB灯颜色
    G28.8 {% for k in axes %}{' ' ~ k}{% endfor %}               # 执行归零


## 根据XYZ轴的情况判断是否需要进行归零
[gcode_macro _CG28]
description: 如果各轴未归零则执行归零操作，否则不执行归零
gcode:
    {% set axes = 'XYZ'|reject('in', printer.toolhead.homed_axes|upper)|join() %}  # 排除已经归零的
    {% if axes %}
        G28 {axes}                                              # 执行归零
    {% endif %}

## 龙门架调平
[gcode_macro QGL]
description: 龙门架调平
gcode:
    BED_MESH_CLEAR                     # 清除床网
    G28                                # 归零
    STATUS_LEVELING                    # 设置SB灯颜色
    QUAD_GANTRY_LEVEL                  # 龙门架调平
    STATUS_HOMING                      # 设置SB灯颜色
    G28 Z                              # 重新进行Z归零，修复QGL造成的误差

## 重置挤出机
[gcode_macro _RESET_EXTRUDER]
gcode:
    G92 E0

## 根据区域床尺寸自适应打印测试线，切片时尽量保证左测至少留空大于10
[gcode_macro _PURGE_LINE]
description: 在打印区域的左边打印一条线，让挤出机做好准备
gcode:
    {% set extruder_temp = params.EXTRUDER_TEMP %}
    {% set print_min_x = params.PRINT_MIN.split(",")[0]|int %}
    {% set print_min_y = params.PRINT_MIN.split(",")[1]|int %}
    _MESSAGE TEXT="参考最小坐标点：({print_min_x},{print_min_y})"                 # 将打印的最小坐标点信息输出到控制台
    {% if print_min_x > 25 %}                                                 # 如果最小坐标的X轴左边还有大于25mm的空间，则在打印区域的左边画线
        {% set line_start_x = print_min_x - 22 %}
        {% set line_end_x = print_min_x - 22 %}
        {% set line_start_y = print_min_y %}
        {% set line_end_y = print_min_y + 50 %}
    {% elif print_min_x < 25 and print_min_y > 25 %}                          # 如果最小坐标的X轴左边空间小于25mm，但是Y轴的下边有大于25mm的空间，则在打印区域的下边画线
        {% set line_start_x = print_min_x %}
        {% set line_end_x = print_min_x + 50 %}
        {% set line_start_y = print_min_y - 22 %}
        {% set line_end_y = print_min_y - 22 %}
    {% else %}                                                                # 如果两边空间都不足，强制在打印区域左边的床边缘画线
        {% set line_start_x = 5 %}
        {% set line_end_x = 5 %}
        {% set line_start_y = 5 %}
        {% set line_end_y = 55 %}
    {% endif %}
    _MESSAGE TEXT="移动到({line_start_x},{line_start_y})，加热热端，准备画线"      # 将打印头将要移动的目的坐标输出到控制台
    G90                                                                       # 切换到相对于原点的坐标系
    G1 X{line_start_x} Y{line_start_y} Z3 F6000                               # 移动到准备位置
    STATUS_HEATING                                                            # 设置SB灯颜色
    M109 S{extruder_temp}                                                     # 等待热端到达指定温度
    G1 Z1 F1500                                                               # 下移喷嘴
    _RESET_EXTRUDER                                                           # 重置挤出机
    G1 E10 F150                                                               # 在原地挤出10mm耗材，黏住喷嘴上面的料
    _RESET_EXTRUDER                                                           # 重置挤出机
    G1 X{line_end_x} Y{line_end_y} Z0.25 F1500 E10                            # 画一条直线
    _RESET_EXTRUDER                                                           # 重置挤出机
    G1 Z2 F3000                                                               # 抬高喷嘴


## 打印开始前执行的宏
# 在切片软件的开始G-CODE填入
# CURA 5.0：
# PRINT_START EXTRUDER={material_print_temperature_layer_0} BED={material_bed_temperature_layer_0} CHAMBER={build_volume_temperature} NOZZLE={machine_nozzle_size} FILAMENT={material_type} PRINT_MIN=%MINX%,%MINY% PRINT_MAX=%MAXX%,%MAXY%

# SuperSlicer：
# M190 S0
# M109 S0 ; uncomment to remove set&wait temp gcode added automatically after this start gcode
# PRINT_START EXTRUDER={first_layer_temperature[initial_extruder] + extruder_temperature_offset[initial_extruder]} BED=[first_layer_bed_temperature] CHAMBER=[chamber_temperature] NOZZLE=[nozzle_diameter] FILAMENT=[filament_type] PRINT_MIN={first_layer_print_min[0]},{first_layer_print_min[1]} PRINT_MAX={first_layer_print_max[0]},{first_layer_print_max[1]}

# OrcaSlicer:
# M190 S0
# M109 S0
# PRINT_START EXTRUDER=[nozzle_temperature_initial_layer] BED=[bed_temperature_initial_layer_single] CHAMBER=[chamber_temperature] NOZZLE={nozzle_diameter[0]} FILAMENT=[filament_type] PRINT_MIN={first_layer_print_min[0]},{first_layer_print_min[1]} PRINT_MAX={first_layer_print_max[0]},{first_layer_print_max[1]}
[gcode_macro PRINT_START]
description: 打印开始前进行的操作
gcode:
    CLEAR_PAUSE                                                                                             # 清空暂停缓存
    BED_MESH_CLEAR                                                                                          # 清除网床
    POWER_ON_HEATER_BED                                                                                     # 打开AC热床供电
    _CASELIGHT_ON                                                                                           # 打开顶部照明灯
    SET_FAN_SPEED FAN=tmc_fan SPEED=0.4                                                                     # 开启驱动冷却风扇
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(200)|int %}                                              # 从切片中获取打印头温度
    {% set BED_TEMP = params.BED|default(60)|int %}                                                         # 从切片中获取热床温度
    {% set CHAMBER_TEMP = params.CHAMBER|default(0)|int %}                                                  # 从切片中获取仓温温度
    {% set FILAMENT_TYPE = params.FILAMENT|default("PLA")|string %}                                         # 从切片中获取耗材类型
    {% set NOZZLE_SIZE = params.NOZZLE|default("0.4")|string %}                                             # 从切片中获取喷嘴大小
    SAVE_VARIABLE VARIABLE=filament_type VALUE='"{FILAMENT_TYPE}"'                                          # 保存耗材类型到变量文件
    SAVE_VARIABLE VARIABLE=extruder_temp VALUE={EXTRUDER_TEMP}                                              # 保存挤出机温度到变量文件
    STATUS_HEATING                                                                                          # 设置SB灯颜色
    M140 S{BED_TEMP}                                                                                        # 设置热床目标温度
    M104 S150                                                                                               # 设置打印头预热温度
    #TEMPERATURE_ADJUSTED_MESSAGE_START_SETTINGS                                                              # 开启内循环
    {% if CHAMBER_TEMP > 0 %}                                                                               # 判断如果需要仓温则进行指定操作
        M106 S255                                                                                           # 模型散热风扇开到最大，辅助空气循环
        SET_FAN_SPEED FAN=motor_fan SPEED=0.8                                                               # 开启XY电机冷却风扇
        TEMPERATURE_WAIT SENSOR="temperature_sensor Chamber" MINIMUM={CHAMBER_TEMP-5}                       # 等待仓温到达指定温度
        M107                                                                                                # 关闭模型散热风扇
    {% else %}
        SET_FAN_SPEED FAN=motor_fan SPEED=0.4                                                               # 开启XY电机冷却风扇
    {% endif %}                                                                                             # 结束判断
    M190 S{BED_TEMP}                                                                                        # 等待热床到达指定温度
    QGL                                                                                                     # 龙门架调平
    STATUS_MESHING                                                                                          # 设置SB灯颜色
    ADAPTIVE_BED_MESH_CALIBRATE AREA_START={params.PRINT_MIN} AREA_END={params.PRINT_MAX}                   # 自适应网床探测，需要安装插件 https://github.com/eamars/klipper_adaptive_bed_mesh
    MATERIAL_PA MATERIAL={FILAMENT_TYPE} NOZZLE={NOZZLE_SIZE}                                               # 自动调整PA值
    _PURGE_LINE EXTRUDER_TEMP={EXTRUDER_TEMP} PRINT_MIN={params.PRINT_MIN}                                  # 根据区域床尺寸自适应打印测试线
    STATUS_PRINTING                                                                                         # 设置SB灯颜色
    RESET_CURRENT_ACCEL                                                                                     # 恢复电流和加速度
    _MESSAGE TEXT="开始打印"
    UPDATE_DELAYED_GCODE ID=CASELIGHT_DELAY_OFF DURATION=300                                                # 5分钟后关闭顶部照明灯

## 打印结束后执行的宏
[gcode_macro PRINT_END]
description: 打印结束后进行的操作
gcode:
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 5, th.axis_maximum.z]|min %}
    G90                                                                                                     # 切换到相对于原点的坐标系
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000                                                                 # 抬高喷嘴避免烫坏打印件
    M400                                                                                                    # 等待缓存清空
    _RESET_EXTRUDER                                                                                         # 重置挤出机
    G1 E-5.0 F1800                                                                                          # 回抽5mm
    TURN_OFF_HEATERS                                                                                        # 关闭喷头加热
    G0 X{th.axis_maximum.x - 20} Y{th.axis_maximum.y - 20} Z{th.position.z + 50 if th.position.z < 100 else z_safe} F3600        # 停到指定位置
    M84                                                                                                     # 关闭步进电机
    M107                                                                                                    # 关闭模型散热风扇
    #Nevermore_off                                                                                          # 关闭内循环
    G4 P5000                                                                                                # 等待5秒
    POWER_OFF_HEATER_BED                                                                                    # 关闭AC热床电源
    SET_FAN_SPEED FAN=motor_fan SPEED=0                                                                     # 关闭电机散热风扇
    SET_FAN_SPEED FAN=tmc_fan SPEED=0                                                                       # 关闭驱动散热风扇

# 替换M109 (等待热端温度) 允许温度过冲
[gcode_macro M109]
rename_existing: M109.1
gcode:
    {% set s = params.S|float %}
	M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s - 0.5}
    {% endif %}


# 替换M190 (等待热床温度) 允许温度过冲
[gcode_macro M190]
rename_existing: M190.1
gcode:
    {% set s = params.S|float %}
	M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set heater bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s - 0.5}
    {% endif %}

## 自定义加速度和减速度
[gcode_macro M204]
description: 自定义加速度和减速度
rename_existing: M204.1
gcode:
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={s / 2.0}

## 热床需要先开启供电后才能加热
[gcode_macro SET_HEATER_TEMPERATURE]
description: 替换原有预热命令
rename_existing: _SET_HEATER_TEMPERATURE
gcode:
  {% set HEATER = params.HEATER|default("None") %}
  {% set TARGET = params.TARGET|default(0)|int %}
  {% if HEATER|lower == "heater_bed" %}
    POWER_ON_HEATER_BED
    _SET_HEATER_TEMPERATURE HEATER={HEATER} TARGET={TARGET}
  {% elif HEATER|lower == "drying" %}
    POWER_ON_DRYING
    _SET_HEATER_TEMPERATURE HEATER={HEATER} TARGET={TARGET}
  {% else %}
    _SET_HEATER_TEMPERATURE HEATER={HEATER} TARGET={TARGET}
  {% endif %}

## 打印头停到前面
[gcode_macro PARKF_RONT]
description: 打印头停到前面
gcode:
    #{% if printer.idle_timeout.state != "Printing" %}
        _CG28
        SAVE_GCODE_STATE NAME=park_front
        G90
        G0 X{printer.toolhead.axis_maximum.x / 2} Y{printer.toolhead.axis_minimum.y + 10} F10000
        RESTORE_GCODE_STATE NAME=park_front
    #{% else %}
    #    { action_respond_info("PARKFRONT disabled while printing!") }
    #{% endif %}

## 打印头停靠到中间
[gcode_macro PARK_CENTER]
description: 打印头停靠到中间
gcode:
    _CG28
    SAVE_GCODE_STATE NAME=part_center
    G90
    G0 X{printer.toolhead.axis_maximum.x / 2} Y{printer.toolhead.axis_maximum.y / 2} F10000
    RESTORE_GCODE_STATE NAME=part_center

## 打印头停靠到右后侧
[gcode_macro PARK_REARRIGHT]
description: 打印头停靠到右后侧
gcode:
    _CG28
    SAVE_GCODE_STATE NAME=park_rear_right
    G90
    G0 X{printer.toolhead.axis_maximum.x - 10} Y{printer.toolhead.axis_maximum.y - 10} F10000     
    RESTORE_GCODE_STATE NAME=park_rear_right

## 取消打印
[gcode_macro CANCEL_PRINT]
description: 取消打印
rename_existing: BASE_CANCEL_PRINT
gcode:
    {% set th = printer.toolhead %}
    {% set z_safe = [th.position.z + 5, th.axis_maximum.z]|min %}
    G90                                                                                                    # 切换到相对于原点的坐标系
    M400                                                                                                   # 等待缓存清空
    _RESET_EXTRUDER                                                                                      # 重置挤出机
    G1 E-5.0 F1800                                                                                         # 回抽5mm
    G0 X{th.axis_maximum.x - 20} Y{th.axis_maximum.y - 20} Z{th.position.z + 50 if th.position.z < 100 else z_safe} F3600        # 停到指定位置
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    BED_MESH_CLEAR
    {action_respond_info("取消打印")}

## 暂停打印
[gcode_macro PAUSE]
description: 暂停打印
rename_existing: BASE_PAUSE
variable_extrude: 5.0    # 暂停时耗材回抽量
gcode:
    #{% set E = printer["gcode_macro PAUSE"].extrude|float %}           # 从变量获取回抽量
    #{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}     # 设置停靠的X坐标
    #{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}     # 设置停靠的Y坐标
    {% set max_z = printer.toolhead.axis_maximum.z|float %}            # Z轴最大值
    {% set act_z = printer.toolhead.position.z|float %}                # Z轴当前坐标
    {% if (max_z - act_z) > 100.0 %}                                     # 判断并设置Z轴抬升量
        {% set z_safe = 100.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    SAVE_GCODE_STATE NAME=PAUSE_STATE                               # 保存当前位置坐标
    BASE_PAUSE                                                       # 暂停打印
    G91                                                               # 相对当前位置的坐标系
    #G1 E-{E} F2100                                                   # 回抽耗材
    G1 Z{z_safe} F900                                                # 抬升Z到安全坐标
    #G90                                                              # 相对原点的坐标系
    #G1 X{x_park} Y{y_park} F6000                                     # 移动到停靠点
    {action_respond_info("暂停打印")}

## 恢复打印
[gcode_macro RESUME]
description: 恢复打印
rename_existing: BASE_RESUME
gcode:
    #{% set E = printer["gcode_macro PAUSE"].extrude|float %}           # 从变量获取回抽量
    #CLEAN_NOZZLE                                                      # 清理喷嘴
    #G91                                                               # 相对当前位置的坐标系
    #G1 E{E} F2100                                                    # 挤出耗材
    RESTORE_GCODE_STATE NAME=PAUSE_STATE                           # 恢复到暂停前位置
    BASE_RESUME                                                     # 恢复打印
    {action_respond_info("恢复打印")}


#####################################################################
# PRESSURE ADVANCE 压力提前
#####################################################################

# 本配置会根据切片软件传递的耗材类型来自动调整PRESSURE ADVANCE参数
# 使用本宏需要在切片软件的开始G-CODE的PRINT_START后增加额外的内容：
# CURA 5.0
# FILAMENT={material_type}
# NOZZLE={machine_nozzle_size}

# Super Slicer
# FILAMENT=[filament_type]
# NOZZLE=[nozzle_diameter]

# Prusa Slicer
# FILAMENT=[filament_type]
# NOZZLE=[nozzle_diameter]

# Orca Slicer
# FILAMENT=[filament_type]
# NOZZLE={nozzle_diameter[0]}

## 根据耗材切换PA值
# 本宏使用的前置条件：将PA_CAL宏测试的不同耗材的最优值填入下方对应的项目内
[gcode_macro MATERIAL_PA]
# 宏使用方法：在PRINT_START宏内填入下方3行内容
# {% set FILAMENT_TYPE = params.FILAMENT|default("PLA")|string %}
# {% set NOZZLE_SIZE = params.NOZZLE|default("0.4")|string %}
# MATERIAL_PA MATERIAL={FILAMENT_TYPE} NOZZLE={NOZZLE_SIZE}
# 其中params.FILAMENT由切片传递，具体看上面的说明
description: 根据切片传递的耗材参数自动切换PA值
gcode:
    {% set material = params.MATERIAL|string %}
    {% set nozzle = params.NOZZLE|string %}
    {% if material == "ABS" %}
        {% if nozzle == "0.4" %}
            SET_PRESSURE_ADVANCE ADVANCE=0.04
            SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
            _MESSAGE TEXT="当前参数为：ABS耗材，0.4喷嘴，PA值0.04"
        {% elif nozzle == "0.6" %}
            SET_PRESSURE_ADVANCE ADVANCE=0.04
            SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
            _MESSAGE TEXT="当前参数为：ABS耗材，0.6喷嘴，PA值0.04"
        {% elif nozzle == "0.8" %}
            SET_PRESSURE_ADVANCE ADVANCE=0.04
            SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
            _MESSAGE TEXT="当前参数为：ABS耗材，0.8喷嘴，PA值0.04"
        {% endif %}
    {% elif material == "ASA" %}
        {% if nozzle == "0.4" %}
            SET_PRESSURE_ADVANCE ADVANCE=0.04
            SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
            _MESSAGE TEXT="当前参数为：ASA耗材，0.4喷嘴，PA值0.04"
        {% elif nozzle == "0.6" %}
            SET_PRESSURE_ADVANCE ADVANCE=0.04
            SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
            _MESSAGE TEXT="当前参数为：ASA耗材，0.6喷嘴，PA值0.04"
        {% elif nozzle == "0.8" %}
            SET_PRESSURE_ADVANCE ADVANCE=0.04
            SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
            _MESSAGE TEXT="当前参数为：ASA耗材，0.8喷嘴，PA值0.04"
        {% endif %}
    {% elif material == "PLA" %}
        {% if nozzle == "0.4" %}
            SET_PRESSURE_ADVANCE ADVANCE=0.032
            SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
            _MESSAGE TEXT="当前参数为：PLA耗材，0.4喷嘴，PA值0.032"
        {% elif nozzle == "0.6" %}
            SET_PRESSURE_ADVANCE ADVANCE=0.032
            SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
            _MESSAGE TEXT="当前参数为：PLA耗材，0.6喷嘴，PA值0.032"
        {% elif nozzle == "0.8" %}
            SET_PRESSURE_ADVANCE ADVANCE=0.032
            SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
            _MESSAGE TEXT="当前参数为：PLA耗材，0.8喷嘴，PA值0.032"
        {% endif %}
    {% elif material == "PETG" %}
        {% if nozzle == "0.4" %}
            SET_PRESSURE_ADVANCE ADVANCE=0.04
            SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
            _MESSAGE TEXT="当前参数为：PETG耗材，0.4喷嘴，PA值0.04"
        {% elif nozzle == "0.6" %}
            SET_PRESSURE_ADVANCE ADVANCE=0.04
            SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
            _MESSAGE TEXT="当前参数为：PETG耗材，0.6喷嘴，PA值0.04"
        {% elif nozzle == "0.8" %}
            SET_PRESSURE_ADVANCE ADVANCE=0.04
            SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
            _MESSAGE TEXT="当前参数为：PETG耗材，0.8喷嘴，PA值0.04"
        {% endif %}
    {% elif material == "PET" %}
        {% if nozzle == "0.4" %}
            SET_PRESSURE_ADVANCE ADVANCE=0.04
            SET_RETRACTION RETRACT_LENGTH=0.6 RETRACT_SPEED=30 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=20
            _MESSAGE TEXT="当前参数为：PET耗材，0.4喷嘴，PA值0.04"
        {% elif nozzle == "0.6" %}
            SET_PRESSURE_ADVANCE ADVANCE=0.04
            SET_RETRACTION RETRACT_LENGTH=0.6 RETRACT_SPEED=30 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=20
            _MESSAGE TEXT="当前参数为：PET耗材，0.6喷嘴，PA值0.04"
        {% elif nozzle == "0.8" %}
            SET_PRESSURE_ADVANCE ADVANCE=0.04
            SET_RETRACTION RETRACT_LENGTH=0.6 RETRACT_SPEED=30 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=20
            _MESSAGE TEXT="当前参数为：PET耗材，0.8喷嘴，PA值0.04"
        {% endif %}
    {% endif %}

## 备份配置文件到GitHub
# 参考文档 https://github.com/th33xitus/kiauh/wiki/How-to-autocommit-config-changes-to-github%3F
[gcode_shell_command backup_cfg]
command: bash ~/printer_data/config/scripts/git_backup.sh
timeout: 120.
verbose: True

[gcode_macro BACKUP_CFG]
description: 备份配置文件
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg
